/**
 * CKEditor editor.
 */
/*
Config.
 */
/*
Colors.
 */
/*
Grid.
 */
/*
Spacers.
 */
/*
Border.
 */
/*
Text.
 */
/*
Navs.
 */
/*
Navbar.
 */
/*
Breadcrumbs.
 */
/*
Alert.
 */
/*
Card.
 */
/*
Input.
 */
/*
List group.
 */
/*
Title.
 */
/*
Panel.
 */
/*
Lists.
 */
/*
Buttons.
 */
/*
Forms.
 */
/*
Tables.
 */
/*
Badge.
 */
/*
Colors.
 */
/*
Grid.
 */
/*
Spacers.
 */
/**
Border.
 */
/*
Text.
 */
/*
Navs.
 */
/*
Navbar.
 */
/*
Breadcrumbs.
 */
/*
Alert.
 */
/*
Card.
 */
/*
Grid view.
 */
/*
Buttons.
 */
/*
Input.
 */
/*
List group.
 */
/*
Tables.
 */
/*
Pagination.
 */
/*
Dropdown.
 */
/*
Badge.
 */
/*
Tooltip.
 */
/**
Thumbnail.
 */
/*
Icon.
 */
/**
 * CKEditor dialog.
 */
/**
 * The default stylesheet included on all requests.
 */
/*
Colors.
 */
/*
Grid.
 */
/*
Spacers.
 */
/**
Border.
 */
/*
Text.
 */
/*
Navs.
 */
/*
Navbar.
 */
/*
Breadcrumbs.
 */
/*
Alert.
 */
/*
Card.
 */
/*
Grid view.
 */
/*
Buttons.
 */
/*
Input.
 */
/*
List group.
 */
/*
Tables.
 */
/*
Pagination.
 */
/*
Dropdown.
 */
/*
Badge.
 */
/*
Tooltip.
 */
/**
Thumbnail.
 */
/*
Icon.
 */
/**
 * Includes Bootstrap 4.
 */
/*
Copyright (c) 2003-2014, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.md or http://ckeditor.com/license
*/
/*
mainui.css (part of editor.css)
=================================

This file styles the basic structure of the CKEditor user interface - the box
that holds everything.

CKEditor offers two main editing modes. The main UI blocks that compose these
modes are:

    For "Theme UI" mode, the one most generally used:

    +-- .cke_chrome ----------------------+
    |+-- .cke_inner ---------------------+|
    || +-- .cke_top -------------------+ ||
    || |                               | ||
    || +-------------------------------+ ||
    || +-- .cke_contents --------------+ ||
    || |                               | ||
    || +-------------------------------+ ||
    || +-- .cke_bottom ----------------+ ||
    || |                               | ||
    || +-------------------------------+ ||
    |+-----------------------------------+|
    +-------------------------------------+

    For "Inline Editing" mode:

    +-- .cke_chrome .cke_float------------+
    |+-- .cke_inner ---------------------+|
    || +-- .cke_top -------------------+ ||
    || |                               | ||
    || +-------------------------------+ ||
    |+-----------------------------------+|
    +-------------------------------------+

Special outer level classes used in this file:

    .cke_hc: Available when the editor is rendered on "High Contrast".

*/
/* The outer boundary of the interface. */
.cke_chrome {
  display: block;
  width: 100%;
  padding: 0;
  font-size: 14px;
  line-height: 1.4;
  color: #000;
  background-color: #fff;
  border: 1px solid transparent;
  border-radius: 0;
}

/* The inner boundary of the interface. */
.cke_inner {
  /* This is <span>, so transform it into a block.*/
  display: block;
  -webkit-touch-callout: none;
  background: transparent;
  padding: 0;
}

/* Added to the outer boundary of the UI when in inline editing,
   when the UI is floating. */
.cke_float {
  /* Make white the space between the outer and the inner borders. */
  border: none;
}

.cke_float .cke_inner {
  /* As we don't have blocks following top (toolbar) we suppress the padding
       as the toolbar defines its own margin. */
  padding-bottom: 0;
}

.cke_float .cke_top {
  border: 1px solid transparent;
}

/* Make the main spaces enlarge to hold potentially floated content. */
.cke_top, .cke_contents, .cke_bottom {
  /* These are <span>s, so transform them into blocks.*/
  display: block;
  /* Ideally this should be "auto", but it shows scrollbars in IE7. */
  overflow: hidden;
}

.cke_top, .cke_bottom {
  padding: 3px 0 0;
  background: #ddd;
}

.cke_top {
  color: #000;
  background-color: #fff;
  border-bottom: 1px solid transparent;
  /* Allow breaking toolbars when in a narrow editor. (#9947) */
  white-space: normal;
  padding: 12px 0 12px 12px;
}

.cke_contents {
  background-color: #fff;
  border: 0;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
}

.cke_bottom {
  position: relative;
}

/* On iOS we need to manually enable scrolling in the contents block. (#9945) */
.cke_browser_ios .cke_contents {
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

/*
Copyright (c) 2003-2014, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.md or http://ckeditor.com/license
*/
/*
panel.css (part of editor.css)
================================

Panels are floating elements that can hold different types of contents.
The following are common uses of it:

    - The element that toolbar combos display when opening them.
    - The context menu.
    - The list of items displayed by "menu buttons" (e.g. scayt).
    - The panel shown when opening "panel buttons" (e.g. color buttons).

Panel contents are wrapped into an iframe, so it is possible to have additional
CSS loaded inside them (e.g. to have more accurate preview on the styles combo).

The following is a visual representation of the outer elements of a panel:

+-- .cke_panel(*) ---------------------+
| +-- IFRAME.cke_panel_frame --------+ |
| | +-- HTML.cke_panel_container --+ | |
| | | +-- .cke_panel_block ------+ | | |
| | | |                          | | | |
| | | |     (contents here)      | | | |
| | | |                          | | | |
| | | +--------------------------+ | | |
| | +------------------------------+ | |
| +----------------------------------+ |
+--------------------------------------+

(*) All kinds of panel share the above structure. Menu panels adds the
    .cke_menu_panel class to the outer element, while toolbar combos add the
    .cke_combopanel class.

This file also defines styles for panel lists (used by combos). For menu-like
panel contents and color panels check menu.css and colorpanel.css.
*/
/* The box that holds an IFRAME. It's inserted into a host document and positioned
   absolutely by the application. It floats above the host document/editor. */
.cke_panel {
  /* Restore the loading hide */
  visibility: visible;
  width: 120px;
  height: 100px;
  overflow: hidden;
  margin-top: 5px;
  background-color: #fff;
  border: 1px solid #ccc;
  border-radius: 0;
}

/* This class represents panels which are used as context menus. */
.cke_menu_panel {
  padding: 0;
  margin: 0;
}

/* This class represents panels which are used by rich combos. */
.cke_combopanel {
  width: 150px;
  height: 110px;
}

/* The IFRAME the panel is wrapped into. */
.cke_panel_frame {
  width: 100%;
  height: 100%;
  font-size: 12px;
  overflow: auto;
  overflow-x: hidden;
}

/* The HTML document which is a direct descendant of the IFRAME */
.cke_panel_container {
  overflow-y: auto;
  overflow-x: hidden;
}

/*
Here we start the definition of panel lists (e.g. combo panels). The following
is its visual representation:

+-- .cke_panel_block -----------------+
| +-- .cke_panel_grouptitle --------+ |
| |                                 | |
| +---------------------------------+ |
| +-- .cke_panel_list --------------+ |
| | +-- .cke_panel_listItem ------+ | |
| | | +-- a --------------------+ | | |
| | | | +-- span -------------+ | | | |
| | | | |                     | | | | |
| | | | +---------------------+ | | | |
| | | +-------------------------+ | | |
| | +-----------------------------+ | |
| | +-- .cke_panel_listItem ------+ | |
| | | +-- a --------------------+ | | |
| | | | +-- span -------------+ | | | |
| | | | |                     | | | | |
| | | | +---------------------+ | | | |
| | | +-------------------------+ | | |
| | +-----------------------------+ | |
| | ...                             | |
| +---------------------------------+ |
+-------------------------------------+
*/
/* The list of panel items. */
.cke_panel_list {
  list-style-type: none;
  margin: 0;
  padding: 0;
  white-space: nowrap;
  font-size: 12px;
}

/* The item of .cke_panel_list */
.cke_panel_listItem {
  margin: 0;
  padding-bottom: 1px;
}

/* The child of .cke_panel_listItem. These elements contain spans which are
   to display a real name of the property which is visible for an end-user. */
.cke_panel_listItem a {
  padding: 6px 10px;
  display: block;
  color: inherit !important;
  text-decoration: none !important;
  overflow: hidden;
  text-overflow: ellipsis;
}

.cke_panel_listItem a:hover, .cke_panel_listItem a:focus, .cke_panel_listItem a:active {
  background-color: #ddd;
  outline: 0;
}

.cke_panel_listItem a > * {
  font-size: inherit !important;
  font-weight: inherit !important;
}

/* IE6 */
* html .cke_panel_listItem a {
  width: 100%;
  /* IE is not able to inherit the color, so we must force it to black */
  color: #000;
}

/* IE7 */
*:first-child + html .cke_panel_listItem a {
  /* IE is not able to inherit the color, so we must force it to black */
  color: #000;
}

.cke_panel_listItem.cke_selected a {
  background-color: #ddd;
  outline: none;
}

.cke_hc .cke_panel_listItem a {
  border-style: none;
}

.cke_hc .cke_panel_listItem a:hover, .cke_hc .cke_panel_listItem a:focus, .cke_hc .cke_panel_listItem a:active {
  border: 2px solid;
  padding: 1px 2px;
}

/* The title of the entire panel which is visible on top of the list. */
.cke_panel_grouptitle {
  display: none;
}

/* The following styles set defaults of the elements used by the Paragraph
   Format panel. */
.cke_panel_listItem p, .cke_panel_listItem h1, .cke_panel_listItem h2, .cke_panel_listItem h3, .cke_panel_listItem h4, .cke_panel_listItem h5, .cke_panel_listItem h6, .cke_panel_listItem pre {
  margin-top: 0;
  margin-bottom: 0;
}

/**
 * CKEditor config.
 */
.cke_editable {
  padding: 12px 12px;
  font-size: 14px;
  line-height: 1.4;
  color: #000;
  background-color: #fff;
  height: 100%;
  outline: 0;
}

.cke_focus .cke_editable {
  color: #000;
}

.cke_editable a {
  color: #000;
  text-decoration: underline;
}

.cke_editable blockquote {
  padding: 12px;
  background-color: #f5f5f5;
}

.cke_editable h1 {
  font-size: 24px;
}

.cke_editable h2 {
  font-size: 22px;
}

.cke_editable h3 {
  font-size: 20px;
}

.cke_editable h4 {
  font-size: 18px;
}

.cke_editable h5 {
  font-size: 16px;
}

.cke_editable p:last-child {
  margin-bottom: 0;
}

.cke_editable table {
  margin-bottom: 1em;
  width: 100%;
}

.cke_editable td {
  vertical-align: top;
  padding: .5em;
}

/*
Copyright (c) 2003-2014, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.md or http://ckeditor.com/license
*/
/*
colorpanel.css (part of editor.css)
=====================================

The color panel is related to the contents part of the panels that are
displayed when clicking the color buttons of the toolbar. See panels.css for
styles related to the outer part of panels.

The following is the visual representation of the color panel contents:

+-- .cke_panel_block.cke_colorblock --+
| +-- a.cke_colorauto --------------+ |
| |                                 | |
| |         AUTOMATIC COLOR         | |
| |                                 | |
| +---------------------------------+ |
| +-- table ------------------------+ |
| |                                 | |
| |          COLOR PALETTE          | |
| |                                 | |
| |---------------------------------| |
| |          "More Colors"          | |
| +---------------------------------+ |
+-------------------------------------+

The AUTOMATIC COLOR section is an <a> containing a table with two cells with
the following contents:

+-- TD -----------------+ +-- TD -----------------+
| +-- .cke_colorbox --+ | |                       |
| |                   | | |      "Automatic"      |
| +-------------------+ | |                       |
+-----------------------+ +-----------------------+

The COLOR PALETTE section instead is a table with a variable number of cells
(by default 8). Each cell represents a color box, with the following structure:

+-- A.cke_colorbox ---------+
| +-- SPAN.cke_colorbox --+ |
| |                       | |
| +-----------------------+ |
+---------------------------+
*/
/* The container of the color palette. */
.cke_colorblock {
  padding: 3px;
  font-size: 11px;
  font-family: 'Microsoft Sans Serif', Tahoma, Arial, Verdana, Sans-Serif;
}

.cke_colorblock,
.cke_colorblock a {
  text-decoration: none;
  color: #000;
}

/* The box which is to represent a single color on the color palette.
   It is a small, square-shaped element which can be selected from the palette. */
span.cke_colorbox {
  width: 10px;
  height: 10px;
  border: 1px solid #ccc;
  float: left;
}

.cke_rtl span.cke_colorbox {
  float: right;
}

/* The wrapper of the span.cke_colorbox. It provides an extra border and padding. */
a.cke_colorbox {
  border: 1px solid #fff;
  padding: 2px;
  float: left;
  width: 12px;
  height: 12px;
  border-radius: 2px;
}

.cke_rtl a.cke_colorbox {
  float: right;
}

/* Different states of the a.cke_colorbox wrapper. */
a:hover.cke_colorbox, a:focus.cke_colorbox, a:active.cke_colorbox {
  border: 1px solid transparent;
  background-color: #ddd;
}

/* Buttons which are visible at the top/bottom of the color palette:
   - cke_colorauto (TOP) applies the automatic color.
   - cke_colormore (BOTTOM) executes the color dialog.
*/
a.cke_colorauto, a.cke_colormore {
  border: 1px solid #fff;
  padding: 2px;
  display: block;
  cursor: pointer;
}

/* Different states of cke_colorauto/cke_colormore buttons. */
a:hover.cke_colorauto, a:hover.cke_colormore, a:focus.cke_colorauto, a:focus.cke_colormore, a:active.cke_colorauto, a:active.cke_colormore {
  border: 1px solid transparent;
  background-color: #ddd;
}

/*
Copyright (c) 2003-2014, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.md or http://ckeditor.com/license
*/
/*
toolbar.css (part of editor.css)
==================================

This files styles the CKEditor toolbar and its buttons. For toolbar combo
styles, check richcombo.css.

The toolbar is rendered as a big container (called toolbox), which contains
smaller "toolbars". Each toolbar represents a group of items that cannot be
separated. The following is the visual representation of the toolbox.

+-- .cke_toolbox ----------------------------------------------------------+
| +-- .cke_toolbar --+ +-- .cke_toolbar --+ ... +-- .cke_toolbar_break --+ |
| |                  | |                  |     |                        | |
| +------------------+ +------------------+     +------------------------+ |
| +-- .cke_toolbar --+ +-- .cke_toolbar --+ ...                            |
| |                  | |                  |                                |
| +------------------+ +------------------+                                |
+--------------------------------------------------------------------------+

The following instead is the visual representation of a single toolbar:

+-- .cke_toolbar ----------------------------------------------------------------+
| +-- .cke_toolbar_start --+ +-- .cke_toolgroup (*) --+ +-- .cke_toolbar_end --+ |
| |                        | |                        | |                      | |
| +------------------------+ +------------------------+ +----------------------+ |
+--------------------------------------------------------------------------------+
(*) .cke_toolgroup is available only when the toolbar items can be grouped
    (buttons). If the items can't be group (combos), this box is not available
    and the items are rendered straight in that place.

This file also styles toolbar buttons, which are rendered inside the above
.cke_toolgroup containers. This is the visual representation of a button:

+-- .cke_button -------------------------------------+
| +-- .cke_button_icon --+ +-- .cke_button_label --+ |
| |                      | |                       | |
| +----------------------+ +-----------------------+ |
+----------------------------------------------------+

Special outer level classes used in this file:

    .cke_hc: Available when the editor is rendered on "High Contrast".
    .cke_rtl: Available when the editor UI is on RTL.
*/
/* The box that holds each toolbar. */
.cke_toolbar {
  float: left;
}

.cke_rtl .cke_toolbar {
  float: right;
}

/* The box that holds buttons. */
.cke_toolgroup {
  float: left;
  margin-right: 10px;
  padding: 0;
  border: 0;
  border-radius: 0;
}

.cke_hc .cke_toolgroup {
  border: 0;
  margin-right: 10px;
  margin-bottom: 10px;
}

.cke_rtl .cke_toolgroup *:first-child {
  border-radius: 0 0 0 0;
}

.cke_rtl .cke_toolgroup *:last-child {
  border-radius: 0 0 0 0;
}

.cke_rtl .cke_toolgroup {
  float: right;
  margin-left: 6px;
  margin-right: 0;
}

/* A toolbar button . */
a.cke_button {
  display: inline-block;
  margin-right: 1px;
  padding: 12px 12px;
  outline: none;
  cursor: default;
  float: left;
  border: 1px solid transparent;
  border-radius: 0;
  background: #fff;
}

.cke_rtl .cke_button {
  float: right;
}

.cke_hc .cke_button {
  border: 1px solid black;
  /* Compensate the added border */
  padding: 3px 5px;
  margin: -2px 4px 0 -2px;
}

/* This class is applied to the button when it is "active" (pushed).
   This style indicates that the feature associated with the button is active
   i.e. currently writing in bold or when spell checking is enabled. */
a.cke_button_on {
  background: #f5f5f5;
  border-color: transparent;
}

.cke_hc .cke_button_on {
  /* Compensate the border change */
}

.cke_hc a.cke_button_off:hover, .cke_hc a.cke_button_off:focus, .cke_hc a.cke_button_off:active, .cke_hc a.cke_button_disabled:hover, .cke_hc a.cke_button_disabled:focus, .cke_hc a.cke_button_disabled:active {
  /* Compensate the border change */
}

/* This class is applied to the button when the feature associated with the
   button cannot be used (grayed-out).
   i.e. paste button remains disabled when there is nothing in the clipboard to
   be pasted. */
.cke_button_disabled .cke_button_icon {
  opacity: 0.3;
}

.cke_hc .cke_button_disabled {
  opacity: 0.5;
}

a.cke_button_off:hover, a.cke_button_off:focus, a.cke_button_off:active, a.cke_button_disabled:hover, a.cke_button_disabled:focus, a.cke_button_disabled:active {
  background: #eee;
  border-color: #eee;
}

/* The icon which is a visual representation of the button. */
.cke_button_icon {
  cursor: inherit;
  background-repeat: no-repeat;
  margin-top: 1px;
  width: 16px;
  height: 16px;
  float: left;
  display: inline-block;
}

.cke_rtl .cke_button_icon {
  float: right;
}

.cke_hc .cke_button_icon {
  display: none;
}

/* The label of the button that stores the name of the feature. By default,
   labels are invisible. They can be revealed on demand though. */
.cke_button_label {
  display: none;
  padding-left: 3px;
  margin-top: 1px;
  line-height: 18px;
  vertical-align: middle;
  float: left;
  cursor: default;
  color: #222;
}

.cke_rtl .cke_button_label {
  padding-right: 3px;
  padding-left: 0;
  float: right;
}

.cke_hc .cke_button_label {
  padding: 0;
  display: inline-block;
  font-size: 12px;
}

/* The small arrow available on buttons that can be expanded
   (e.g. the color buttons). */
.cke_button_arrow {
  /* Arrow in CSS */
  display: inline-block;
  margin: 8px 0 0 1px;
  width: 0;
  height: 0;
  cursor: default;
  vertical-align: top;
  border-left: 3px solid transparent;
  border-right: 3px solid transparent;
  border-top: 3px solid #474747;
}

.cke_rtl .cke_button_arrow {
  margin-right: 5px;
  margin-left: 0;
}

.cke_hc .cke_button_arrow {
  font-size: 10px;
  margin: 3px -2px 0 3px;
  width: auto;
  border: 0;
}

/* The vertical separator which is used within a single toolbar to split
   buttons into sub-groups. */
.cke_toolbar_separator {
  float: left;
  background-color: transparent;
  margin: 4px 2px 0;
  height: 16px;
  width: 1px;
}

.cke_rtl .cke_toolbar_separator {
  float: right;
}

.cke_hc .cke_toolbar_separator {
  width: 0;
  border-left: 1px solid;
  margin: 1px 5px 0 0;
}

/* The dummy element that breaks toolbars.
   Once it is placed, the very next toolbar is moved to the new row. */
.cke_toolbar_break {
  display: block;
  clear: left;
}

.cke_rtl .cke_toolbar_break {
  clear: right;
}

/* The button, which when clicked hides (collapses) all the toolbars. */
.cke_toolbox_collapser {
  width: 12px;
  height: 11px;
  float: right;
  margin: 11px 0 0;
  font-size: 0;
  cursor: default;
  text-align: center;
  border: 1px solid #a6a6a6;
  border-bottom-color: #979797;
  border-radius: 0;
  background: #e4e4e4;
  /* The CSS arrow, which belongs to the toolbar collapser. */
}

.cke_toolbox_collapser:hover {
  background: #ccc;
}

.cke_toolbox_collapser.cke_toolbox_collapser_min {
  margin: 0 2px 4px;
}

.cke_toolbox_collapser.cke_toolbox_collapser_min .cke_arrow {
  margin-top: 4px;
  border-bottom-color: transparent;
  border-top-color: #474747;
}

.cke_toolbox_collapser .cke_arrow {
  display: inline-block;
  /* Pure CSS Arrow */
  height: 0;
  width: 0;
  font-size: 0;
  margin-top: 1px;
  border-left: 3px solid transparent;
  border-right: 3px solid transparent;
  border-bottom: 3px solid #474747;
  border-top: 3px solid transparent;
}

.cke_rtl .cke_toolbox_collapser {
  float: left;
}

.cke_hc .cke_toolbox_collapser .cke_arrow {
  font-size: 8px;
  width: auto;
  border: 0;
  margin-top: 0;
  margin-right: 2px;
}

/*
Copyright (c) 2003-2014, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.md or http://ckeditor.com/license
*/
/*
menu.css (part of editor.css)
===============================

This file styles menus used in the editor UI. These menus are the list of
options available inside some "floating panels", like menu buttons of the
toolbar or the context menu.

Note that the menu itself doesn't include the floating element that holds it.
That element is styles in the panel.css file.

The following is a visual representation of the main elements of a menu:

+-- .cke_menu -----------------+
| +-- .cke_menuitem  --------+ |
| | +-- .cke_menubutton ---+ | |
| | |                      | | |
| | +----------------------+ | |
| +--------------------------+ |
| +-- .cke_menuseparator ----+ |
| ...                          |
+------------------------------+

This is the .cke_menubutton structure:
(Note that the menu button icon shares with toolbar button the common class .cke_button_icon to achieve the same outlook.)

+-- .cke_menubutton -------------------------------------------------------------------------+
| +-- .cke_menubutton_inner ---------------------------------------------------------------+ |
| | +-- .cke_menubutton_icon ---+ +-- .cke_menubutton_label --+ +-- .cke_cke_menuarrow --+ | |
| | | +-- .cke_button_icon ---+ | |                           | |                        | | |
| | | |                       | | |                           | |                        | | |
| | | +-----------------------+ | |                           | |                        | | |
| | +---------------------------+ +---------------------------+ +------------------------+ | |
| +----------------------------------------------------------------------------------------+ |
+--------------------------------------------------------------------------------------------+

Special outer level classes used in this file:

    .cke_hc: Available when the editor is rendered on "High Contrast".
    .cke_rtl: Available when the editor UI is on RTL.
*/
/* .cke_menuitem is the element that holds the entire structure of each of the
   menu items. */
.cke_menubutton {
  /* The "button" inside a menu item is a <a> element.
     Transforms it into a block. */
  display: block;
}

.cke_button_icon {
  opacity: .8;
}

.cke_menuitem span {
  /* Avoid the text selection cursor inside menu items. */
  cursor: default;
}

.cke_menubutton:hover, .cke_menubutton:focus, .cke_menubutton:active {
  background-color: #D3D3D3;
  display: block;
}

.cke_hc .cke_menubutton {
  padding: 2px;
}

.cke_hc .cke_menubutton:hover, .cke_hc .cke_menubutton:focus, .cke_hc .cke_menubutton:active {
  border: 2px solid;
  padding: 0;
}

.cke_menubutton_inner {
  display: table-row;
}

.cke_menubutton_icon,
.cke_menubutton_label,
.cke_menuarrow {
  display: table-cell;
}

/* The menu item icon. */
.cke_menubutton_icon {
  background-color: #D7D8D7;
  opacity: 0.70;
  /* Safari, Opera and Mozilla */
  filter: alpha(opacity=70);
  /* IE */
  padding: 4px;
}

.cke_hc .cke_menubutton_icon {
  height: 16px;
  width: 0;
  padding: 4px 0;
}

.cke_menubutton:hover .cke_menubutton_icon, .cke_menubutton:focus .cke_menubutton_icon, .cke_menubutton:active .cke_menubutton_icon {
  background-color: #D0D2D0;
}

.cke_menubutton_disabled:hover .cke_menubutton_icon, .cke_menubutton_disabled:focus .cke_menubutton_icon, .cke_menubutton_disabled:active .cke_menubutton_icon {
  /* The icon will get opacity as well when hovered. */
  opacity: 0.3;
  filter: alpha(opacity=30);
}

/* The textual part of each menu item. */
.cke_menubutton_label {
  padding: 0 5px;
  background-color: transparent;
  width: 100%;
  vertical-align: middle;
}

.cke_menubutton_disabled .cke_menubutton_label {
  /* Greyed label text indicates a disabled menu item. */
  opacity: 0.3;
  filter: alpha(opacity=30);
}

.cke_menubutton_on {
  border: 1px solid #dedede;
  background-color: #f2f2f2;
}

.cke_menubutton_on .cke_menubutton_icon {
  padding-right: 3px;
}

.cke_menubutton:hover, .cke_menubutton:focus, .cke_menubutton:active {
  background-color: #EFF0EF;
}

.cke_panel_frame .cke_menubutton_label {
  display: none;
}

/* The separator used to separate menu item groups. */
.cke_menuseparator {
  background-color: #D3D3D3;
  height: 1px;
  filter: alpha(opacity=70);
  /* IE */
  opacity: 0.70;
  /* Safari, Opera and Mozilla */
}

/* The small arrow shown for item with sub-menus. */
.cke_menuarrow {
  background-image: url(images/arrow.png);
  background-position: 0 10px;
  background-repeat: no-repeat;
  padding: 0 5px;
}

.cke_menuarrow span {
  display: none;
}

.cke_rtl .cke_menuarrow {
  background-position: 5px -13px;
  background-repeat: no-repeat;
}

.cke_hc .cke_menuarrow span {
  vertical-align: middle;
  display: inline;
}

/*
Copyright (c) 2003-2014, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.md or http://ckeditor.com/license
*/
/*
richcombo.css (part of editor.css)
=================================

This file holds the style set of the "Rich Combo" widget which is commonly used
in the toolbar. It doesn't, however, styles the panel that is displayed when
clicking on the combo, which is instead styled by panel.css.

The visual representation of a rich combo widget looks as follows:

+-- .cke_combo----------------------------------------------------------------------+
| +-- .cke_combo_label --+ +-- .cke_combo_button ---------------------------------+ |
| |                      | | +-- .cke_combo_text --+ +-- .cke_combo_open -------+ | |
| |                      | | |                     | | +-- .cke_combo_arrow --+ | | |
| |                      | | |                     | | |                      | | | |
| |                      | | |                     | | +----------------------+ | | |
| |                      | | +---------------------+ +--------------------------+ | |
| +----------------------+ +------------------------------------------------------+ |
+-----------------------------------------------------------------------------------+
*/
/* The box that hold the entire combo widget */
.cke_combo {
  display: inline-block;
  float: left;
}

.cke_rtl .cke_combo {
  float: right;
}

.cke_hc .cke_combo {
  margin-top: -2px;
}

/* The label of the combo widget. It is invisible by default, yet
   it's important for semantics and accessibility. */
.cke_combo_label {
  display: none;
  float: left;
  line-height: 26px;
  vertical-align: top;
  margin-right: 5px;
}

.cke_rtl .cke_combo_label {
  float: right;
  margin-left: 5px;
  margin-right: 0;
}

/* The container for combo text and arrow. */
.cke_combo_button {
  display: inline-block;
  float: left;
  margin-right: 10px;
  border-radius: 0;
  border: 1px solid #fff;
  background: #fff;
}

/* Different states of the container. */
.cke_combo_on a.cke_combo_button {
  border-color: transparent;
}

.cke_rtl .cke_combo_button {
  float: right;
  margin-left: 5px;
  margin-right: 0;
}

.cke_hc a.cke_combo_button {
  padding: 3px;
}

.cke_hc .cke_combo_on a.cke_combo_button {
  border-width: 3px;
  padding: 1px;
}

.cke_hc .cke_combo_off a.cke_combo_button:hover, .cke_hc .cke_combo_off a.cke_combo_button:focus, .cke_hc .cke_combo_off a.cke_combo_button:active {
  border-width: 3px;
  padding: 1px;
}

/* The label that shows the current value of the rich combo.
   By default, it holds the name of the property.
   See: .cke_combo_inlinelabel */
.cke_combo_text {
  line-height: 29px;
  padding-left: 10px;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  float: left;
  cursor: default;
  color: #474747;
  width: 100px;
  font-size: 12px;
}

.cke_rtl .cke_combo_text {
  float: right;
  text-align: right;
  padding-left: 0;
  padding-right: 10px;
}

.cke_hc .cke_combo_text {
  line-height: 18px;
  font-size: 12px;
}

/* The handler which opens the panel of rich combo properties.
   It holds an arrow as a visual indicator. */
.cke_combo_open {
  cursor: default;
  display: inline-block;
  font-size: 0;
  height: 19px;
  line-height: 17px;
  margin: 2px 10px 0;
  width: 5px;
}

.cke_hc .cke_combo_open {
  height: 12px;
}

/* The arrow which is displayed inside of the .cke_combo_open handler. */
.cke_combo_arrow {
  margin: 11px 0 0;
  float: left;
  /* Pure CSS Arrow */
  height: 0;
  width: 0;
  font-size: 0;
  border-left: 3px solid transparent;
  border-right: 3px solid transparent;
  border-top: 3px solid #222;
}

.cke_hc .cke_combo_arrow {
  font-size: 10px;
  width: auto;
  border: 0;
  margin-top: 3px;
}

/* Disabled combo button styles. */
.cke_combo_disabled .cke_combo_inlinelabel, .cke_combo_disabled .cke_combo_open {
  opacity: 0.3;
}

/*
Copyright (c) 2003-2014, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.md or http://ckeditor.com/license
*/
/* "Source" button label */
/* "Font Size" combo width */
.cke_combo__fontsize .cke_combo_text {
  width: 30px;
}

/* "Font Size" panel size */
.cke_combopanel__fontsize {
  width: 120px;
}

/* Editable regions */
.cke_source {
  font-family: 'Courier New', Monospace;
  font-size: small;
  background-color: #fff;
  white-space: pre;
}

/* Important!
   To avoid showing the editor UI while its styles are still not available, the
   editor creates it with visibility:hidden. Here, we restore the UI visibility. */
.cke_chrome {
  visibility: inherit;
}

.cke_ltr {
  overflow-y: hidden;
}

/* For accessibility purposes, several "voice labels" are present in the UI.
   These are usually <span> elements that show not be visible, but that are
   used by screen-readers to announce other elements. Here, we hide these
   <spans>, in fact. */
.cke_voice_label {
  display: none;
}

legend.cke_voice_label {
  display: none;
}

.cke_inner {
  -webkit-box-shadow: inset 2px 2px 6px 0 rgba(0, 0, 0, 0.13) !important;
          box-shadow: inset 2px 2px 6px 0 rgba(0, 0, 0, 0.13) !important;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9ja2VkaXRvci1ib290c3RyYXAvc2Nzcy9lZGl0b3Iuc2NzcyIsImFzc2V0cy9ja2VkaXRvci1ib290c3RyYXAvc2Nzcy9lZGl0b3IuY3NzIiwiYXNzZXRzL2FuYWtpbi9zY3NzL2luY2x1ZGVzL192YXJpYWJsZXMuc2NzcyIsIi4uL3lpaTItc2tlbGV0b24vYXNzZXRzL2FkbWluL3Njc3MvaW5jbHVkZXMvX3ZhcmlhYmxlcy5zY3NzIiwiLi4veWlpMi1za2VsZXRvbi9hc3NldHMvY2tlZGl0b3ItYm9vdHN0cmFwL3Njc3MvZWRpdG9yLnNjc3MiLCIuLi95aWkyLXNrZWxldG9uL2Fzc2V0cy9ja2VkaXRvci1ib290c3RyYXAvc2Nzcy9pbmNsdWRlcy9fbWFpbnVpLnNjc3MiLCIuLi8uLi9ucG0tYXNzZXQvYm9vdHN0cmFwL3Njc3MvbWl4aW5zL19ib3gtc2hhZG93LnNjc3MiLCIuLi95aWkyLXNrZWxldG9uL2Fzc2V0cy9ja2VkaXRvci1ib290c3RyYXAvc2Nzcy9pbmNsdWRlcy9fcGFuZWwuc2NzcyIsIi4uL3lpaTItc2tlbGV0b24vYXNzZXRzL2NrZWRpdG9yLWJvb3RzdHJhcC9zY3NzL2luY2x1ZGVzL19jb250ZW50LnNjc3MiLCIuLi95aWkyLXNrZWxldG9uL2Fzc2V0cy9ja2VkaXRvci1ib290c3RyYXAvc2Nzcy9pbmNsdWRlcy9fY29sb3JwYW5lbC5zY3NzIiwiLi4veWlpMi1za2VsZXRvbi9hc3NldHMvY2tlZGl0b3ItYm9vdHN0cmFwL3Njc3MvaW5jbHVkZXMvX3Rvb2xiYXIuc2NzcyIsIi4uL3lpaTItc2tlbGV0b24vYXNzZXRzL2NrZWRpdG9yLWJvb3RzdHJhcC9zY3NzL2luY2x1ZGVzL19tZW51LnNjc3MiLCIuLi95aWkyLXNrZWxldG9uL2Fzc2V0cy9ja2VkaXRvci1ib290c3RyYXAvc2Nzcy9pbmNsdWRlcy9fcmljaGNvbWJvLnNjc3MiLCIuLi95aWkyLXNrZWxldG9uL2Fzc2V0cy9ja2VkaXRvci1ib290c3RyYXAvc2Nzcy9pbmNsdWRlcy9fcHJlc2V0cy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQ0VFO0FDRkY7O0VES0U7QUNBRjs7RURHRTtBQ2NGOztFRFhFO0FDa0JGOztFRGZFO0FDd0JGOztFRHJCRTtBQzRCRjs7RUR6QkU7QUNnQ0Y7O0VEN0JFO0FDb0NGOztFRGpDRTtBQ2dERjs7RUQ3Q0U7QUNxREY7O0VEbERFO0FDdURGOztFRHBERTtBQytERjs7RUQ1REU7QUN3RUY7O0VEckVFO0FDMkVGOztFRHhFRTtBQzZFRjs7RUQxRUU7QUNxRkY7O0VEbEZFO0FDd0ZGOztFRHJGRTtBQzBGRjs7RUR2RkU7QUNrR0Y7O0VEL0ZFO0FDNkdGOztFRDFHRTtBRTlERjs7RUZpRUU7QUU3QkY7O0VGZ0NFO0FFbkJGOztFRnNCRTtBRWRGOztFRmlCRTtBRVBGOztFRlVFO0FFZ0JGOztFRmJFO0FFd0JGOztFRnJCRTtBRXdDRjs7RUZyQ0U7QUVrREY7O0VGL0NFO0FFc0RGOztFRm5ERTtBRWlFRjs7RUY5REU7QUVxRUY7O0VGbEVFO0FFd0ZGOztFRnJGRTtBRWtIRjs7RUYvR0U7QUVzSEY7O0VGbkhFO0FFaUlGOztFRjlIRTtBRStJRjs7RUY1SUU7QUVtS0Y7O0VGaEtFO0FFNktGOztFRjFLRTtBRWdMRjs7RUY3S0U7QUVtTEY7O0VGaExFO0FHN0hGOztFSGdJRTtBRzdIRjs7RUhnSUU7QUVuSUY7O0VGc0lFO0FFbEdGOztFRnFHRTtBRXhGRjs7RUYyRkU7QUVuRkY7O0VGc0ZFO0FFNUVGOztFRitFRTtBRXJERjs7RUZ3REU7QUU3Q0Y7O0VGZ0RFO0FFN0JGOztFRmdDRTtBRW5CRjs7RUZzQkU7QUVmRjs7RUZrQkU7QUVKRjs7RUZPRTtBRUFGOztFRkdFO0FFbUJGOztFRmhCRTtBRTZDRjs7RUYxQ0U7QUVpREY7O0VGOUNFO0FFNERGOztFRnpERTtBRTBFRjs7RUZ2RUU7QUU4RkY7O0VGM0ZFO0FFd0dGOztFRnJHRTtBRTJHRjs7RUZ4R0U7QUU4R0Y7O0VGM0dFO0FHMUxGOztFSDZMRTtBSXJNRjs7O0NKeU1DO0FJcE1EOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NKNk9DO0FJbk1ELHlDQUFBO0FBQ0E7RUFDRSxjQUFjO0VBQ2QsV0FBVztFQUNYLFVBQVU7RUFDVixlRm9CbUI7RUVuQm5CLGdCRnNCb0I7RUVyQnBCLFdIekNjO0VHMENkLHNCRmxEVTtFRW1EViw2QkgyRjhCO0VHMUY5QixnQkhoQmU7QURxTmpCOztBSWpNQSx5Q0FBQTtBQUNBO0VBQ0UsaURBQUE7RUFDQSxjQUFjO0VBRWQsMkJBQTJCO0VBRTNCLHVCQUF1QjtFQUN2QixVQUFVO0FKa01aOztBSS9MQTs2QkprTTZCO0FJaE03QjtFQUNFLGtFQUFBO0VBQ0EsWUFBWTtBSmtNZDs7QUlwTUE7RUFLSTsrQ0ptTTJDO0VJak0zQyxpQkFBaUI7QUptTXJCOztBSTFNQTtFQVdJLDZCSDhENEI7QURxSWhDOztBSS9MQSxzRUFBQTtBQUNBO0VBQ0UscURBQUE7RUFDQSxjQUFjO0VBRWQsbUVBQUE7RUFDQSxnQkFBZ0I7QUppTWxCOztBSTlMQTtFQUNFLGdCQUFnQjtFQUNoQixnQkZ4RmE7QUZ5UmY7O0FJOUxBO0VBQ0UsV0gzRmM7RUc0RmQsc0JIMkN5QjtFRzFDekIsb0NIeUM4QjtFR3hDOUIsNkRBQUE7RUFDQSxtQkFBbUI7RUFDbkIseUJIUndCO0FEeU0xQjs7QUk5TEE7RUFDRSxzQkFBc0I7RUFDdEIsU0FBUztFQ2xHTCx3RERtR21EO1VDbkduRCxnRERtR21EO0FKaU16RDs7QUk5TEE7RUFDRSxrQkFBa0I7QUppTXBCOztBSTlMQSwrRUFBQTtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlDQUFpQztBSmlNbkM7O0FNOVRBOzs7Q05tVUM7QU05VEQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NOa1dDO0FNN1REOzZFTitUNkU7QU03VDdFO0VBQ0UsNkJBQUE7RUFDQSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsZUFBZTtFQUVmLHNCQUFzQjtFQUN0QixzQkp4Q2E7RUl5Q2IsZ0JMYmU7QUQyVWpCOztBTTNUQSxrRUFBQTtBQUNBO0VBQ0UsVUFBVTtFQUNWLFNBQVM7QU44VFg7O0FNM1RBLGdFQUFBO0FBQ0E7RUFDRSxZQUFZO0VBQ1osYUFBYTtBTjhUZjs7QU0zVEEsMENBQUE7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osZUFBZTtFQUVmLGNBQWM7RUFDZCxrQkFBa0I7QU42VHBCOztBTTFUQSxpRUFBQTtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBTjZUcEI7O0FNMVRBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDTnNWQztBTXpURCw2QkFBQTtBQUNBO0VBQ0UscUJBQXFCO0VBQ3JCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsbUJBQW1CO0VBQ25CLGVBQWU7QU4yVGpCOztBTXhUQSxnQ0FBQTtBQUNBO0VBQ0UsU0FBUztFQUNULG1CQUFtQjtBTjJUckI7O0FNeFRBOzZFTjJUNkU7QU16VDdFO0VBQ0UsaUJBQWlCO0VBQ2pCLGNBQWM7RUFDZCx5QkFBeUI7RUFDekIsZ0NBQWdDO0VBQ2hDLGdCQUFnQjtFQUNoQix1QkFBdUI7QU4yVHpCOztBTWpVQTtFQVNJLHNCSmhJVztFSWlJWCxVQUFVO0FONFRkOztBTXRVQTtFQWNJLDZCQUE2QjtFQUM3QiwrQkFBK0I7QU40VG5DOztBTXhUQSxRQUFBO0FBQ0E7RUFDRSxXQUFXO0VBRVgsc0VBQUE7RUFDQSxXQUFXO0FOMFRiOztBTXZUQSxRQUFBO0FBQ0E7RUFDRSxzRUFBQTtFQUNBLFdBQVc7QU4wVGI7O0FNdlRBO0VBQ0Usc0JKekphO0VJMEpiLGFBQWE7QU4wVGY7O0FNdlRBO0VBQ0Usa0JBQWtCO0FOMFRwQjs7QU12VEE7RUFFSSxpQkFBaUI7RUFDakIsZ0JBQWdCO0FOeVRwQjs7QU1yVEEsdUVBQUE7QUFDQTtFQUNFLGFBQWE7QU53VGY7O0FNdlNBO2tCTjBTa0I7QU14U2xCO0VBRUksYUFBYTtFQUNiLGdCQUFnQjtBTnlTcEI7O0FPcmZBOztFUHlmRTtBT3RmRjtFQUNFLGtCTmlHd0I7RU1oR3hCLGVMbUVtQjtFS2xFbkIsZ0JMcUVvQjtFS3BFcEIsV05NYztFTUxkLHNCTEhVO0VLSVYsWUFBWTtFQUNaLFVBQVU7QVB3Zlo7O0FPdGZFO0VBQ0UsV05BWTtBRHlmaEI7O0FPbmdCQTtFQWNJLFdBQVc7RUFDWCwwQkFBMEI7QVB5ZjlCOztBT3hnQkE7RUFtQkksYU4rRXNCO0VNOUV0Qix5QkxiYztBRnNnQmxCOztBTzdnQkE7RUF3QkksZUFBaUM7QVB5ZnJDOztBT2poQkE7RUE0QkksZUFBZ0M7QVB5ZnBDOztBT3JoQkE7RUFnQ0ksZUFBZ0M7QVB5ZnBDOztBT3poQkE7RUFvQ0ksZUFBZ0M7QVB5ZnBDOztBTzdoQkE7RUF3Q0ksZUFBZ0M7QVB5ZnBDOztBT2ppQkE7RUE0Q0ksZ0JBQWdCO0FQeWZwQjs7QU9yaUJBO0VBZ0RJLGtCQUFrQjtFQUNsQixXQUFXO0FQeWZmOztBTzFpQkE7RUFxREksbUJBQW1CO0VBQ25CLGFBQWE7QVB5ZmpCOztBUWxqQkE7OztDUnVqQkM7QVFsakJEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q1I2bEJDO0FRampCRCx3Q0FBQTtBQUNBO0VBQ0UsWUFBWTtFQUNaLGVBQWU7RUFDZix1RUFBdUU7QVJtakJ6RTs7QVFoakJBOztFQUVFLHFCQUFxQjtFQUNyQixXQUFXO0FSbWpCYjs7QVFoakJBO2lGUm1qQmlGO0FRampCakY7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLHNCTnREYTtFTXVEYixXQUFXO0FSbWpCYjs7QVFoakJBO0VBQ0UsWUFBWTtBUm1qQmQ7O0FRaGpCQSxtRkFBQTtBQUNBO0VBQ0Usc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixXQUFXO0VBQ1gsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7QVJtakJwQjs7QVFoakJBO0VBQ0UsWUFBWTtBUm1qQmQ7O0FRaGpCQSxvREFBQTtBQUNBO0VBR00sNkJQc0QwQjtFT3JEMUIsc0JObEZTO0FGbW9CZjs7QVE1aUJBOzs7Q1JpakJDO0FRN2lCRDtFQUNFLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osY0FBYztFQUNkLGVBQWU7QVIraUJqQjs7QVE1aUJBLDZEQUFBO0FBQ0E7RUFHTSw2QlBpQzBCO0VPaEMxQixzQk52R1M7QUZvcEJmOztBU2hxQkE7OztDVHFxQkM7QVNocUJEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDVDZzQkM7QVMvcEJELHFDQUFBO0FBQ0E7RUFDRSxXQUFXO0FUaXFCYjs7QVM5cEJBO0VBQ0UsWUFBWTtBVGlxQmQ7O0FTOXBCQSxnQ0FBQTtBQUNBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsU0FBUztFQUNULGdCUnpCZTtBRDByQmpCOztBUzlwQkE7RUFDRSxTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLG1CQUFtQjtBVGlxQnJCOztBUzlwQkE7RUFDRSxzQkFBZ0Q7QVRpcUJsRDs7QVM5cEJBO0VBQ0Usc0JSdkNlO0FEd3NCakI7O0FTOXBCQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZUFBZTtBVGlxQmpCOztBUzlwQkEsdUJBQUE7QUFDQTtFQUNFLHFCQUFxQjtFQUNyQixpQkFBaUI7RUFDakIsa0JSUXdCO0VRUHhCLGFBQWE7RUFDYixlQUFlO0VBQ2YsV0FBVztFQUNYLDZCQUE2QjtFQUM3QixnQlJ6RGU7RVEwRGYsZ0JQOUZVO0FGK3ZCWjs7QVM5cEJBO0VBQ0UsWUFBWTtBVGlxQmQ7O0FTOXBCQTtFQUNFLHVCQUF1QjtFQUV2QixnQ0FBQTtFQUNBLGdCQUFnQjtFQUNoQix1QkFBdUI7QVRncUJ6Qjs7QVM3cEJBOztzRVRpcUJzRTtBUzlwQnRFO0VBQ0UsbUJQNUdnQjtFTzZHaEIseUJSNEI4QjtBRG9vQmhDOztBUzdwQkE7RUFHSSxpQ0FBQTtBVDhwQko7O0FTanFCQTtFQVVNLGlDQUFBO0FUMnBCTjs7QVNycEJBOzs7ZVQwcEJlO0FTdHBCZjtFQUNFLFlBQVk7QVR3cEJkOztBU3JwQkE7RUFDRSxZQUFZO0FUd3BCZDs7QVNocEJBO0VBRUksZ0JQbEpXO0VPbUpYLGtCUG5KVztBRnF5QmY7O0FTOW9CQSw2REFBQTtBQUNBO0VBQ0UsZUFBZTtFQUNmLDRCQUE0QjtFQUM1QixlQUFlO0VBQ2YsV0FBVztFQUNYLFlBQVk7RUFDWixXQUFXO0VBQ1gscUJBQXFCO0FUaXBCdkI7O0FTOW9CQTtFQUNFLFlBQVk7QVRpcEJkOztBUzlvQkE7RUFDRSxhQUFhO0FUaXBCZjs7QVM5b0JBO2lFVGlwQmlFO0FTL29CakU7RUFDRSxhQUFhO0VBQ2IsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxlQUFlO0VBQ2YsV1A5S2E7QUYrekJmOztBUzlvQkE7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLFlBQVk7QVRpcEJkOztBUzlvQkE7RUFDRSxVQUFVO0VBQ1YscUJBQXFCO0VBQ3JCLGVBQWU7QVRpcEJqQjs7QVM5b0JBOzhCVGlwQjhCO0FTL29COUI7RUFDRSxpQkFBQTtFQUNBLHFCQUFxQjtFQUNyQixtQkFBbUI7RUFDbkIsUUFBUTtFQUNSLFNBQVM7RUFDVCxlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLGtDQUFrQztFQUNsQyxtQ0FBbUM7RUFDbkMsNkJBQTZCO0FUaXBCL0I7O0FTOW9CQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0FUaXBCaEI7O0FTOW9CQTtFQUNFLGVBQWU7RUFDZixzQkFBc0I7RUFDdEIsV0FBVztFQUNYLFNBQVM7QVRpcEJYOztBUzlvQkE7NkJUaXBCNkI7QVMvb0I3QjtFQUNFLFdBQVc7RUFDWCw2QlIxRjhCO0VRMkY5QixpQkFBaUI7RUFDakIsWUFBWTtFQUNaLFVBQVU7QVRpcEJaOztBUzlvQkE7RUFDRSxZQUFZO0FUaXBCZDs7QVM5b0JBO0VBQ0UsUUFBUTtFQUNSLHNCQUFzQjtFQUN0QixtQkFBbUI7QVRpcEJyQjs7QVM5b0JBO3NFVGlwQnNFO0FTL29CdEU7RUFDRSxjQUFjO0VBQ2QsV0FBVztBVGlwQmI7O0FTOW9CQTtFQUNFLFlBQVk7QVRpcEJkOztBUzlvQkEsdUVBQUE7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osZUFBZTtFQUNmLGtCQUFrQjtFQUVsQix5QkFBeUI7RUFDekIsNEJBQTRCO0VBRTVCLGdCUjVPZTtFUThPZixtQkFBbUI7RUFnQm5CLDJEQUFBO0FUK25CRjs7QVM3cEJBO0VBaUJJLGdCQUFnQjtBVGdwQnBCOztBU2pxQkE7RUFxQkksaUJBQWlCO0FUZ3BCckI7O0FTcnFCQTtFQXdCTSxlQUFlO0VBQ2YsZ0NBQWdDO0VBQ2hDLHlCQUF5QjtBVGlwQi9COztBUzNxQkE7RUFnQ0kscUJBQXFCO0VBRXJCLG1CQUFBO0VBQ0EsU0FBUztFQUNULFFBQVE7RUFDUixZQUFZO0VBQ1osZUFBZTtFQUNmLGtDQUFrQztFQUNsQyxtQ0FBbUM7RUFDbkMsZ0NBQWdDO0VBQ2hDLGlDQUFpQztBVDhvQnJDOztBUzFvQkE7RUFDRSxXQUFXO0FUNm9CYjs7QVMxb0JBO0VBQ0UsY0FBYztFQUNkLFdBQVc7RUFDWCxTQUFTO0VBQ1QsYUFBYTtFQUNiLGlCQUFpQjtBVDZvQm5COztBVTc4QkE7OztDVms5QkM7QVU3OEJEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NWcy9CQztBVTU4QkQ7Z0JWODhCZ0I7QVUzOEJoQjtFQUNFO2tDVjY4QmdDO0VVMzhCaEMsY0FBYztBVjY4QmhCOztBVTE4QkE7RUFDRSxXQUFXO0FWNjhCYjs7QVUxOEJBO0VBQ0UsdURBQUE7RUFDQSxlQUFlO0FWNjhCakI7O0FVMThCQTtFQUVJLHlCQUF5QjtFQUN6QixjQUFjO0FWNDhCbEI7O0FVeDhCQTtFQUNFLFlBQVk7QVYyOEJkOztBVTU4QkE7RUFJSSxpQkFBaUI7RUFDakIsVUFBVTtBVjQ4QmQ7O0FVeDhCQTtFQUNFLGtCQUFrQjtBVjI4QnBCOztBVXg4QkE7OztFQUdFLG1CQUFtQjtBVjI4QnJCOztBVXg4QkEsd0JBQUE7QUFDQTtFQUNFLHlCQUF5QjtFQUN6QixhQUFhO0VBQUUsOEJBQUE7RUFDZix5QkFBeUI7RUFBRSxPQUFBO0VBQzNCLFlBQVk7QVY2OEJkOztBVTE4QkE7RUFDRSxZQUFZO0VBQ1osUUFBUTtFQUNSLGNBQWM7QVY2OEJoQjs7QVUxOEJBO0VBR00seUJBQXlCO0FWMjhCL0I7O0FVdDhCQTtFQUdNLG9EQUFBO0VBQ0EsWUFBWTtFQUNaLHlCQUF5QjtBVnU4Qi9COztBVWw4QkEsd0NBQUE7QUFDQTtFQUNFLGNBQWM7RUFDZCw2QkFBNkI7RUFDN0IsV0FBVztFQUNYLHNCQUFzQjtBVnE4QnhCOztBVWw4QkE7RUFDRSxzREFBQTtFQUNBLFlBQVk7RUFDWix5QkFBeUI7QVZxOEIzQjs7QVVsOEJBO0VBQ0UseUJBQXlCO0VBQ3pCLHlCQUF5QjtBVnE4QjNCOztBVXY4QkE7RUFLSSxrQkFBa0I7QVZzOEJ0Qjs7QVVsOEJBO0VBRUkseUJBQXlCO0FWbzhCN0I7O0FVaDhCQTtFQUNFLGFBQWE7QVZtOEJmOztBVWg4QkEscURBQUE7QUFDQTtFQUNFLHlCQUF5QjtFQUN6QixXQUFXO0VBQ1gseUJBQXlCO0VBQUUsT0FBQTtFQUMzQixhQUFhO0VBQUUsOEJBQUE7QVZxOEJqQjs7QVVsOEJBLG1EQUFBO0FBQ0E7RUFDRSx1Q0FBdUM7RUFDdkMsMkJBQTJCO0VBQzNCLDRCQUE0QjtFQUM1QixjQUFjO0FWcThCaEI7O0FVejhCQTtFQU9JLGFBQWE7QVZzOEJqQjs7QVVsOEJBO0VBQ0UsOEJBQThCO0VBQzlCLDRCQUE0QjtBVnE4QjlCOztBVWw4QkE7RUFDRSxzQkFBc0I7RUFDdEIsZUFBZTtBVnE4QmpCOztBVzVuQ0E7OztDWGlvQ0M7QVc1bkNEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NYZ3BDQztBVzNuQ0QsOENBQUE7QUFDQTtFQUNFLHFCQUFxQjtFQUNyQixXQUFXO0FYNm5DYjs7QVcxbkNBO0VBQ0UsWUFBWTtBWDZuQ2Q7O0FXMW5DQTtFQUNFLGdCQUFnQjtBWDZuQ2xCOztBVzFuQ0E7b0RYNm5Db0Q7QVczbkNwRDtFQUNFLGFBQWE7RUFDYixXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixpQkFBaUI7QVg2bkNuQjs7QVcxbkNBO0VBQ0UsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixlQUFlO0FYNm5DakI7O0FXMW5DQSw0Q0FBQTtBQUNBO0VBQ0UscUJBQXFCO0VBQ3JCLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsZ0JWcEJlO0VVcUJmLHNCVHpEVTtFUzBEVixnQlQxRFU7QUZ1ckNaOztBVzFuQ0EsdUNBQUE7QUFhQTtFQUVJLHlCVmtFNEI7QUQ4aUNoQzs7QVc1bUNBO0VBQ0UsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixlQUFlO0FYK21DakI7O0FXNW1DQTtFQUNFLFlBQVk7QVgrbUNkOztBVzVtQ0E7RUFDRSxpQkFBaUI7RUFDakIsWUFBWTtBWCttQ2Q7O0FXNW1DQTtFQUVJLGlCQUFpQjtFQUNqQixZQUFZO0FYOG1DaEI7O0FXMW1DQTs7Z0NYOG1DZ0M7QVczbUNoQztFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLGVBQWU7RUFDZixjQUFjO0VBQ2QsWUFBWTtFQUNaLGVBQWU7QVg2bUNqQjs7QVcxbUNBO0VBQ0UsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsbUJBQW1CO0FYNm1DckI7O0FXMW1DQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0FYNm1DakI7O0FXMW1DQTs2Q1g2bUM2QztBVzNtQzdDO0VBQ0UsZUFBZTtFQUNmLHFCQUFxQjtFQUNyQixZQUFZO0VBQ1osWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsVUFBVTtBWDZtQ1o7O0FXMW1DQTtFQUNFLFlBQVk7QVg2bUNkOztBVzFtQ0Esd0VBQUE7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixXQUFXO0VBRVgsbUJBQUE7RUFDQSxTQUFTO0VBQ1QsUUFBUTtFQUNSLFlBQVk7RUFDWixrQ0FBa0M7RUFDbEMsbUNBQW1DO0VBQ25DLDBCVGpKYTtBRjZ2Q2Y7O0FXem1DQTtFQUNFLGVBQWU7RUFDZixXQUFXO0VBQ1gsU0FBUztFQUNULGVBQWU7QVg0bUNqQjs7QVd6bUNBLGtDQUFBO0FBQ0E7RUFFSSxZQUFZO0FYMm1DaEI7O0FZMXhDQTs7O0NaK3hDQztBWTF4Q0QsMEJBQUE7QUFNQSw0QkFBQTtBQUNBO0VBQ0UsV0FBVztBWnV4Q2I7O0FZcHhDQSwyQkFBQTtBQUNBO0VBQ0UsWUFBWTtBWnV4Q2Q7O0FZcHhDQSxxQkFBQTtBQUNBO0VBQ0UscUNBQXFDO0VBQ3JDLGdCQUFnQjtFQUNoQixzQkFBc0I7RUFDdEIsZ0JBQWdCO0FadXhDbEI7O0FHenhDQTs7a0ZINnhDa0Y7QUcxeENsRjtFQUNFLG1CQUFtQjtBSDR4Q3JCOztBR3p4Q0E7RUFDRSxrQkFBa0I7QUg0eENwQjs7QUd6eENBOzs7c0JIOHhDc0I7QUcxeEN0QjtFQUNFLGFBQWE7QUg0eENmOztBR3p4Q0E7RUFDRSxhQUFhO0FINHhDZjs7QUQ5ekNBO0VBQ0Usc0VFMkltRTtVRjNJbkUsOERFMkltRTtBRHNyQ3JFIiwiZmlsZSI6ImFzc2V0cy9ja2VkaXRvci1ib290c3RyYXAvc2Nzcy9lZGl0b3IuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENLRWRpdG9yIGVkaXRvci5cclxuICovXHJcbkBpbXBvcnQgXCIuLi8uLi9hbmFraW4vc2Nzcy9pbmNsdWRlcy92YXJpYWJsZXNcIjtcclxuQGltcG9ydCBcIi4uLy4uLy4uLy4uL3lpaTItc2tlbGV0b24vYXNzZXRzL2FkbWluL3Njc3MvaW5jbHVkZXMvdmFyaWFibGVzXCI7XHJcblxyXG4vLyRpbnB1dC1ib3JkZXItY29sb3I6ICRncmF5LTQwMDtcclxuXHJcbkBpbXBvcnQgXCIuLi8uLi8uLi8uLi95aWkyLXNrZWxldG9uL2Fzc2V0cy9ja2VkaXRvci1ib290c3RyYXAvc2Nzcy9lZGl0b3JcIjtcclxuXHJcbi5ja2VfaW5uZXIge1xyXG4gIGJveC1zaGFkb3c6ICRpbnB1dC1ib3gtc2hhZG93O1xyXG59XHJcbiIsIi8qKlxyXG4gKiBDS0VkaXRvciBlZGl0b3IuXHJcbiAqL1xuLypcbkNvbmZpZy5cbiAqL1xuLypcbkNvbG9ycy5cbiAqL1xuLypcbkdyaWQuXG4gKi9cbi8qXG5TcGFjZXJzLlxuICovXG4vKlxuQm9yZGVyLlxuICovXG4vKlxuVGV4dC5cbiAqL1xuLypcbk5hdnMuXG4gKi9cbi8qXG5OYXZiYXIuXG4gKi9cbi8qXG5CcmVhZGNydW1icy5cbiAqL1xuLypcbkFsZXJ0LlxuICovXG4vKlxuQ2FyZC5cbiAqL1xuLypcbklucHV0LlxuICovXG4vKlxuTGlzdCBncm91cC5cbiAqL1xuLypcblRpdGxlLlxuICovXG4vKlxuUGFuZWwuXG4gKi9cbi8qXG5MaXN0cy5cbiAqL1xuLypcbkJ1dHRvbnMuXG4gKi9cbi8qXG5Gb3Jtcy5cbiAqL1xuLypcblRhYmxlcy5cbiAqL1xuLypcbkJhZGdlLlxuICovXG4vKlxuQ29sb3JzLlxuICovXG4vKlxuR3JpZC5cbiAqL1xuLypcblNwYWNlcnMuXG4gKi9cbi8qKlxuQm9yZGVyLlxuICovXG4vKlxuVGV4dC5cbiAqL1xuLypcbk5hdnMuXG4gKi9cbi8qXG5OYXZiYXIuXG4gKi9cbi8qXG5CcmVhZGNydW1icy5cbiAqL1xuLypcbkFsZXJ0LlxuICovXG4vKlxuQ2FyZC5cbiAqL1xuLypcbkdyaWQgdmlldy5cbiAqL1xuLypcbkJ1dHRvbnMuXG4gKi9cbi8qXG5JbnB1dC5cbiAqL1xuLypcbkxpc3QgZ3JvdXAuXG4gKi9cbi8qXG5UYWJsZXMuXG4gKi9cbi8qXG5QYWdpbmF0aW9uLlxuICovXG4vKlxuRHJvcGRvd24uXG4gKi9cbi8qXG5CYWRnZS5cbiAqL1xuLypcblRvb2x0aXAuXG4gKi9cbi8qKlxuVGh1bWJuYWlsLlxuICovXG4vKlxuSWNvbi5cbiAqL1xuLyoqXHJcbiAqIENLRWRpdG9yIGRpYWxvZy5cclxuICovXG4vKipcclxuICogVGhlIGRlZmF1bHQgc3R5bGVzaGVldCBpbmNsdWRlZCBvbiBhbGwgcmVxdWVzdHMuXHJcbiAqL1xuLypcbkNvbG9ycy5cbiAqL1xuLypcbkdyaWQuXG4gKi9cbi8qXG5TcGFjZXJzLlxuICovXG4vKipcbkJvcmRlci5cbiAqL1xuLypcblRleHQuXG4gKi9cbi8qXG5OYXZzLlxuICovXG4vKlxuTmF2YmFyLlxuICovXG4vKlxuQnJlYWRjcnVtYnMuXG4gKi9cbi8qXG5BbGVydC5cbiAqL1xuLypcbkNhcmQuXG4gKi9cbi8qXG5HcmlkIHZpZXcuXG4gKi9cbi8qXG5CdXR0b25zLlxuICovXG4vKlxuSW5wdXQuXG4gKi9cbi8qXG5MaXN0IGdyb3VwLlxuICovXG4vKlxuVGFibGVzLlxuICovXG4vKlxuUGFnaW5hdGlvbi5cbiAqL1xuLypcbkRyb3Bkb3duLlxuICovXG4vKlxuQmFkZ2UuXG4gKi9cbi8qXG5Ub29sdGlwLlxuICovXG4vKipcblRodW1ibmFpbC5cbiAqL1xuLypcbkljb24uXG4gKi9cbi8qKlxyXG4gKiBJbmNsdWRlcyBCb290c3RyYXAgNC5cclxuICovXG4vKlxyXG5Db3B5cmlnaHQgKGMpIDIwMDMtMjAxNCwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cDovL2NrZWRpdG9yLmNvbS9saWNlbnNlXHJcbiovXG4vKlxyXG5tYWludWkuY3NzIChwYXJ0IG9mIGVkaXRvci5jc3MpXHJcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuVGhpcyBmaWxlIHN0eWxlcyB0aGUgYmFzaWMgc3RydWN0dXJlIG9mIHRoZSBDS0VkaXRvciB1c2VyIGludGVyZmFjZSAtIHRoZSBib3hcclxudGhhdCBob2xkcyBldmVyeXRoaW5nLlxyXG5cclxuQ0tFZGl0b3Igb2ZmZXJzIHR3byBtYWluIGVkaXRpbmcgbW9kZXMuIFRoZSBtYWluIFVJIGJsb2NrcyB0aGF0IGNvbXBvc2UgdGhlc2VcclxubW9kZXMgYXJlOlxyXG5cclxuICAgIEZvciBcIlRoZW1lIFVJXCIgbW9kZSwgdGhlIG9uZSBtb3N0IGdlbmVyYWxseSB1c2VkOlxyXG5cclxuICAgICstLSAuY2tlX2Nocm9tZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG4gICAgfCstLSAuY2tlX2lubmVyIC0tLS0tLS0tLS0tLS0tLS0tLS0tLSt8XHJcbiAgICB8fCArLS0gLmNrZV90b3AgLS0tLS0tLS0tLS0tLS0tLS0tLSsgfHxcclxuICAgIHx8IHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB8fFxyXG4gICAgfHwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHx8XHJcbiAgICB8fCArLS0gLmNrZV9jb250ZW50cyAtLS0tLS0tLS0tLS0tLSsgfHxcclxuICAgIHx8IHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB8fFxyXG4gICAgfHwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHx8XHJcbiAgICB8fCArLS0gLmNrZV9ib3R0b20gLS0tLS0tLS0tLS0tLS0tLSsgfHxcclxuICAgIHx8IHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB8fFxyXG4gICAgfHwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHx8XHJcbiAgICB8Ky0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK3xcclxuICAgICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG5cclxuICAgIEZvciBcIklubGluZSBFZGl0aW5nXCIgbW9kZTpcclxuXHJcbiAgICArLS0gLmNrZV9jaHJvbWUgLmNrZV9mbG9hdC0tLS0tLS0tLS0tLStcclxuICAgIHwrLS0gLmNrZV9pbm5lciAtLS0tLS0tLS0tLS0tLS0tLS0tLS0rfFxyXG4gICAgfHwgKy0tIC5ja2VfdG9wIC0tLS0tLS0tLS0tLS0tLS0tLS0rIHx8XHJcbiAgICB8fCB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgfHxcclxuICAgIHx8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8fFxyXG4gICAgfCstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSt8XHJcbiAgICArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxuXHJcblNwZWNpYWwgb3V0ZXIgbGV2ZWwgY2xhc3NlcyB1c2VkIGluIHRoaXMgZmlsZTpcclxuXHJcbiAgICAuY2tlX2hjOiBBdmFpbGFibGUgd2hlbiB0aGUgZWRpdG9yIGlzIHJlbmRlcmVkIG9uIFwiSGlnaCBDb250cmFzdFwiLlxyXG5cclxuKi9cbi8qIFRoZSBvdXRlciBib3VuZGFyeSBvZiB0aGUgaW50ZXJmYWNlLiAqL1xuLmNrZV9jaHJvbWUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgY29sb3I6ICMwMDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuXG4vKiBUaGUgaW5uZXIgYm91bmRhcnkgb2YgdGhlIGludGVyZmFjZS4gKi9cbi5ja2VfaW5uZXIge1xuICAvKiBUaGlzIGlzIDxzcGFuPiwgc28gdHJhbnNmb3JtIGl0IGludG8gYSBibG9jay4qL1xuICBkaXNwbGF5OiBibG9jaztcbiAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyogQWRkZWQgdG8gdGhlIG91dGVyIGJvdW5kYXJ5IG9mIHRoZSBVSSB3aGVuIGluIGlubGluZSBlZGl0aW5nLFxyXG4gICB3aGVuIHRoZSBVSSBpcyBmbG9hdGluZy4gKi9cbi5ja2VfZmxvYXQge1xuICAvKiBNYWtlIHdoaXRlIHRoZSBzcGFjZSBiZXR3ZWVuIHRoZSBvdXRlciBhbmQgdGhlIGlubmVyIGJvcmRlcnMuICovXG4gIGJvcmRlcjogbm9uZTtcbn1cblxuLmNrZV9mbG9hdCAuY2tlX2lubmVyIHtcbiAgLyogQXMgd2UgZG9uJ3QgaGF2ZSBibG9ja3MgZm9sbG93aW5nIHRvcCAodG9vbGJhcikgd2Ugc3VwcHJlc3MgdGhlIHBhZGRpbmdcclxuICAgICAgIGFzIHRoZSB0b29sYmFyIGRlZmluZXMgaXRzIG93biBtYXJnaW4uICovXG4gIHBhZGRpbmctYm90dG9tOiAwO1xufVxuXG4uY2tlX2Zsb2F0IC5ja2VfdG9wIHtcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG59XG5cbi8qIE1ha2UgdGhlIG1haW4gc3BhY2VzIGVubGFyZ2UgdG8gaG9sZCBwb3RlbnRpYWxseSBmbG9hdGVkIGNvbnRlbnQuICovXG4uY2tlX3RvcCwgLmNrZV9jb250ZW50cywgLmNrZV9ib3R0b20ge1xuICAvKiBUaGVzZSBhcmUgPHNwYW4+cywgc28gdHJhbnNmb3JtIHRoZW0gaW50byBibG9ja3MuKi9cbiAgZGlzcGxheTogYmxvY2s7XG4gIC8qIElkZWFsbHkgdGhpcyBzaG91bGQgYmUgXCJhdXRvXCIsIGJ1dCBpdCBzaG93cyBzY3JvbGxiYXJzIGluIElFNy4gKi9cbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmNrZV90b3AsIC5ja2VfYm90dG9tIHtcbiAgcGFkZGluZzogM3B4IDAgMDtcbiAgYmFja2dyb3VuZDogI2RkZDtcbn1cblxuLmNrZV90b3Age1xuICBjb2xvcjogIzAwMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAvKiBBbGxvdyBicmVha2luZyB0b29sYmFycyB3aGVuIGluIGEgbmFycm93IGVkaXRvci4gKCM5OTQ3KSAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICBwYWRkaW5nOiAxMnB4IDAgMTJweCAxMnB4O1xufVxuXG4uY2tlX2NvbnRlbnRzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyOiAwO1xuICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSk7XG59XG5cbi5ja2VfYm90dG9tIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4vKiBPbiBpT1Mgd2UgbmVlZCB0byBtYW51YWxseSBlbmFibGUgc2Nyb2xsaW5nIGluIHRoZSBjb250ZW50cyBibG9jay4gKCM5OTQ1KSAqL1xuLmNrZV9icm93c2VyX2lvcyAuY2tlX2NvbnRlbnRzIHtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xufVxuXG4vKlxyXG5Db3B5cmlnaHQgKGMpIDIwMDMtMjAxNCwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cDovL2NrZWRpdG9yLmNvbS9saWNlbnNlXHJcbiovXG4vKlxyXG5wYW5lbC5jc3MgKHBhcnQgb2YgZWRpdG9yLmNzcylcclxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcblBhbmVscyBhcmUgZmxvYXRpbmcgZWxlbWVudHMgdGhhdCBjYW4gaG9sZCBkaWZmZXJlbnQgdHlwZXMgb2YgY29udGVudHMuXHJcblRoZSBmb2xsb3dpbmcgYXJlIGNvbW1vbiB1c2VzIG9mIGl0OlxyXG5cclxuICAgIC0gVGhlIGVsZW1lbnQgdGhhdCB0b29sYmFyIGNvbWJvcyBkaXNwbGF5IHdoZW4gb3BlbmluZyB0aGVtLlxyXG4gICAgLSBUaGUgY29udGV4dCBtZW51LlxyXG4gICAgLSBUaGUgbGlzdCBvZiBpdGVtcyBkaXNwbGF5ZWQgYnkgXCJtZW51IGJ1dHRvbnNcIiAoZS5nLiBzY2F5dCkuXHJcbiAgICAtIFRoZSBwYW5lbCBzaG93biB3aGVuIG9wZW5pbmcgXCJwYW5lbCBidXR0b25zXCIgKGUuZy4gY29sb3IgYnV0dG9ucykuXHJcblxyXG5QYW5lbCBjb250ZW50cyBhcmUgd3JhcHBlZCBpbnRvIGFuIGlmcmFtZSwgc28gaXQgaXMgcG9zc2libGUgdG8gaGF2ZSBhZGRpdGlvbmFsXHJcbkNTUyBsb2FkZWQgaW5zaWRlIHRoZW0gKGUuZy4gdG8gaGF2ZSBtb3JlIGFjY3VyYXRlIHByZXZpZXcgb24gdGhlIHN0eWxlcyBjb21ibykuXHJcblxyXG5UaGUgZm9sbG93aW5nIGlzIGEgdmlzdWFsIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBvdXRlciBlbGVtZW50cyBvZiBhIHBhbmVsOlxyXG5cclxuKy0tIC5ja2VfcGFuZWwoKikgLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG58ICstLSBJRlJBTUUuY2tlX3BhbmVsX2ZyYW1lIC0tLS0tLS0tKyB8XHJcbnwgfCArLS0gSFRNTC5ja2VfcGFuZWxfY29udGFpbmVyIC0tKyB8IHxcclxufCB8IHwgKy0tIC5ja2VfcGFuZWxfYmxvY2sgLS0tLS0tKyB8IHwgfFxyXG58IHwgfCB8ICAgICAgICAgICAgICAgICAgICAgICAgICB8IHwgfCB8XHJcbnwgfCB8IHwgICAgIChjb250ZW50cyBoZXJlKSAgICAgIHwgfCB8IHxcclxufCB8IHwgfCAgICAgICAgICAgICAgICAgICAgICAgICAgfCB8IHwgfFxyXG58IHwgfCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfCB8XHJcbnwgfCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8IHxcclxufCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfFxyXG4rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rXHJcblxyXG4oKikgQWxsIGtpbmRzIG9mIHBhbmVsIHNoYXJlIHRoZSBhYm92ZSBzdHJ1Y3R1cmUuIE1lbnUgcGFuZWxzIGFkZHMgdGhlXHJcbiAgICAuY2tlX21lbnVfcGFuZWwgY2xhc3MgdG8gdGhlIG91dGVyIGVsZW1lbnQsIHdoaWxlIHRvb2xiYXIgY29tYm9zIGFkZCB0aGVcclxuICAgIC5ja2VfY29tYm9wYW5lbCBjbGFzcy5cclxuXHJcblRoaXMgZmlsZSBhbHNvIGRlZmluZXMgc3R5bGVzIGZvciBwYW5lbCBsaXN0cyAodXNlZCBieSBjb21ib3MpLiBGb3IgbWVudS1saWtlXHJcbnBhbmVsIGNvbnRlbnRzIGFuZCBjb2xvciBwYW5lbHMgY2hlY2sgbWVudS5jc3MgYW5kIGNvbG9ycGFuZWwuY3NzLlxyXG4qL1xuLyogVGhlIGJveCB0aGF0IGhvbGRzIGFuIElGUkFNRS4gSXQncyBpbnNlcnRlZCBpbnRvIGEgaG9zdCBkb2N1bWVudCBhbmQgcG9zaXRpb25lZFxyXG4gICBhYnNvbHV0ZWx5IGJ5IHRoZSBhcHBsaWNhdGlvbi4gSXQgZmxvYXRzIGFib3ZlIHRoZSBob3N0IGRvY3VtZW50L2VkaXRvci4gKi9cbi5ja2VfcGFuZWwge1xuICAvKiBSZXN0b3JlIHRoZSBsb2FkaW5nIGhpZGUgKi9cbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgd2lkdGg6IDEyMHB4O1xuICBoZWlnaHQ6IDEwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG59XG5cbi8qIFRoaXMgY2xhc3MgcmVwcmVzZW50cyBwYW5lbHMgd2hpY2ggYXJlIHVzZWQgYXMgY29udGV4dCBtZW51cy4gKi9cbi5ja2VfbWVudV9wYW5lbCB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogVGhpcyBjbGFzcyByZXByZXNlbnRzIHBhbmVscyB3aGljaCBhcmUgdXNlZCBieSByaWNoIGNvbWJvcy4gKi9cbi5ja2VfY29tYm9wYW5lbCB7XG4gIHdpZHRoOiAxNTBweDtcbiAgaGVpZ2h0OiAxMTBweDtcbn1cblxuLyogVGhlIElGUkFNRSB0aGUgcGFuZWwgaXMgd3JhcHBlZCBpbnRvLiAqL1xuLmNrZV9wYW5lbF9mcmFtZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLyogVGhlIEhUTUwgZG9jdW1lbnQgd2hpY2ggaXMgYSBkaXJlY3QgZGVzY2VuZGFudCBvZiB0aGUgSUZSQU1FICovXG4uY2tlX3BhbmVsX2NvbnRhaW5lciB7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLypcclxuSGVyZSB3ZSBzdGFydCB0aGUgZGVmaW5pdGlvbiBvZiBwYW5lbCBsaXN0cyAoZS5nLiBjb21ibyBwYW5lbHMpLiBUaGUgZm9sbG93aW5nXHJcbmlzIGl0cyB2aXN1YWwgcmVwcmVzZW50YXRpb246XHJcblxyXG4rLS0gLmNrZV9wYW5lbF9ibG9jayAtLS0tLS0tLS0tLS0tLS0tLStcclxufCArLS0gLmNrZV9wYW5lbF9ncm91cHRpdGxlIC0tLS0tLS0tKyB8XHJcbnwgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgfFxyXG58ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxufCArLS0gLmNrZV9wYW5lbF9saXN0IC0tLS0tLS0tLS0tLS0tKyB8XHJcbnwgfCArLS0gLmNrZV9wYW5lbF9saXN0SXRlbSAtLS0tLS0rIHwgfFxyXG58IHwgfCArLS0gYSAtLS0tLS0tLS0tLS0tLS0tLS0tLSsgfCB8IHxcclxufCB8IHwgfCArLS0gc3BhbiAtLS0tLS0tLS0tLS0tKyB8IHwgfCB8XHJcbnwgfCB8IHwgfCAgICAgICAgICAgICAgICAgICAgIHwgfCB8IHwgfFxyXG58IHwgfCB8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfCB8IHxcclxufCB8IHwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfCB8XHJcbnwgfCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfFxyXG58IHwgKy0tIC5ja2VfcGFuZWxfbGlzdEl0ZW0gLS0tLS0tKyB8IHxcclxufCB8IHwgKy0tIGEgLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfCB8XHJcbnwgfCB8IHwgKy0tIHNwYW4gLS0tLS0tLS0tLS0tLSsgfCB8IHwgfFxyXG58IHwgfCB8IHwgICAgICAgICAgICAgICAgICAgICB8IHwgfCB8IHxcclxufCB8IHwgfCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8IHwgfCB8XHJcbnwgfCB8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8IHwgfFxyXG58IHwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8IHxcclxufCB8IC4uLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfFxyXG4rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxuKi9cbi8qIFRoZSBsaXN0IG9mIHBhbmVsIGl0ZW1zLiAqL1xuLmNrZV9wYW5lbF9saXN0IHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLyogVGhlIGl0ZW0gb2YgLmNrZV9wYW5lbF9saXN0ICovXG4uY2tlX3BhbmVsX2xpc3RJdGVtIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nLWJvdHRvbTogMXB4O1xufVxuXG4vKiBUaGUgY2hpbGQgb2YgLmNrZV9wYW5lbF9saXN0SXRlbS4gVGhlc2UgZWxlbWVudHMgY29udGFpbiBzcGFucyB3aGljaCBhcmVcclxuICAgdG8gZGlzcGxheSBhIHJlYWwgbmFtZSBvZiB0aGUgcHJvcGVydHkgd2hpY2ggaXMgdmlzaWJsZSBmb3IgYW4gZW5kLXVzZXIuICovXG4uY2tlX3BhbmVsX2xpc3RJdGVtIGEge1xuICBwYWRkaW5nOiA2cHggMTBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuLmNrZV9wYW5lbF9saXN0SXRlbSBhOmhvdmVyLCAuY2tlX3BhbmVsX2xpc3RJdGVtIGE6Zm9jdXMsIC5ja2VfcGFuZWxfbGlzdEl0ZW0gYTphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkO1xuICBvdXRsaW5lOiAwO1xufVxuXG4uY2tlX3BhbmVsX2xpc3RJdGVtIGEgPiAqIHtcbiAgZm9udC1zaXplOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0ICFpbXBvcnRhbnQ7XG59XG5cbi8qIElFNiAqL1xuKiBodG1sIC5ja2VfcGFuZWxfbGlzdEl0ZW0gYSB7XG4gIHdpZHRoOiAxMDAlO1xuICAvKiBJRSBpcyBub3QgYWJsZSB0byBpbmhlcml0IHRoZSBjb2xvciwgc28gd2UgbXVzdCBmb3JjZSBpdCB0byBibGFjayAqL1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyogSUU3ICovXG4qOmZpcnN0LWNoaWxkICsgaHRtbCAuY2tlX3BhbmVsX2xpc3RJdGVtIGEge1xuICAvKiBJRSBpcyBub3QgYWJsZSB0byBpbmhlcml0IHRoZSBjb2xvciwgc28gd2UgbXVzdCBmb3JjZSBpdCB0byBibGFjayAqL1xuICBjb2xvcjogIzAwMDtcbn1cblxuLmNrZV9wYW5lbF9saXN0SXRlbS5ja2Vfc2VsZWN0ZWQgYSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkZGQ7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5ja2VfaGMgLmNrZV9wYW5lbF9saXN0SXRlbSBhIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4uY2tlX2hjIC5ja2VfcGFuZWxfbGlzdEl0ZW0gYTpob3ZlciwgLmNrZV9oYyAuY2tlX3BhbmVsX2xpc3RJdGVtIGE6Zm9jdXMsIC5ja2VfaGMgLmNrZV9wYW5lbF9saXN0SXRlbSBhOmFjdGl2ZSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkO1xuICBwYWRkaW5nOiAxcHggMnB4O1xufVxuXG4vKiBUaGUgdGl0bGUgb2YgdGhlIGVudGlyZSBwYW5lbCB3aGljaCBpcyB2aXNpYmxlIG9uIHRvcCBvZiB0aGUgbGlzdC4gKi9cbi5ja2VfcGFuZWxfZ3JvdXB0aXRsZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIFRoZSBmb2xsb3dpbmcgc3R5bGVzIHNldCBkZWZhdWx0cyBvZiB0aGUgZWxlbWVudHMgdXNlZCBieSB0aGUgUGFyYWdyYXBoXHJcbiAgIEZvcm1hdCBwYW5lbC4gKi9cbi5ja2VfcGFuZWxfbGlzdEl0ZW0gcCwgLmNrZV9wYW5lbF9saXN0SXRlbSBoMSwgLmNrZV9wYW5lbF9saXN0SXRlbSBoMiwgLmNrZV9wYW5lbF9saXN0SXRlbSBoMywgLmNrZV9wYW5lbF9saXN0SXRlbSBoNCwgLmNrZV9wYW5lbF9saXN0SXRlbSBoNSwgLmNrZV9wYW5lbF9saXN0SXRlbSBoNiwgLmNrZV9wYW5lbF9saXN0SXRlbSBwcmUge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4vKipcbiAqIENLRWRpdG9yIGNvbmZpZy5cbiAqL1xuLmNrZV9lZGl0YWJsZSB7XG4gIHBhZGRpbmc6IDEycHggMTJweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMS40O1xuICBjb2xvcjogIzAwMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvdXRsaW5lOiAwO1xufVxuXG4uY2tlX2ZvY3VzIC5ja2VfZWRpdGFibGUge1xuICBjb2xvcjogIzAwMDtcbn1cblxuLmNrZV9lZGl0YWJsZSBhIHtcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4uY2tlX2VkaXRhYmxlIGJsb2NrcXVvdGUge1xuICBwYWRkaW5nOiAxMnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xufVxuXG4uY2tlX2VkaXRhYmxlIGgxIHtcbiAgZm9udC1zaXplOiAyNHB4O1xufVxuXG4uY2tlX2VkaXRhYmxlIGgyIHtcbiAgZm9udC1zaXplOiAyMnB4O1xufVxuXG4uY2tlX2VkaXRhYmxlIGgzIHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uY2tlX2VkaXRhYmxlIGg0IHtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG4uY2tlX2VkaXRhYmxlIGg1IHtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG4uY2tlX2VkaXRhYmxlIHA6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5ja2VfZWRpdGFibGUgdGFibGUge1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uY2tlX2VkaXRhYmxlIHRkIHtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgcGFkZGluZzogLjVlbTtcbn1cblxuLypcclxuQ29weXJpZ2h0IChjKSAyMDAzLTIwMTQsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbkZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHA6Ly9ja2VkaXRvci5jb20vbGljZW5zZVxyXG4qL1xuLypcclxuY29sb3JwYW5lbC5jc3MgKHBhcnQgb2YgZWRpdG9yLmNzcylcclxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuVGhlIGNvbG9yIHBhbmVsIGlzIHJlbGF0ZWQgdG8gdGhlIGNvbnRlbnRzIHBhcnQgb2YgdGhlIHBhbmVscyB0aGF0IGFyZVxyXG5kaXNwbGF5ZWQgd2hlbiBjbGlja2luZyB0aGUgY29sb3IgYnV0dG9ucyBvZiB0aGUgdG9vbGJhci4gU2VlIHBhbmVscy5jc3MgZm9yXHJcbnN0eWxlcyByZWxhdGVkIHRvIHRoZSBvdXRlciBwYXJ0IG9mIHBhbmVscy5cclxuXHJcblRoZSBmb2xsb3dpbmcgaXMgdGhlIHZpc3VhbCByZXByZXNlbnRhdGlvbiBvZiB0aGUgY29sb3IgcGFuZWwgY29udGVudHM6XHJcblxyXG4rLS0gLmNrZV9wYW5lbF9ibG9jay5ja2VfY29sb3JibG9jayAtLStcclxufCArLS0gYS5ja2VfY29sb3JhdXRvIC0tLS0tLS0tLS0tLS0tKyB8XHJcbnwgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgfFxyXG58IHwgICAgICAgICBBVVRPTUFUSUMgQ09MT1IgICAgICAgICB8IHxcclxufCB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfFxyXG58ICstLSB0YWJsZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxufCB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB8XHJcbnwgfCAgICAgICAgICBDT0xPUiBQQUxFVFRFICAgICAgICAgIHwgfFxyXG58IHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHxcclxufCB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfCB8XHJcbnwgfCAgICAgICAgICBcIk1vcmUgQ29sb3JzXCIgICAgICAgICAgfCB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfFxyXG4rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxuXHJcblRoZSBBVVRPTUFUSUMgQ09MT1Igc2VjdGlvbiBpcyBhbiA8YT4gY29udGFpbmluZyBhIHRhYmxlIHdpdGggdHdvIGNlbGxzIHdpdGhcclxudGhlIGZvbGxvd2luZyBjb250ZW50czpcclxuXHJcbistLSBURCAtLS0tLS0tLS0tLS0tLS0tLSsgKy0tIFREIC0tLS0tLS0tLS0tLS0tLS0tK1xyXG58ICstLSAuY2tlX2NvbG9yYm94IC0tKyB8IHwgICAgICAgICAgICAgICAgICAgICAgIHxcclxufCB8ICAgICAgICAgICAgICAgICAgIHwgfCB8ICAgICAgXCJBdXRvbWF0aWNcIiAgICAgIHxcclxufCArLS0tLS0tLS0tLS0tLS0tLS0tLSsgfCB8ICAgICAgICAgICAgICAgICAgICAgICB8XHJcbistLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG5cclxuVGhlIENPTE9SIFBBTEVUVEUgc2VjdGlvbiBpbnN0ZWFkIGlzIGEgdGFibGUgd2l0aCBhIHZhcmlhYmxlIG51bWJlciBvZiBjZWxsc1xyXG4oYnkgZGVmYXVsdCA4KS4gRWFjaCBjZWxsIHJlcHJlc2VudHMgYSBjb2xvciBib3gsIHdpdGggdGhlIGZvbGxvd2luZyBzdHJ1Y3R1cmU6XHJcblxyXG4rLS0gQS5ja2VfY29sb3Jib3ggLS0tLS0tLS0tK1xyXG58ICstLSBTUEFOLmNrZV9jb2xvcmJveCAtLSsgfFxyXG58IHwgICAgICAgICAgICAgICAgICAgICAgIHwgfFxyXG58ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfFxyXG4rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG4qL1xuLyogVGhlIGNvbnRhaW5lciBvZiB0aGUgY29sb3IgcGFsZXR0ZS4gKi9cbi5ja2VfY29sb3JibG9jayB7XG4gIHBhZGRpbmc6IDNweDtcbiAgZm9udC1zaXplOiAxMXB4O1xuICBmb250LWZhbWlseTogJ01pY3Jvc29mdCBTYW5zIFNlcmlmJywgVGFob21hLCBBcmlhbCwgVmVyZGFuYSwgU2Fucy1TZXJpZjtcbn1cblxuLmNrZV9jb2xvcmJsb2NrLFxuLmNrZV9jb2xvcmJsb2NrIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKiBUaGUgYm94IHdoaWNoIGlzIHRvIHJlcHJlc2VudCBhIHNpbmdsZSBjb2xvciBvbiB0aGUgY29sb3IgcGFsZXR0ZS5cclxuICAgSXQgaXMgYSBzbWFsbCwgc3F1YXJlLXNoYXBlZCBlbGVtZW50IHdoaWNoIGNhbiBiZSBzZWxlY3RlZCBmcm9tIHRoZSBwYWxldHRlLiAqL1xuc3Bhbi5ja2VfY29sb3Jib3gge1xuICB3aWR0aDogMTBweDtcbiAgaGVpZ2h0OiAxMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBmbG9hdDogbGVmdDtcbn1cblxuLmNrZV9ydGwgc3Bhbi5ja2VfY29sb3Jib3gge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi8qIFRoZSB3cmFwcGVyIG9mIHRoZSBzcGFuLmNrZV9jb2xvcmJveC4gSXQgcHJvdmlkZXMgYW4gZXh0cmEgYm9yZGVyIGFuZCBwYWRkaW5nLiAqL1xuYS5ja2VfY29sb3Jib3gge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xuICBwYWRkaW5nOiAycHg7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogMTJweDtcbiAgaGVpZ2h0OiAxMnB4O1xuICBib3JkZXItcmFkaXVzOiAycHg7XG59XG5cbi5ja2VfcnRsIGEuY2tlX2NvbG9yYm94IHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4vKiBEaWZmZXJlbnQgc3RhdGVzIG9mIHRoZSBhLmNrZV9jb2xvcmJveCB3cmFwcGVyLiAqL1xuYTpob3Zlci5ja2VfY29sb3Jib3gsIGE6Zm9jdXMuY2tlX2NvbG9yYm94LCBhOmFjdGl2ZS5ja2VfY29sb3Jib3gge1xuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RkZDtcbn1cblxuLyogQnV0dG9ucyB3aGljaCBhcmUgdmlzaWJsZSBhdCB0aGUgdG9wL2JvdHRvbSBvZiB0aGUgY29sb3IgcGFsZXR0ZTpcclxuICAgLSBja2VfY29sb3JhdXRvIChUT1ApIGFwcGxpZXMgdGhlIGF1dG9tYXRpYyBjb2xvci5cclxuICAgLSBja2VfY29sb3Jtb3JlIChCT1RUT00pIGV4ZWN1dGVzIHRoZSBjb2xvciBkaWFsb2cuXHJcbiovXG5hLmNrZV9jb2xvcmF1dG8sIGEuY2tlX2NvbG9ybW9yZSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gIHBhZGRpbmc6IDJweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLyogRGlmZmVyZW50IHN0YXRlcyBvZiBja2VfY29sb3JhdXRvL2NrZV9jb2xvcm1vcmUgYnV0dG9ucy4gKi9cbmE6aG92ZXIuY2tlX2NvbG9yYXV0bywgYTpob3Zlci5ja2VfY29sb3Jtb3JlLCBhOmZvY3VzLmNrZV9jb2xvcmF1dG8sIGE6Zm9jdXMuY2tlX2NvbG9ybW9yZSwgYTphY3RpdmUuY2tlX2NvbG9yYXV0bywgYTphY3RpdmUuY2tlX2NvbG9ybW9yZSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkO1xufVxuXG4vKlxyXG5Db3B5cmlnaHQgKGMpIDIwMDMtMjAxNCwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cDovL2NrZWRpdG9yLmNvbS9saWNlbnNlXHJcbiovXG4vKlxyXG50b29sYmFyLmNzcyAocGFydCBvZiBlZGl0b3IuY3NzKVxyXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5UaGlzIGZpbGVzIHN0eWxlcyB0aGUgQ0tFZGl0b3IgdG9vbGJhciBhbmQgaXRzIGJ1dHRvbnMuIEZvciB0b29sYmFyIGNvbWJvXHJcbnN0eWxlcywgY2hlY2sgcmljaGNvbWJvLmNzcy5cclxuXHJcblRoZSB0b29sYmFyIGlzIHJlbmRlcmVkIGFzIGEgYmlnIGNvbnRhaW5lciAoY2FsbGVkIHRvb2xib3gpLCB3aGljaCBjb250YWluc1xyXG5zbWFsbGVyIFwidG9vbGJhcnNcIi4gRWFjaCB0b29sYmFyIHJlcHJlc2VudHMgYSBncm91cCBvZiBpdGVtcyB0aGF0IGNhbm5vdCBiZVxyXG5zZXBhcmF0ZWQuIFRoZSBmb2xsb3dpbmcgaXMgdGhlIHZpc3VhbCByZXByZXNlbnRhdGlvbiBvZiB0aGUgdG9vbGJveC5cclxuXHJcbistLSAuY2tlX3Rvb2xib3ggLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxufCArLS0gLmNrZV90b29sYmFyIC0tKyArLS0gLmNrZV90b29sYmFyIC0tKyAuLi4gKy0tIC5ja2VfdG9vbGJhcl9icmVhayAtLSsgfFxyXG58IHwgICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICB8ICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgfCB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLSsgICAgICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxufCArLS0gLmNrZV90b29sYmFyIC0tKyArLS0gLmNrZV90b29sYmFyIC0tKyAuLi4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxyXG58IHwgICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLSsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcclxuKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG5cclxuVGhlIGZvbGxvd2luZyBpbnN0ZWFkIGlzIHRoZSB2aXN1YWwgcmVwcmVzZW50YXRpb24gb2YgYSBzaW5nbGUgdG9vbGJhcjpcclxuXHJcbistLSAuY2tlX3Rvb2xiYXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxufCArLS0gLmNrZV90b29sYmFyX3N0YXJ0IC0tKyArLS0gLmNrZV90b29sZ3JvdXAgKCopIC0tKyArLS0gLmNrZV90b29sYmFyX2VuZCAtLSsgfFxyXG58IHwgICAgICAgICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgfCB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxuKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG4oKikgLmNrZV90b29sZ3JvdXAgaXMgYXZhaWxhYmxlIG9ubHkgd2hlbiB0aGUgdG9vbGJhciBpdGVtcyBjYW4gYmUgZ3JvdXBlZFxyXG4gICAgKGJ1dHRvbnMpLiBJZiB0aGUgaXRlbXMgY2FuJ3QgYmUgZ3JvdXAgKGNvbWJvcyksIHRoaXMgYm94IGlzIG5vdCBhdmFpbGFibGVcclxuICAgIGFuZCB0aGUgaXRlbXMgYXJlIHJlbmRlcmVkIHN0cmFpZ2h0IGluIHRoYXQgcGxhY2UuXHJcblxyXG5UaGlzIGZpbGUgYWxzbyBzdHlsZXMgdG9vbGJhciBidXR0b25zLCB3aGljaCBhcmUgcmVuZGVyZWQgaW5zaWRlIHRoZSBhYm92ZVxyXG4uY2tlX3Rvb2xncm91cCBjb250YWluZXJzLiBUaGlzIGlzIHRoZSB2aXN1YWwgcmVwcmVzZW50YXRpb24gb2YgYSBidXR0b246XHJcblxyXG4rLS0gLmNrZV9idXR0b24gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxufCArLS0gLmNrZV9idXR0b25faWNvbiAtLSsgKy0tIC5ja2VfYnV0dG9uX2xhYmVsIC0tKyB8XHJcbnwgfCAgICAgICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgIHwgfFxyXG58ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxuKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rXHJcblxyXG5TcGVjaWFsIG91dGVyIGxldmVsIGNsYXNzZXMgdXNlZCBpbiB0aGlzIGZpbGU6XHJcblxyXG4gICAgLmNrZV9oYzogQXZhaWxhYmxlIHdoZW4gdGhlIGVkaXRvciBpcyByZW5kZXJlZCBvbiBcIkhpZ2ggQ29udHJhc3RcIi5cclxuICAgIC5ja2VfcnRsOiBBdmFpbGFibGUgd2hlbiB0aGUgZWRpdG9yIFVJIGlzIG9uIFJUTC5cclxuKi9cbi8qIFRoZSBib3ggdGhhdCBob2xkcyBlYWNoIHRvb2xiYXIuICovXG4uY2tlX3Rvb2xiYXIge1xuICBmbG9hdDogbGVmdDtcbn1cblxuLmNrZV9ydGwgLmNrZV90b29sYmFyIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4vKiBUaGUgYm94IHRoYXQgaG9sZHMgYnV0dG9ucy4gKi9cbi5ja2VfdG9vbGdyb3VwIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuXG4uY2tlX2hjIC5ja2VfdG9vbGdyb3VwIHtcbiAgYm9yZGVyOiAwO1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5ja2VfcnRsIC5ja2VfdG9vbGdyb3VwICo6Zmlyc3QtY2hpbGQge1xuICBib3JkZXItcmFkaXVzOiAwIDAgMCAwO1xufVxuXG4uY2tlX3J0bCAuY2tlX3Rvb2xncm91cCAqOmxhc3QtY2hpbGQge1xuICBib3JkZXItcmFkaXVzOiAwIDAgMCAwO1xufVxuXG4uY2tlX3J0bCAuY2tlX3Rvb2xncm91cCB7XG4gIGZsb2F0OiByaWdodDtcbiAgbWFyZ2luLWxlZnQ6IDZweDtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuXG4vKiBBIHRvb2xiYXIgYnV0dG9uIC4gKi9cbmEuY2tlX2J1dHRvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiAxcHg7XG4gIHBhZGRpbmc6IDEycHggMTJweDtcbiAgb3V0bGluZTogbm9uZTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICBmbG9hdDogbGVmdDtcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG5cbi5ja2VfcnRsIC5ja2VfYnV0dG9uIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uY2tlX2hjIC5ja2VfYnV0dG9uIHtcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gIC8qIENvbXBlbnNhdGUgdGhlIGFkZGVkIGJvcmRlciAqL1xuICBwYWRkaW5nOiAzcHggNXB4O1xuICBtYXJnaW46IC0ycHggNHB4IDAgLTJweDtcbn1cblxuLyogVGhpcyBjbGFzcyBpcyBhcHBsaWVkIHRvIHRoZSBidXR0b24gd2hlbiBpdCBpcyBcImFjdGl2ZVwiIChwdXNoZWQpLlxyXG4gICBUaGlzIHN0eWxlIGluZGljYXRlcyB0aGF0IHRoZSBmZWF0dXJlIGFzc29jaWF0ZWQgd2l0aCB0aGUgYnV0dG9uIGlzIGFjdGl2ZVxyXG4gICBpLmUuIGN1cnJlbnRseSB3cml0aW5nIGluIGJvbGQgb3Igd2hlbiBzcGVsbCBjaGVja2luZyBpcyBlbmFibGVkLiAqL1xuYS5ja2VfYnV0dG9uX29uIHtcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLmNrZV9oYyAuY2tlX2J1dHRvbl9vbiB7XG4gIC8qIENvbXBlbnNhdGUgdGhlIGJvcmRlciBjaGFuZ2UgKi9cbn1cblxuLmNrZV9oYyBhLmNrZV9idXR0b25fb2ZmOmhvdmVyLCAuY2tlX2hjIGEuY2tlX2J1dHRvbl9vZmY6Zm9jdXMsIC5ja2VfaGMgYS5ja2VfYnV0dG9uX29mZjphY3RpdmUsIC5ja2VfaGMgYS5ja2VfYnV0dG9uX2Rpc2FibGVkOmhvdmVyLCAuY2tlX2hjIGEuY2tlX2J1dHRvbl9kaXNhYmxlZDpmb2N1cywgLmNrZV9oYyBhLmNrZV9idXR0b25fZGlzYWJsZWQ6YWN0aXZlIHtcbiAgLyogQ29tcGVuc2F0ZSB0aGUgYm9yZGVyIGNoYW5nZSAqL1xufVxuXG4vKiBUaGlzIGNsYXNzIGlzIGFwcGxpZWQgdG8gdGhlIGJ1dHRvbiB3aGVuIHRoZSBmZWF0dXJlIGFzc29jaWF0ZWQgd2l0aCB0aGVcclxuICAgYnV0dG9uIGNhbm5vdCBiZSB1c2VkIChncmF5ZWQtb3V0KS5cclxuICAgaS5lLiBwYXN0ZSBidXR0b24gcmVtYWlucyBkaXNhYmxlZCB3aGVuIHRoZXJlIGlzIG5vdGhpbmcgaW4gdGhlIGNsaXBib2FyZCB0b1xyXG4gICBiZSBwYXN0ZWQuICovXG4uY2tlX2J1dHRvbl9kaXNhYmxlZCAuY2tlX2J1dHRvbl9pY29uIHtcbiAgb3BhY2l0eTogMC4zO1xufVxuXG4uY2tlX2hjIC5ja2VfYnV0dG9uX2Rpc2FibGVkIHtcbiAgb3BhY2l0eTogMC41O1xufVxuXG5hLmNrZV9idXR0b25fb2ZmOmhvdmVyLCBhLmNrZV9idXR0b25fb2ZmOmZvY3VzLCBhLmNrZV9idXR0b25fb2ZmOmFjdGl2ZSwgYS5ja2VfYnV0dG9uX2Rpc2FibGVkOmhvdmVyLCBhLmNrZV9idXR0b25fZGlzYWJsZWQ6Zm9jdXMsIGEuY2tlX2J1dHRvbl9kaXNhYmxlZDphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjZWVlO1xuICBib3JkZXItY29sb3I6ICNlZWU7XG59XG5cbi8qIFRoZSBpY29uIHdoaWNoIGlzIGEgdmlzdWFsIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBidXR0b24uICovXG4uY2tlX2J1dHRvbl9pY29uIHtcbiAgY3Vyc29yOiBpbmhlcml0O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBtYXJnaW4tdG9wOiAxcHg7XG4gIHdpZHRoOiAxNnB4O1xuICBoZWlnaHQ6IDE2cHg7XG4gIGZsb2F0OiBsZWZ0O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5ja2VfcnRsIC5ja2VfYnV0dG9uX2ljb24ge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi5ja2VfaGMgLmNrZV9idXR0b25faWNvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIFRoZSBsYWJlbCBvZiB0aGUgYnV0dG9uIHRoYXQgc3RvcmVzIHRoZSBuYW1lIG9mIHRoZSBmZWF0dXJlLiBCeSBkZWZhdWx0LFxyXG4gICBsYWJlbHMgYXJlIGludmlzaWJsZS4gVGhleSBjYW4gYmUgcmV2ZWFsZWQgb24gZGVtYW5kIHRob3VnaC4gKi9cbi5ja2VfYnV0dG9uX2xhYmVsIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcGFkZGluZy1sZWZ0OiAzcHg7XG4gIG1hcmdpbi10b3A6IDFweDtcbiAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGZsb2F0OiBsZWZ0O1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIGNvbG9yOiAjMjIyO1xufVxuXG4uY2tlX3J0bCAuY2tlX2J1dHRvbl9sYWJlbCB7XG4gIHBhZGRpbmctcmlnaHQ6IDNweDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi5ja2VfaGMgLmNrZV9idXR0b25fbGFiZWwge1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLyogVGhlIHNtYWxsIGFycm93IGF2YWlsYWJsZSBvbiBidXR0b25zIHRoYXQgY2FuIGJlIGV4cGFuZGVkXHJcbiAgIChlLmcuIHRoZSBjb2xvciBidXR0b25zKS4gKi9cbi5ja2VfYnV0dG9uX2Fycm93IHtcbiAgLyogQXJyb3cgaW4gQ1NTICovXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiA4cHggMCAwIDFweDtcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBib3JkZXItbGVmdDogM3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXRvcDogM3B4IHNvbGlkICM0NzQ3NDc7XG59XG5cbi5ja2VfcnRsIC5ja2VfYnV0dG9uX2Fycm93IHtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG4uY2tlX2hjIC5ja2VfYnV0dG9uX2Fycm93IHtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBtYXJnaW46IDNweCAtMnB4IDAgM3B4O1xuICB3aWR0aDogYXV0bztcbiAgYm9yZGVyOiAwO1xufVxuXG4vKiBUaGUgdmVydGljYWwgc2VwYXJhdG9yIHdoaWNoIGlzIHVzZWQgd2l0aGluIGEgc2luZ2xlIHRvb2xiYXIgdG8gc3BsaXRcclxuICAgYnV0dG9ucyBpbnRvIHN1Yi1ncm91cHMuICovXG4uY2tlX3Rvb2xiYXJfc2VwYXJhdG9yIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBtYXJnaW46IDRweCAycHggMDtcbiAgaGVpZ2h0OiAxNnB4O1xuICB3aWR0aDogMXB4O1xufVxuXG4uY2tlX3J0bCAuY2tlX3Rvb2xiYXJfc2VwYXJhdG9yIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uY2tlX2hjIC5ja2VfdG9vbGJhcl9zZXBhcmF0b3Ige1xuICB3aWR0aDogMDtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZDtcbiAgbWFyZ2luOiAxcHggNXB4IDAgMDtcbn1cblxuLyogVGhlIGR1bW15IGVsZW1lbnQgdGhhdCBicmVha3MgdG9vbGJhcnMuXHJcbiAgIE9uY2UgaXQgaXMgcGxhY2VkLCB0aGUgdmVyeSBuZXh0IHRvb2xiYXIgaXMgbW92ZWQgdG8gdGhlIG5ldyByb3cuICovXG4uY2tlX3Rvb2xiYXJfYnJlYWsge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY2xlYXI6IGxlZnQ7XG59XG5cbi5ja2VfcnRsIC5ja2VfdG9vbGJhcl9icmVhayB7XG4gIGNsZWFyOiByaWdodDtcbn1cblxuLyogVGhlIGJ1dHRvbiwgd2hpY2ggd2hlbiBjbGlja2VkIGhpZGVzIChjb2xsYXBzZXMpIGFsbCB0aGUgdG9vbGJhcnMuICovXG4uY2tlX3Rvb2xib3hfY29sbGFwc2VyIHtcbiAgd2lkdGg6IDEycHg7XG4gIGhlaWdodDogMTFweDtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBtYXJnaW46IDExcHggMCAwO1xuICBmb250LXNpemU6IDA7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXI6IDFweCBzb2xpZCAjYTZhNmE2O1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjOTc5Nzk3O1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBiYWNrZ3JvdW5kOiAjZTRlNGU0O1xuICAvKiBUaGUgQ1NTIGFycm93LCB3aGljaCBiZWxvbmdzIHRvIHRoZSB0b29sYmFyIGNvbGxhcHNlci4gKi9cbn1cblxuLmNrZV90b29sYm94X2NvbGxhcHNlcjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNjY2M7XG59XG5cbi5ja2VfdG9vbGJveF9jb2xsYXBzZXIuY2tlX3Rvb2xib3hfY29sbGFwc2VyX21pbiB7XG4gIG1hcmdpbjogMCAycHggNHB4O1xufVxuXG4uY2tlX3Rvb2xib3hfY29sbGFwc2VyLmNrZV90b29sYm94X2NvbGxhcHNlcl9taW4gLmNrZV9hcnJvdyB7XG4gIG1hcmdpbi10b3A6IDRweDtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci10b3AtY29sb3I6ICM0NzQ3NDc7XG59XG5cbi5ja2VfdG9vbGJveF9jb2xsYXBzZXIgLmNrZV9hcnJvdyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogUHVyZSBDU1MgQXJyb3cgKi9cbiAgaGVpZ2h0OiAwO1xuICB3aWR0aDogMDtcbiAgZm9udC1zaXplOiAwO1xuICBtYXJnaW4tdG9wOiAxcHg7XG4gIGJvcmRlci1sZWZ0OiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yaWdodDogM3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItYm90dG9tOiAzcHggc29saWQgIzQ3NDc0NztcbiAgYm9yZGVyLXRvcDogM3B4IHNvbGlkIHRyYW5zcGFyZW50O1xufVxuXG4uY2tlX3J0bCAuY2tlX3Rvb2xib3hfY29sbGFwc2VyIHtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5ja2VfaGMgLmNrZV90b29sYm94X2NvbGxhcHNlciAuY2tlX2Fycm93IHtcbiAgZm9udC1zaXplOiA4cHg7XG4gIHdpZHRoOiBhdXRvO1xuICBib3JkZXI6IDA7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1yaWdodDogMnB4O1xufVxuXG4vKlxyXG5Db3B5cmlnaHQgKGMpIDIwMDMtMjAxNCwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cDovL2NrZWRpdG9yLmNvbS9saWNlbnNlXHJcbiovXG4vKlxyXG5tZW51LmNzcyAocGFydCBvZiBlZGl0b3IuY3NzKVxyXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5UaGlzIGZpbGUgc3R5bGVzIG1lbnVzIHVzZWQgaW4gdGhlIGVkaXRvciBVSS4gVGhlc2UgbWVudXMgYXJlIHRoZSBsaXN0IG9mXHJcbm9wdGlvbnMgYXZhaWxhYmxlIGluc2lkZSBzb21lIFwiZmxvYXRpbmcgcGFuZWxzXCIsIGxpa2UgbWVudSBidXR0b25zIG9mIHRoZVxyXG50b29sYmFyIG9yIHRoZSBjb250ZXh0IG1lbnUuXHJcblxyXG5Ob3RlIHRoYXQgdGhlIG1lbnUgaXRzZWxmIGRvZXNuJ3QgaW5jbHVkZSB0aGUgZmxvYXRpbmcgZWxlbWVudCB0aGF0IGhvbGRzIGl0LlxyXG5UaGF0IGVsZW1lbnQgaXMgc3R5bGVzIGluIHRoZSBwYW5lbC5jc3MgZmlsZS5cclxuXHJcblRoZSBmb2xsb3dpbmcgaXMgYSB2aXN1YWwgcmVwcmVzZW50YXRpb24gb2YgdGhlIG1haW4gZWxlbWVudHMgb2YgYSBtZW51OlxyXG5cclxuKy0tIC5ja2VfbWVudSAtLS0tLS0tLS0tLS0tLS0tLStcclxufCArLS0gLmNrZV9tZW51aXRlbSAgLS0tLS0tLS0rIHxcclxufCB8ICstLSAuY2tlX21lbnVidXR0b24gLS0tKyB8IHxcclxufCB8IHwgICAgICAgICAgICAgICAgICAgICAgfCB8IHxcclxufCB8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8IHxcclxufCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxufCArLS0gLmNrZV9tZW51c2VwYXJhdG9yIC0tLS0rIHxcclxufCAuLi4gICAgICAgICAgICAgICAgICAgICAgICAgIHxcclxuKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxuXHJcblRoaXMgaXMgdGhlIC5ja2VfbWVudWJ1dHRvbiBzdHJ1Y3R1cmU6XHJcbihOb3RlIHRoYXQgdGhlIG1lbnUgYnV0dG9uIGljb24gc2hhcmVzIHdpdGggdG9vbGJhciBidXR0b24gdGhlIGNvbW1vbiBjbGFzcyAuY2tlX2J1dHRvbl9pY29uIHRvIGFjaGlldmUgdGhlIHNhbWUgb3V0bG9vay4pXHJcblxyXG4rLS0gLmNrZV9tZW51YnV0dG9uIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rXHJcbnwgKy0tIC5ja2VfbWVudWJ1dHRvbl9pbm5lciAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxufCB8ICstLSAuY2tlX21lbnVidXR0b25faWNvbiAtLS0rICstLSAuY2tlX21lbnVidXR0b25fbGFiZWwgLS0rICstLSAuY2tlX2NrZV9tZW51YXJyb3cgLS0rIHwgfFxyXG58IHwgfCArLS0gLmNrZV9idXR0b25faWNvbiAtLS0rIHwgfCAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgfCAgICAgICAgICAgICAgICAgICAgICAgIHwgfCB8XHJcbnwgfCB8IHwgICAgICAgICAgICAgICAgICAgICAgIHwgfCB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB8ICAgICAgICAgICAgICAgICAgICAgICAgfCB8IHxcclxufCB8IHwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8IHwgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgICB8IHwgfFxyXG58IHwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfCB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxuKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG5cclxuU3BlY2lhbCBvdXRlciBsZXZlbCBjbGFzc2VzIHVzZWQgaW4gdGhpcyBmaWxlOlxyXG5cclxuICAgIC5ja2VfaGM6IEF2YWlsYWJsZSB3aGVuIHRoZSBlZGl0b3IgaXMgcmVuZGVyZWQgb24gXCJIaWdoIENvbnRyYXN0XCIuXHJcbiAgICAuY2tlX3J0bDogQXZhaWxhYmxlIHdoZW4gdGhlIGVkaXRvciBVSSBpcyBvbiBSVEwuXHJcbiovXG4vKiAuY2tlX21lbnVpdGVtIGlzIHRoZSBlbGVtZW50IHRoYXQgaG9sZHMgdGhlIGVudGlyZSBzdHJ1Y3R1cmUgb2YgZWFjaCBvZiB0aGVcclxuICAgbWVudSBpdGVtcy4gKi9cbi5ja2VfbWVudWJ1dHRvbiB7XG4gIC8qIFRoZSBcImJ1dHRvblwiIGluc2lkZSBhIG1lbnUgaXRlbSBpcyBhIDxhPiBlbGVtZW50LlxyXG4gICAgIFRyYW5zZm9ybXMgaXQgaW50byBhIGJsb2NrLiAqL1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmNrZV9idXR0b25faWNvbiB7XG4gIG9wYWNpdHk6IC44O1xufVxuXG4uY2tlX21lbnVpdGVtIHNwYW4ge1xuICAvKiBBdm9pZCB0aGUgdGV4dCBzZWxlY3Rpb24gY3Vyc29yIGluc2lkZSBtZW51IGl0ZW1zLiAqL1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi5ja2VfbWVudWJ1dHRvbjpob3ZlciwgLmNrZV9tZW51YnV0dG9uOmZvY3VzLCAuY2tlX21lbnVidXR0b246YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0QzRDNEMztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5ja2VfaGMgLmNrZV9tZW51YnV0dG9uIHtcbiAgcGFkZGluZzogMnB4O1xufVxuXG4uY2tlX2hjIC5ja2VfbWVudWJ1dHRvbjpob3ZlciwgLmNrZV9oYyAuY2tlX21lbnVidXR0b246Zm9jdXMsIC5ja2VfaGMgLmNrZV9tZW51YnV0dG9uOmFjdGl2ZSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uY2tlX21lbnVidXR0b25faW5uZXIge1xuICBkaXNwbGF5OiB0YWJsZS1yb3c7XG59XG5cbi5ja2VfbWVudWJ1dHRvbl9pY29uLFxuLmNrZV9tZW51YnV0dG9uX2xhYmVsLFxuLmNrZV9tZW51YXJyb3cge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xufVxuXG4vKiBUaGUgbWVudSBpdGVtIGljb24uICovXG4uY2tlX21lbnVidXR0b25faWNvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNEN0Q4RDc7XG4gIG9wYWNpdHk6IDAuNzA7XG4gIC8qIFNhZmFyaSwgT3BlcmEgYW5kIE1vemlsbGEgKi9cbiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTcwKTtcbiAgLyogSUUgKi9cbiAgcGFkZGluZzogNHB4O1xufVxuXG4uY2tlX2hjIC5ja2VfbWVudWJ1dHRvbl9pY29uIHtcbiAgaGVpZ2h0OiAxNnB4O1xuICB3aWR0aDogMDtcbiAgcGFkZGluZzogNHB4IDA7XG59XG5cbi5ja2VfbWVudWJ1dHRvbjpob3ZlciAuY2tlX21lbnVidXR0b25faWNvbiwgLmNrZV9tZW51YnV0dG9uOmZvY3VzIC5ja2VfbWVudWJ1dHRvbl9pY29uLCAuY2tlX21lbnVidXR0b246YWN0aXZlIC5ja2VfbWVudWJ1dHRvbl9pY29uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0QwRDJEMDtcbn1cblxuLmNrZV9tZW51YnV0dG9uX2Rpc2FibGVkOmhvdmVyIC5ja2VfbWVudWJ1dHRvbl9pY29uLCAuY2tlX21lbnVidXR0b25fZGlzYWJsZWQ6Zm9jdXMgLmNrZV9tZW51YnV0dG9uX2ljb24sIC5ja2VfbWVudWJ1dHRvbl9kaXNhYmxlZDphY3RpdmUgLmNrZV9tZW51YnV0dG9uX2ljb24ge1xuICAvKiBUaGUgaWNvbiB3aWxsIGdldCBvcGFjaXR5IGFzIHdlbGwgd2hlbiBob3ZlcmVkLiAqL1xuICBvcGFjaXR5OiAwLjM7XG4gIGZpbHRlcjogYWxwaGEob3BhY2l0eT0zMCk7XG59XG5cbi8qIFRoZSB0ZXh0dWFsIHBhcnQgb2YgZWFjaCBtZW51IGl0ZW0uICovXG4uY2tlX21lbnVidXR0b25fbGFiZWwge1xuICBwYWRkaW5nOiAwIDVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHdpZHRoOiAxMDAlO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uY2tlX21lbnVidXR0b25fZGlzYWJsZWQgLmNrZV9tZW51YnV0dG9uX2xhYmVsIHtcbiAgLyogR3JleWVkIGxhYmVsIHRleHQgaW5kaWNhdGVzIGEgZGlzYWJsZWQgbWVudSBpdGVtLiAqL1xuICBvcGFjaXR5OiAwLjM7XG4gIGZpbHRlcjogYWxwaGEob3BhY2l0eT0zMCk7XG59XG5cbi5ja2VfbWVudWJ1dHRvbl9vbiB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZWRlZGU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XG59XG5cbi5ja2VfbWVudWJ1dHRvbl9vbiAuY2tlX21lbnVidXR0b25faWNvbiB7XG4gIHBhZGRpbmctcmlnaHQ6IDNweDtcbn1cblxuLmNrZV9tZW51YnV0dG9uOmhvdmVyLCAuY2tlX21lbnVidXR0b246Zm9jdXMsIC5ja2VfbWVudWJ1dHRvbjphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUZGMEVGO1xufVxuXG4uY2tlX3BhbmVsX2ZyYW1lIC5ja2VfbWVudWJ1dHRvbl9sYWJlbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIFRoZSBzZXBhcmF0b3IgdXNlZCB0byBzZXBhcmF0ZSBtZW51IGl0ZW0gZ3JvdXBzLiAqL1xuLmNrZV9tZW51c2VwYXJhdG9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0QzRDNEMztcbiAgaGVpZ2h0OiAxcHg7XG4gIGZpbHRlcjogYWxwaGEob3BhY2l0eT03MCk7XG4gIC8qIElFICovXG4gIG9wYWNpdHk6IDAuNzA7XG4gIC8qIFNhZmFyaSwgT3BlcmEgYW5kIE1vemlsbGEgKi9cbn1cblxuLyogVGhlIHNtYWxsIGFycm93IHNob3duIGZvciBpdGVtIHdpdGggc3ViLW1lbnVzLiAqL1xuLmNrZV9tZW51YXJyb3cge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaW1hZ2VzL2Fycm93LnBuZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgcGFkZGluZzogMCA1cHg7XG59XG5cbi5ja2VfbWVudWFycm93IHNwYW4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uY2tlX3J0bCAuY2tlX21lbnVhcnJvdyB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDVweCAtMTNweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cblxuLmNrZV9oYyAuY2tlX21lbnVhcnJvdyBzcGFuIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgZGlzcGxheTogaW5saW5lO1xufVxuXG4vKlxyXG5Db3B5cmlnaHQgKGMpIDIwMDMtMjAxNCwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cDovL2NrZWRpdG9yLmNvbS9saWNlbnNlXHJcbiovXG4vKlxyXG5yaWNoY29tYm8uY3NzIChwYXJ0IG9mIGVkaXRvci5jc3MpXHJcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuVGhpcyBmaWxlIGhvbGRzIHRoZSBzdHlsZSBzZXQgb2YgdGhlIFwiUmljaCBDb21ib1wiIHdpZGdldCB3aGljaCBpcyBjb21tb25seSB1c2VkXHJcbmluIHRoZSB0b29sYmFyLiBJdCBkb2Vzbid0LCBob3dldmVyLCBzdHlsZXMgdGhlIHBhbmVsIHRoYXQgaXMgZGlzcGxheWVkIHdoZW5cclxuY2xpY2tpbmcgb24gdGhlIGNvbWJvLCB3aGljaCBpcyBpbnN0ZWFkIHN0eWxlZCBieSBwYW5lbC5jc3MuXHJcblxyXG5UaGUgdmlzdWFsIHJlcHJlc2VudGF0aW9uIG9mIGEgcmljaCBjb21ibyB3aWRnZXQgbG9va3MgYXMgZm9sbG93czpcclxuXHJcbistLSAuY2tlX2NvbWJvLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxufCArLS0gLmNrZV9jb21ib19sYWJlbCAtLSsgKy0tIC5ja2VfY29tYm9fYnV0dG9uIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfFxyXG58IHwgICAgICAgICAgICAgICAgICAgICAgfCB8ICstLSAuY2tlX2NvbWJvX3RleHQgLS0rICstLSAuY2tlX2NvbWJvX29wZW4gLS0tLS0tLSsgfCB8XHJcbnwgfCAgICAgICAgICAgICAgICAgICAgICB8IHwgfCAgICAgICAgICAgICAgICAgICAgIHwgfCArLS0gLmNrZV9jb21ib19hcnJvdyAtLSsgfCB8IHxcclxufCB8ICAgICAgICAgICAgICAgICAgICAgIHwgfCB8ICAgICAgICAgICAgICAgICAgICAgfCB8IHwgICAgICAgICAgICAgICAgICAgICAgfCB8IHwgfFxyXG58IHwgICAgICAgICAgICAgICAgICAgICAgfCB8IHwgICAgICAgICAgICAgICAgICAgICB8IHwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfCB8XHJcbnwgfCAgICAgICAgICAgICAgICAgICAgICB8IHwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8IHxcclxufCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfFxyXG4rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rXHJcbiovXG4vKiBUaGUgYm94IHRoYXQgaG9sZCB0aGUgZW50aXJlIGNvbWJvIHdpZGdldCAqL1xuLmNrZV9jb21ibyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5ja2VfcnRsIC5ja2VfY29tYm8ge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi5ja2VfaGMgLmNrZV9jb21ibyB7XG4gIG1hcmdpbi10b3A6IC0ycHg7XG59XG5cbi8qIFRoZSBsYWJlbCBvZiB0aGUgY29tYm8gd2lkZ2V0LiBJdCBpcyBpbnZpc2libGUgYnkgZGVmYXVsdCwgeWV0XHJcbiAgIGl0J3MgaW1wb3J0YW50IGZvciBzZW1hbnRpY3MgYW5kIGFjY2Vzc2liaWxpdHkuICovXG4uY2tlX2NvbWJvX2xhYmVsIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn1cblxuLmNrZV9ydGwgLmNrZV9jb21ib19sYWJlbCB7XG4gIGZsb2F0OiByaWdodDtcbiAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuXG4vKiBUaGUgY29udGFpbmVyIGZvciBjb21ibyB0ZXh0IGFuZCBhcnJvdy4gKi9cbi5ja2VfY29tYm9fYnV0dG9uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuXG4vKiBEaWZmZXJlbnQgc3RhdGVzIG9mIHRoZSBjb250YWluZXIuICovXG4uY2tlX2NvbWJvX29uIGEuY2tlX2NvbWJvX2J1dHRvbiB7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5ja2VfcnRsIC5ja2VfY29tYm9fYnV0dG9uIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBtYXJnaW4tbGVmdDogNXB4O1xuICBtYXJnaW4tcmlnaHQ6IDA7XG59XG5cbi5ja2VfaGMgYS5ja2VfY29tYm9fYnV0dG9uIHtcbiAgcGFkZGluZzogM3B4O1xufVxuXG4uY2tlX2hjIC5ja2VfY29tYm9fb24gYS5ja2VfY29tYm9fYnV0dG9uIHtcbiAgYm9yZGVyLXdpZHRoOiAzcHg7XG4gIHBhZGRpbmc6IDFweDtcbn1cblxuLmNrZV9oYyAuY2tlX2NvbWJvX29mZiBhLmNrZV9jb21ib19idXR0b246aG92ZXIsIC5ja2VfaGMgLmNrZV9jb21ib19vZmYgYS5ja2VfY29tYm9fYnV0dG9uOmZvY3VzLCAuY2tlX2hjIC5ja2VfY29tYm9fb2ZmIGEuY2tlX2NvbWJvX2J1dHRvbjphY3RpdmUge1xuICBib3JkZXItd2lkdGg6IDNweDtcbiAgcGFkZGluZzogMXB4O1xufVxuXG4vKiBUaGUgbGFiZWwgdGhhdCBzaG93cyB0aGUgY3VycmVudCB2YWx1ZSBvZiB0aGUgcmljaCBjb21iby5cclxuICAgQnkgZGVmYXVsdCwgaXQgaG9sZHMgdGhlIG5hbWUgb2YgdGhlIHByb3BlcnR5LlxyXG4gICBTZWU6IC5ja2VfY29tYm9faW5saW5lbGFiZWwgKi9cbi5ja2VfY29tYm9fdGV4dCB7XG4gIGxpbmUtaGVpZ2h0OiAyOXB4O1xuICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBmbG9hdDogbGVmdDtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICBjb2xvcjogIzQ3NDc0NztcbiAgd2lkdGg6IDEwMHB4O1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi5ja2VfcnRsIC5ja2VfY29tYm9fdGV4dCB7XG4gIGZsb2F0OiByaWdodDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbn1cblxuLmNrZV9oYyAuY2tlX2NvbWJvX3RleHQge1xuICBsaW5lLWhlaWdodDogMThweDtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4vKiBUaGUgaGFuZGxlciB3aGljaCBvcGVucyB0aGUgcGFuZWwgb2YgcmljaCBjb21ibyBwcm9wZXJ0aWVzLlxyXG4gICBJdCBob2xkcyBhbiBhcnJvdyBhcyBhIHZpc3VhbCBpbmRpY2F0b3IuICovXG4uY2tlX2NvbWJvX29wZW4ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1zaXplOiAwO1xuICBoZWlnaHQ6IDE5cHg7XG4gIGxpbmUtaGVpZ2h0OiAxN3B4O1xuICBtYXJnaW46IDJweCAxMHB4IDA7XG4gIHdpZHRoOiA1cHg7XG59XG5cbi5ja2VfaGMgLmNrZV9jb21ib19vcGVuIHtcbiAgaGVpZ2h0OiAxMnB4O1xufVxuXG4vKiBUaGUgYXJyb3cgd2hpY2ggaXMgZGlzcGxheWVkIGluc2lkZSBvZiB0aGUgLmNrZV9jb21ib19vcGVuIGhhbmRsZXIuICovXG4uY2tlX2NvbWJvX2Fycm93IHtcbiAgbWFyZ2luOiAxMXB4IDAgMDtcbiAgZmxvYXQ6IGxlZnQ7XG4gIC8qIFB1cmUgQ1NTIEFycm93ICovXG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDA7XG4gIGZvbnQtc2l6ZTogMDtcbiAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJpZ2h0OiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci10b3A6IDNweCBzb2xpZCAjMjIyO1xufVxuXG4uY2tlX2hjIC5ja2VfY29tYm9fYXJyb3cge1xuICBmb250LXNpemU6IDEwcHg7XG4gIHdpZHRoOiBhdXRvO1xuICBib3JkZXI6IDA7XG4gIG1hcmdpbi10b3A6IDNweDtcbn1cblxuLyogRGlzYWJsZWQgY29tYm8gYnV0dG9uIHN0eWxlcy4gKi9cbi5ja2VfY29tYm9fZGlzYWJsZWQgLmNrZV9jb21ib19pbmxpbmVsYWJlbCwgLmNrZV9jb21ib19kaXNhYmxlZCAuY2tlX2NvbWJvX29wZW4ge1xuICBvcGFjaXR5OiAwLjM7XG59XG5cbi8qXHJcbkNvcHlyaWdodCAoYykgMjAwMy0yMDE0LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG5Gb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwOi8vY2tlZGl0b3IuY29tL2xpY2Vuc2VcclxuKi9cbi8qIFwiU291cmNlXCIgYnV0dG9uIGxhYmVsICovXG4vKiBcIkZvbnQgU2l6ZVwiIGNvbWJvIHdpZHRoICovXG4uY2tlX2NvbWJvX19mb250c2l6ZSAuY2tlX2NvbWJvX3RleHQge1xuICB3aWR0aDogMzBweDtcbn1cblxuLyogXCJGb250IFNpemVcIiBwYW5lbCBzaXplICovXG4uY2tlX2NvbWJvcGFuZWxfX2ZvbnRzaXplIHtcbiAgd2lkdGg6IDEyMHB4O1xufVxuXG4vKiBFZGl0YWJsZSByZWdpb25zICovXG4uY2tlX3NvdXJjZSB7XG4gIGZvbnQtZmFtaWx5OiAnQ291cmllciBOZXcnLCBNb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogc21hbGw7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHdoaXRlLXNwYWNlOiBwcmU7XG59XG5cbi8qIEltcG9ydGFudCFcclxuICAgVG8gYXZvaWQgc2hvd2luZyB0aGUgZWRpdG9yIFVJIHdoaWxlIGl0cyBzdHlsZXMgYXJlIHN0aWxsIG5vdCBhdmFpbGFibGUsIHRoZVxyXG4gICBlZGl0b3IgY3JlYXRlcyBpdCB3aXRoIHZpc2liaWxpdHk6aGlkZGVuLiBIZXJlLCB3ZSByZXN0b3JlIHRoZSBVSSB2aXNpYmlsaXR5LiAqL1xuLmNrZV9jaHJvbWUge1xuICB2aXNpYmlsaXR5OiBpbmhlcml0O1xufVxuXG4uY2tlX2x0ciB7XG4gIG92ZXJmbG93LXk6IGhpZGRlbjtcbn1cblxuLyogRm9yIGFjY2Vzc2liaWxpdHkgcHVycG9zZXMsIHNldmVyYWwgXCJ2b2ljZSBsYWJlbHNcIiBhcmUgcHJlc2VudCBpbiB0aGUgVUkuXHJcbiAgIFRoZXNlIGFyZSB1c3VhbGx5IDxzcGFuPiBlbGVtZW50cyB0aGF0IHNob3cgbm90IGJlIHZpc2libGUsIGJ1dCB0aGF0IGFyZVxyXG4gICB1c2VkIGJ5IHNjcmVlbi1yZWFkZXJzIHRvIGFubm91bmNlIG90aGVyIGVsZW1lbnRzLiBIZXJlLCB3ZSBoaWRlIHRoZXNlXHJcbiAgIDxzcGFucz4sIGluIGZhY3QuICovXG4uY2tlX3ZvaWNlX2xhYmVsIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxubGVnZW5kLmNrZV92b2ljZV9sYWJlbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5ja2VfaW5uZXIge1xuICBib3gtc2hhZG93OiBpbnNldCAycHggMnB4IDZweCAwIHJnYmEoMCwgMCwgMCwgMC4xMykgIWltcG9ydGFudDtcbn1cbiIsIi8qXG5Db25maWcuXG4gKi9cbiRlbmFibGUtc2hhZG93czogdHJ1ZTtcblxuLypcbkNvbG9ycy5cbiAqL1xuJHByaW1hcnk6ICMwMDA7XG4kc3VjY2VzczogIzc0YmNkMTtcbiRkYW5nZXI6ICNmZmI3YmI7XG4kaW5mbzogI2VkZTI2YjtcblxuJGJvZHktdGV4dDogIzAwMDtcbiRib2R5LWJnOiAjZmZmO1xuXG4kbGluay1ob3Zlci1jb2xvcjogIzc0YmNkMTtcbiRhbmFraW4tc3VjY2Vzcy1iZzogI2QxZThlZjtcbiRhcHAtaW5mby10ZXh0OiAkYm9keS10ZXh0O1xuXG4kYnRuLXByaW1hcnktYmc6ICMwMDA7XG5cbi8qXG5HcmlkLlxuICovXG4kY29udGFpbmVyLW1heC13aWR0aHM6IChcbiAgICAgICAgeGw6IDE0MDBweFxuKTtcblxuLypcblNwYWNlcnMuXG4gKi9cbiRhcHAtbWFyZ2luLWJvdHRvbTogNDBweDtcbiRhcHAtcGFkZGluZy15OiAxNXB4O1xuJGFwcC1wYWRkaW5nLXg6IDA7XG4kYXBwLWJvZHktcGFkZGluZzogMTEwcHggMCA1MHB4O1xuJGFwcC1oZWFkZXItbWFyZ2luOiA0MHB4IDAgMjBweDtcblxuLypcbkJvcmRlci5cbiAqL1xuJGJvcmRlci1yYWRpdXM6IDA7XG4kYm9yZGVyLXNpemU6IDA7XG4kYm9yZGVyLWNvbG9yOiAjZWJlYmViO1xuXG4vKlxuVGV4dC5cbiAqL1xuJGZvbnQtZmFtaWx5LWJhc2U6ICdBVEMgT3Zlcmxvb2snLCBzYW5zLXNlcmlmO1xuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiA3MDA7XG4kbGluay1ob3Zlci1kZWNvcmF0aW9uOiBub25lO1xuXG4vKlxuTmF2cy5cbiAqL1xuJG5hdi1saW5rLXBhZGRpbmcteTogMTBweDtcbiRuYXYtbGluay1wYWRkaW5nLXg6IDE1cHg7XG4kYXBwLXN1Ym1lbnUtbGluay1tYXJnaW46IDAgNXB4IDEwcHg7XG5cbi8qXG5OYXZiYXIuXG4gKi9cbiRhcHAtbmF2YmFyLW5hdi1saW5rLXBhZGRpbmcteTogMjBweDtcbiRuYXZiYXItbmF2LWxpbmstcGFkZGluZy14OiAyMHB4O1xuJGFwcC1uYXZiYXItYmFja2dyb3VuZDogJGJvZHktYmc7XG4kYXBwLW5hdmJhci1kYXJrLWhvdmVyLWJnOiAkYm9yZGVyLWNvbG9yO1xuJG5hdmJhci1kYXJrLWFjdGl2ZS1iZzogJGJvZHktdGV4dDtcbiRuYXZiYXItZGFyay1jb2xvcjogJGJvZHktdGV4dDtcbiRuYXZiYXItZGFyay1ob3Zlci1jb2xvcjogJGJvZHktdGV4dDtcbiRuYXZiYXItZGFyay1hY3RpdmUtY29sb3I6ICRib2R5LWJnO1xuJGFuYWtpbi1uYXZiYXItZGFyay1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3I7XG4kbmF2YmFyLWJvcmRlcjogMXB4IHNvbGlkICRhbmFraW4tbmF2YmFyLWRhcmstYm9yZGVyLWNvbG9yO1xuXG5cbi8qXG5CcmVhZGNydW1icy5cbiAqL1xuJGJyZWFkY3J1bWItYmc6IHRyYW5zcGFyZW50O1xuJGJyZWFkY3J1bWItY29sb3I6ICRib2R5LXRleHQ7XG4kYnJlYWRjcnVtYi1wYWRkaW5nLXk6IDA7XG4kYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yOiAkYm9keS10ZXh0O1xuXG4vKlxuQWxlcnQuXG4gKi9cbiRhbGVydC1wYWRkaW5nLXg6IDE1cHg7XG5cbi8qXG5DYXJkLlxuICovXG4kY2FyZC1zcGFjZXIteTogMTVweDtcbiRjYXJkLWNhcC1iZzogdHJhbnNwYXJlbnQ7XG4kY2FyZC1ib3JkZXItd2lkdGg6IDA7XG4kY2FyZC1ib3JkZXItY29sb3I6ICMwMDA7XG4kY2FyZC1kYW5nZXItYmc6ICRjYXJkLWNhcC1iZztcbiRjYXJkLWRhbmdlci1ib3JkZXI6ICRkYW5nZXI7XG5cblxuLypcbklucHV0LlxuICovXG4kaW5wdXQtYnRuLXBhZGRpbmcteTogMTJweDtcbiRpbnB1dC1idG4tcGFkZGluZy14OiAyMHB4O1xuJGFwcC1mb3JtLWxhYmVsLWZvbnQtd2VpZ2h0OiBub3JtYWw7XG5cbiRpbnB1dC1wYWRkaW5nLXk6ICRpbnB1dC1idG4tcGFkZGluZy15O1xuJGlucHV0LXBhZGRpbmcteDogJGlucHV0LWJ0bi1wYWRkaW5nLXk7XG4kaW5wdXQtaGVpZ2h0OiA0NXB4O1xuXG5cbi8qXG5MaXN0IGdyb3VwLlxuICovXG4kbGlzdC1ncm91cC1pdGVtLXBhZGRpbmcteDogMTVweDtcbiRsaXN0LWdyb3VwLWFjdGlvbi1jb2xvcjogJGJvZHktdGV4dDtcblxuLypcblRpdGxlLlxuICovXG4kYXBwLWhlYWRlci1ib3JkZXItYm90dG9tOiB0cmFuc3BhcmVudDtcblxuLypcblBhbmVsLlxuICovXG4kcGFuZWwtYm9keS1wYWRkaW5nOiAxNXB4IDA7XG4kcGFuZWwtaGVhZGluZy1wYWRkaW5nOiAxNXB4IDA7XG5cbiRwYW5lbC1kZWZhdWx0LXRleHQ6ICRib2R5LXRleHQ7XG4kcGFuZWwtZGVmYXVsdC1ib3JkZXI6ICRib2R5LXRleHQ7XG4kcGFuZWwtZGVmYXVsdC1oZWFkaW5nLWJnOiB0cmFuc3BhcmVudDtcbiRwYW5lbC1kYW5nZXItaGVhZGluZy1iZzogdHJhbnNwYXJlbnQ7XG5cbi8qXG5MaXN0cy5cbiAqL1xuJGxpc3QtZ3JvdXAtYm9yZGVyOiAjZWJlYmViO1xuJGxpc3QtZ3JvdXAtbGluay1jb2xvcjogJGJvZHktdGV4dDtcblxuLypcbkJ1dHRvbnMuXG4gKi9cbiRidG4tYm94LXNoYWRvdzogbm9uZTtcblxuLypcbkZvcm1zLlxuICovXG4kaW5wdXQtY29sb3I6ICRib2R5LXRleHQ7XG4kaW5wdXQtYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiRpbnB1dC1ncm91cC1hZGRvbi1iZzogI2ZmZjtcbiRpbnB1dC1jb2xvci1wbGFjZWhvbGRlcjogIzlmOWY5ZjtcbiRpbnB1dC1ib3gtc2hhZG93OiBpbnNldCAycHggMnB4IDZweCAwIHJnYmEoMCwgMCwgMCwgMC4xMykgIWltcG9ydGFudDtcblxuJGhyLWJvcmRlcjogI2ViZWJlYjtcblxuLypcblRhYmxlcy5cbiAqL1xuJHRhYmxlLWNlbGwtcGFkZGluZzogMTVweDtcbiRhcHAtdGFibGUtdGgtYWN0aXZlLWZvbnQtc3R5bGU6IG5vcm1hbDtcblxuLy9cbi8vLyoqXG4vL1BhZ2luYXRpb24uXG4vLyAqL1xuJHBhZ2luYXRpb24taG92ZXItY29sb3I6ICRib2R5LXRleHQ7XG4kZHJvcGRvd24tc3BhY2VyOiAwO1xuXG5cbi8qXG5CYWRnZS5cbiAqL1xuJGFwcC1iYWRnZS1iZzogdHJhbnNwYXJlbnQ7XG4kYXBwLWJhZGdlLWNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4kYmFkZ2UtZm9udC13ZWlnaHQ6IDcwMDtcbiRiYWRnZS1wYWRkaW5nLXk6IDNweDtcbiRiYWRnZS1wYWRkaW5nLXg6IDVweDtcbiRiYWRnZS1ib3JkZXItcmFkaXVzOiAwO1xuIiwiLypcbkNvbG9ycy5cbiAqL1xuJGdyZWVuOiAjNWNiODVjICFkZWZhdWx0O1xuJHJlZDogI2Q5NTM0ZiAhZGVmYXVsdDtcbiR3aGl0ZTogI2ZmZiAhZGVmYXVsdDtcbiRibGFjazogIzAwMCAhZGVmYXVsdDtcbiRjeWFuOiAjZDllZGY3ICFkZWZhdWx0O1xuXG4kZ3JheS0xMDA6ICNmOWY5ZjkgIWRlZmF1bHQ7XG4kZ3JheS0yMDA6ICNmNWY1ZjUgIWRlZmF1bHQ7XG4kZ3JheS0zMDA6ICNlZWUgIWRlZmF1bHQ7XG4kZ3JheS00MDA6ICNkZGQgIWRlZmF1bHQ7XG4kZ3JheS01MDA6ICNjY2MgIWRlZmF1bHQ7XG4kZ3JheS02MDA6ICM5ZDlkOWQgIWRlZmF1bHQ7XG4kZ3JheS03MDA6ICM1NTUgIWRlZmF1bHQ7XG4kZ3JheS04MDA6ICMzMzMgIWRlZmF1bHQ7XG4kZ3JheS05MDA6ICMyMjIgIWRlZmF1bHQ7XG5cbiRib2R5LWJnOiAkZ3JheS0xMDAgIWRlZmF1bHQ7XG4kYm9keS10ZXh0OiAkZ3JheS05MDAgIWRlZmF1bHQ7XG5cbiRwcmltYXJ5OiAkZ3JheS05MDAgIWRlZmF1bHQ7XG4kc2Vjb25kYXJ5OiAkZ3JheS00MDAgIWRlZmF1bHQ7XG5cbiRkYXJrOiAkcHJpbWFyeSAhZGVmYXVsdDtcbiR5aXEtdGV4dC1kYXJrOiAkcHJpbWFyeSAhZGVmYXVsdDtcbiRkYW5nZXI6ICRyZWQgIWRlZmF1bHQ7XG4kZXJyb3I6ICRyZWQgIWRlZmF1bHQ7XG4kc3VjY2VzczogJGdyZWVuICFkZWZhdWx0O1xuJGluZm86ICRjeWFuICFkZWZhdWx0O1xuJGFwcC1pbmZvLXRleHQ6ICMzMTcwOGYgIWRlZmF1bHQ7XG5cbiRjb21wb25lbnQtYWN0aXZlLWJnOiAkcHJpbWFyeSAhZGVmYXVsdDtcbiRjb21wb25lbnQtYWN0aXZlLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XG5cbi8qXG5HcmlkLlxuICovXG4kZ3JpZC1icmVha3BvaW50czogKFxuICAgICAgICB4czogMCxcbiAgICAgICAgbWQ6IDc2OHB4LFxuICAgICAgICBsZzogMTAyNHB4XG4pICFkZWZhdWx0O1xuXG4kY29udGFpbmVyLW1heC13aWR0aHM6IChcbiAgICAgICAgeGw6IDExNzBweFxuKSAhZGVmYXVsdDtcblxuLypcblNwYWNlcnMuXG4gKi9cbiRhcHAtbWFyZ2luLWJvdHRvbTogMjBweCAhZGVmYXVsdDtcbiRhcHAtcGFkZGluZy15OiAxMHB4ICFkZWZhdWx0O1xuJGFwcC1wYWRkaW5nLXg6IDE1cHggIWRlZmF1bHQ7XG4kYXBwLWJvZHktcGFkZGluZzogNzBweCAwICFkZWZhdWx0O1xuXG4vKipcbkJvcmRlci5cbiAqL1xuJGJvcmRlci1yYWRpdXM6IDNweCAhZGVmYXVsdDtcbiRib3JkZXItcmFkaXVzLXNtOiAkYm9yZGVyLXJhZGl1cyAhZGVmYXVsdDtcblxuJGJvcmRlci1zaXplOiAxcHggIWRlZmF1bHQ7XG4kYm9yZGVyLXN0eWxlOiBzb2xpZCAhZGVmYXVsdDtcbiRib3JkZXItY29sb3I6ICRncmF5LTQwMCAhZGVmYXVsdDtcblxuLypcblRleHQuXG4gKi9cbiRmb250LWZhbWlseS1iYXNlOiBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWYgIWRlZmF1bHQ7XG5cbiRmb250LXNpemUtYmFzZTogMTRweCAhZGVmYXVsdDtcbiRmb250LXNpemUtc206IDEycHggIWRlZmF1bHQ7XG4kZm9udC1zaXplLWxnOiAxNnB4ICFkZWZhdWx0O1xuJGxpbmUtaGVpZ2h0LWJhc2U6IDEuNCAhZGVmYXVsdDtcblxuJGgxLWZvbnQtc2l6ZTogMzZweCAhZGVmYXVsdDtcbiRoMi1mb250LXNpemU6IDE4cHggIWRlZmF1bHQ7XG4kc21hbGwtZm9udC1zaXplOiAkZm9udC1zaXplLXNtICFkZWZhdWx0O1xuXG4kYXBwLWhlYWRlci1tYXJnaW46IDQwcHggMCAkYXBwLW1hcmdpbi1ib3R0b20gIWRlZmF1bHQ7XG4kYXBwLWhlYWRlci1wYWRkaW5nLWJvdHRvbTogMTBweCAhZGVmYXVsdDtcbiRhcHAtaGVhZGVyLXRleHQtYWxpZ246IGNlbnRlciAhZGVmYXVsdDtcbiRhcHAtaGVhZGVyLWJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZ3JheS0zMDAgIWRlZmF1bHQ7XG5cbiRsaW5rLWNvbG9yOiAkcHJpbWFyeSAhZGVmYXVsdDtcblxuJG1hcmstYmc6ICRzdWNjZXNzICFkZWZhdWx0O1xuJG1hcmstcGFkZGluZzogMCAhZGVmYXVsdDtcblxuJGNhcmV0LXdpZHRoOiA0cHggIWRlZmF1bHQ7XG5cbi8qXG5OYXZzLlxuICovXG4kbmF2LWxpbmstcGFkZGluZy15OiAxMHB4ICFkZWZhdWx0O1xuJG5hdi1saW5rLXBhZGRpbmcteDogJGFwcC1wYWRkaW5nLXggIWRlZmF1bHQ7XG4kYXBwLXN1Ym1lbnUtbGluay1tYXJnaW46IDAgMnB4IDEwcHggIWRlZmF1bHQ7XG4kYXBwLXN1Ym1lbnUtbWFyZ2luLWJvdHRvbTogJGFwcC1tYXJnaW4tYm90dG9tICFkZWZhdWx0O1xuJGFwcC1zdWJtZW51LWp1c3RpZnktY29udGVudDogY2VudGVyICFkZWZhdWx0O1xuJGFwcC1zdWJtZW51LWhvdmVyLWJnOiAkZ3JheS0zMDAgIWRlZmF1bHQ7XG4kYXBwLXN1Ym1lbnUtaG92ZXItY29sb3I6ICRib2R5LXRleHQgIWRlZmF1bHQ7XG5cbi8qXG5OYXZiYXIuXG4gKi9cbiRhcHAtbmF2YmFyLWV4cGFuZC1icmVha3BvaW50OiBtZCAhZGVmYXVsdDtcbiRuYXZiYXItcGFkZGluZy15OiAwICFkZWZhdWx0O1xuJG5hdmJhci1wYWRkaW5nLXg6IDAgIWRlZmF1bHQ7XG4kYXBwLW5hdmJhci1uYXYtbGluay1wYWRkaW5nLXk6IDE1cHggIWRlZmF1bHQ7XG4kbmF2YmFyLW5hdi1saW5rLXBhZGRpbmcteDogMTJweCAhZGVmYXVsdDtcbiRuYXZiYXItZGFyay1jb2xvcjogJGdyYXktNjAwICFkZWZhdWx0O1xuJGFwcC1uYXZiYXItYmFja2dyb3VuZDogJGRhcmsgIWRlZmF1bHQ7XG4kbmF2YmFyLWRhcmstaG92ZXItY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcbiRhcHAtbmF2YmFyLWRhcmstaG92ZXItYmc6ICMwOTA5MDkgIWRlZmF1bHQ7XG4kbmF2YmFyLWRhcmstYWN0aXZlLWJnOiAkYXBwLW5hdmJhci1kYXJrLWhvdmVyLWJnICFkZWZhdWx0O1xuJG5hdmJhci1ib3JkZXI6IDFweCBzb2xpZCAkbmF2YmFyLWRhcmstYWN0aXZlLWJnICFkZWZhdWx0O1xuXG4kbmF2YmFyLXRvZ2dsZXItcGFkZGluZy15OiA1cHggIWRlZmF1bHQ7XG4kbmF2YmFyLXRvZ2dsZXItcGFkZGluZy14OiA1cHggIWRlZmF1bHQ7XG4kbmF2YmFyLWRhcmstdG9nZ2xlci1ib3JkZXI6IDAgIWRlZmF1bHQ7XG5cbi8qXG5CcmVhZGNydW1icy5cbiAqL1xuJGJyZWFkY3J1bWItcGFkZGluZy15OiAkYXBwLXBhZGRpbmcteSAhZGVmYXVsdDtcbiRicmVhZGNydW1iLXBhZGRpbmcteDogJGFwcC1wYWRkaW5nLXggIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1tYXJnaW4tYm90dG9tOiAkYXBwLW1hcmdpbi1ib3R0b20gIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1pdGVtLXBhZGRpbmc6IDVweCAhZGVmYXVsdDtcbiRicmVhZGNydW1iLWJnOiAkZ3JheS0yMDAgIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yOiAkZ3JheS00MDAgIWRlZmF1bHQ7XG5cbiRoci1tYXJnaW4teTogMTVweCAhZGVmYXVsdDtcbiRoci1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XG5cbi8qXG5BbGVydC5cbiAqL1xuJGFsZXJ0LXBhZGRpbmcteTogJGFwcC1wYWRkaW5nLXkgIWRlZmF1bHQ7XG4kYWxlcnQtcGFkZGluZy14OiAkYXBwLXBhZGRpbmcteCAhZGVmYXVsdDtcbiRhbGVydC1tYXJnaW4tYm90dG9tOiAkYXBwLW1hcmdpbi1ib3R0b20gIWRlZmF1bHQ7XG5cbi8qXG5DYXJkLlxuICovXG4kY2FyZC1zcGFjZXIteTogJGFwcC1wYWRkaW5nLXkgIWRlZmF1bHQ7XG4kY2FyZC1zcGFjZXIteDogJGFwcC1wYWRkaW5nLXggIWRlZmF1bHQ7XG4kY2FyZC1jYXAtYmc6ICRncmF5LTIwMCAhZGVmYXVsdDtcbiRjYXJkLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRjYXJkLWlubmVyLWJvcmRlci1yYWRpdXM6IDAgIWRlZmF1bHQ7XG4kYXBwLWNhcmQtbWFyZ2luLWJvdHRvbTogJGFwcC1tYXJnaW4tYm90dG9tICFkZWZhdWx0O1xuXG4kY2FyZC1kYW5nZXItYmc6ICNmMmRlZGUgIWRlZmF1bHQ7XG4kY2FyZC1kYW5nZXItYm9yZGVyOiAjZWJjY2QxICFkZWZhdWx0O1xuJGNhcmQtZGFuZ2VyLWNvbG9yOiAkZGFuZ2VyICFkZWZhdWx0O1xuXG4vKlxuR3JpZCB2aWV3LlxuICovXG4kYXBwLWdyaWQtdmlldy1tYXJnaW4teTogMTVweCAhZGVmYXVsdDtcbiRhcHAtZ3JpZC12aWV3LWJvcmRlcjogMXB4IHNvbGlkICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kYXBwLWdyaWQtdmlldy1idXR0b25zLXRvcDogNnB4ICFkZWZhdWx0O1xuXG4vKlxuQnV0dG9ucy5cbiAqL1xuJGJ0bi1wcmltYXJ5LWJnOiAkcHJpbWFyeSAhZGVmYXVsdDtcbiRidG4tcHJpbWFyeS1ob3Zlci1iZzogZGFya2VuKCRidG4tcHJpbWFyeS1iZywgNy41JSkgIWRlZmF1bHQ7XG4kYnRuLXByaW1hcnktYWN0aXZlLWJnOiBkYXJrZW4oJGJ0bi1wcmltYXJ5LWJnLCAxMCUpICFkZWZhdWx0O1xuJGJ0bi1wcmltYXJ5LWJvcmRlci1jb2xvcjogJHByaW1hcnkgIWRlZmF1bHQ7XG4kYnRuLXByaW1hcnktaG92ZXItYm9yZGVyLWNvbG9yOiAkYnRuLXByaW1hcnktYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuJGJ0bi1wcmltYXJ5LWFjdGl2ZS1ib3JkZXItY29sb3I6ICRidG4tcHJpbWFyeS1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG5cbiRidG4tc2Vjb25kYXJ5LWJnOiAkd2hpdGUgIWRlZmF1bHQ7XG4kYnRuLXNlY29uZGFyeS1ob3Zlci1iZzogJGdyYXktMjAwICFkZWZhdWx0O1xuJGJ0bi1zZWNvbmRhcnktYWN0aXZlLWJnOiAkZ3JheS0zMDAgIWRlZmF1bHQ7XG4kYnRuLXNlY29uZGFyeS1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kYnRuLXNlY29uZGFyeS1ob3Zlci1ib3JkZXItY29sb3I6ICRidG4tc2Vjb25kYXJ5LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRidG4tc2Vjb25kYXJ5LWFjdGl2ZS1ib3JkZXItY29sb3I6ICRidG4tc2Vjb25kYXJ5LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcblxuJGJ0bi1wYWRkaW5nLXktc206IDRweCAhZGVmYXVsdDtcbiRidG4tcGFkZGluZy14LXNtOiA2cHggIWRlZmF1bHQ7XG4kYnRuLWxpbmUtaGVpZ2h0LXNtOiAxICFkZWZhdWx0O1xuXG5cbi8qXG5JbnB1dC5cbiAqL1xuJGZvcm0tZ3JvdXAtbWFyZ2luLWJvdHRvbTogMTVweCAhZGVmYXVsdDtcbiRhcHAtZm9ybS1ncm91cC1idXR0b25zLW1hcmdpbi10b3A6IDIwcHggIWRlZmF1bHQ7XG4kZm9ybS10ZXh0LW1hcmdpbi10b3A6IDZweCAhZGVmYXVsdDtcblxuJGZvcm0tY2hlY2staW5saW5lLW1hcmdpbi14OiAyMHB4ICFkZWZhdWx0O1xuJGZvcm0tY2hlY2staW5saW5lLWlucHV0LW1hcmdpbi14OiAxMHB4ICFkZWZhdWx0O1xuXG4kaW5wdXQtYnRuLXBhZGRpbmcteTogNnB4ICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1wYWRkaW5nLXg6IDEycHggIWRlZmF1bHQ7XG4kaW5wdXQtaGVpZ2h0OiAzNHB4ICFkZWZhdWx0O1xuXG4kaW5wdXQtYnRuLWZvY3VzLXdpZHRoOiAxcHggIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLXBhZGRpbmcteS1zbTogJGlucHV0LWJ0bi1wYWRkaW5nLXkgIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLXBhZGRpbmcteC1zbTogJGlucHV0LWJ0bi1wYWRkaW5nLXggIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLXBhZGRpbmcteS1sZzogJGlucHV0LWJ0bi1wYWRkaW5nLXkgIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLXBhZGRpbmcteC1sZzogJGlucHV0LWJ0bi1wYWRkaW5nLXggIWRlZmF1bHQ7XG5cbiRjdXN0b20tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nOiAxMHB4O1xuXG4kaW5wdXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgLjA3NSkgIWRlZmF1bHQ7XG4kaW5wdXQtZm9jdXMtY29sb3I6ICRib2R5LXRleHQgIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWZvY3VzLXdpZHRoOiAxcHggIWRlZmF1bHQ7XG4kaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yOiAjNjZhZmU5ICFkZWZhdWx0O1xuXG4kYXBwLWZvcm0tbGFiZWwtZm9udC13ZWlnaHQ6IGJvbGQgIWRlZmF1bHQ7XG5cbi8qXG5MaXN0IGdyb3VwLlxuICovXG4kbGlzdC1ncm91cC1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1pdGVtLXBhZGRpbmcteTogJGFwcC1wYWRkaW5nLXkgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1pdGVtLXBhZGRpbmcteDogJGFwcC1wYWRkaW5nLXggIWRlZmF1bHQ7XG5cbi8qXG5UYWJsZXMuXG4gKi9cbiRhcHAtdGFibGUtbWFyZ2luLWJvdHRvbTogMCAhZGVmYXVsdDtcbiR0YWJsZS1ib3JkZXItd2lkdGg6IDFweCAhZGVmYXVsdDtcbiR0YWJsZS1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xuJGFwcC10YWJsZS10aC1ib3JkZXItd2lkdGg6IDFweCAhZGVmYXVsdDtcbiRhcHAtdGFibGUtdGgtYm9yZGVyLWNvbG9yOiAkdGFibGUtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuJHRhYmxlLWNlbGwtcGFkZGluZzogMTBweCAhZGVmYXVsdDtcbiR0YWJsZS1hY2NlbnQtYmc6ICRncmF5LTIwMCAhZGVmYXVsdDtcbiR0YWJsZS1ob3Zlci1iZzogJGdyYXktMzAwICFkZWZhdWx0O1xuJGFwcC10YWJsZS10aC1hY3RpdmUtZm9udC1zdHlsZTogaXRhbGljICFkZWZhdWx0O1xuJGFwcC10YWJsZS10aC1zZWxlY3RlZC1iZzogJGluZm8gIWRlZmF1bHQ7XG5cbi8qXG5QYWdpbmF0aW9uLlxuICovXG4kYXBwLXBhZ2luYXRpb24tanVzdGlmeS1jb250ZW50OiBjZW50ZXIgIWRlZmF1bHQ7XG4kYXBwLXBhZ2luYXRpb24tbWFyZ2luOiAzMHB4IDAgMCAhZGVmYXVsdDtcbiRhcHAtcGFnaW5hdGlvbi1wYWRkaW5nOiAyMHB4IDAgMTBweCAhZGVmYXVsdDtcbiRhcHAtcGFnaW5hdGlvbi1ib3JkZXItdG9wOiAxcHggc29saWQgJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcblxuJHBhZ2luYXRpb24tcGFkZGluZy15OiAkaW5wdXQtYnRuLXBhZGRpbmcteSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLXBhZGRpbmcteDogJGlucHV0LWJ0bi1wYWRkaW5nLXggIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1saW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0LWJhc2UgIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWhvdmVyLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcblxuJHBhZ2luYXRpb24tZm9jdXMtYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcblxuLypcbkRyb3Bkb3duLlxuICovXG4kZHJvcGRvd24tbWluLXdpZHRoOiAxNjBweCAhZGVmYXVsdDtcbiRkcm9wZG93bi1wYWRkaW5nLXk6IDVweCAhZGVmYXVsdDtcbiRkcm9wZG93bi1zcGFjZXI6IDJweCAhZGVmYXVsdDtcbiRkcm9wZG93bi1iZzogI2ZmZiAhZGVmYXVsdDtcbiRkcm9wZG93bi1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kZHJvcGRvd24tZGl2aWRlci1iZzogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcblxuJGFwcC1kcm9wZG93bi1idXR0b24tYmc6ICRncmF5LTEwMCAhZGVmYXVsdDtcbiRhcHAtZHJvcGRvd24tYnV0dG9uLWNvbG9yOiAkYm9keS10ZXh0ICFkZWZhdWx0O1xuJGFwcC1kcm9wZG93bi1idXR0b24tYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuXG4kYXBwLWRyb3Bkb3duLWJ1dHRvbi1hY3RpdmUtYmc6ICRncmF5LTMwMCAhZGVmYXVsdDtcbiRhcHAtZHJvcGRvd24tYnV0dG9uLWFjdGl2ZS1jb2xvcjogJGFwcC1kcm9wZG93bi1idXR0b24tY29sb3IgIWRlZmF1bHQ7XG4kYXBwLWRyb3Bkb3duLWJ1dHRvbi1hY3RpdmUtYm9yZGVyLWNvbG9yOiAkYXBwLWRyb3Bkb3duLWJ1dHRvbi1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG5cbiRkcm9wZG93bi1saW5rLWNvbG9yOiAkbGluay1jb2xvciAhZGVmYXVsdDtcbiRkcm9wZG93bi1saW5rLWhvdmVyLWNvbG9yOiAkbGluay1jb2xvciAhZGVmYXVsdDtcbiRkcm9wZG93bi1pdGVtLXBhZGRpbmcteTogJGlucHV0LWJ0bi1wYWRkaW5nLXkgIWRlZmF1bHQ7XG4kZHJvcGRvd24taXRlbS1wYWRkaW5nLXg6ICRpbnB1dC1idG4tcGFkZGluZy14ICFkZWZhdWx0O1xuXG4vKlxuQmFkZ2UuXG4gKi9cbiRiYWRnZS1mb250LXNpemU6IDEycHggIWRlZmF1bHQ7XG4kYXBwLWJhZGdlLWJnOiAkZ3JheS02MDAgIWRlZmF1bHQ7XG4kYXBwLWJhZGdlLWNvbG9yOiAkd2hpdGUgIWltcG9ydGFudCAhZGVmYXVsdDtcbiRhcHAtYmFkZ2UtYWN0aXZlLWJnOiAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcbiRhcHAtYmFkZ2UtYWN0aXZlLWNvbG9yOiAkY29tcG9uZW50LWFjdGl2ZS1iZyAhaW1wb3J0YW50ICFkZWZhdWx0O1xuJGJhZGdlLWZvbnQtd2VpZ2h0OiBub3JtYWwgIWRlZmF1bHQ7XG4kYmFkZ2UtcGFkZGluZy15OiAzcHggIWRlZmF1bHQ7XG4kYmFkZ2UtcGFkZGluZy14OiA3cHggIWRlZmF1bHQ7XG4kYmFkZ2UtYm9yZGVyLXJhZGl1czogMTBweCAhZGVmYXVsdDtcblxuLypcblRvb2x0aXAuXG4gKi9cbiR0b29sdGlwLW1heC13aWR0aDogMjAwcHggIWRlZmF1bHQ7XG4kdG9vbHRpcC1taW4td2lkdGg6IDgwcHggIWRlZmF1bHQ7XG5cbi8qKlxuVGh1bWJuYWlsLlxuICovXG4kdGh1bWJuYWlsLXBhZGRpbmc6ICRhcHAtcGFkZGluZy15ICFkZWZhdWx0O1xuJHRodW1ibmFpbC1jYXB0aW9uLXBhZGRpbmc6ICRhcHAtcGFkZGluZy14ICFkZWZhdWx0O1xuXG4vKlxuSWNvbi5cbiAqL1xuJGFwcC1pY29uLW1hcmdpbi14OiA2cHggIWRlZmF1bHQ7XG4iLCIvKipcclxuICogQ0tFZGl0b3IgZGlhbG9nLlxyXG4gKi9cclxuLyoqXHJcbiAqIFRoZSBkZWZhdWx0IHN0eWxlc2hlZXQgaW5jbHVkZWQgb24gYWxsIHJlcXVlc3RzLlxyXG4gKi9cclxuQGltcG9ydCBcIi4uLy4uL2FkbWluL3Njc3MvaW5jbHVkZXMvdmFyaWFibGVzXCI7XHJcblxyXG4vKipcclxuICogSW5jbHVkZXMgQm9vdHN0cmFwIDQuXHJcbiAqL1xyXG5AaW1wb3J0IFwiLi4vLi4vLi4vLi4vLi4vbnBtLWFzc2V0L2Jvb3RzdHJhcC9zY3NzL2Z1bmN0aW9uc1wiO1xyXG5AaW1wb3J0IFwiLi4vLi4vLi4vLi4vLi4vbnBtLWFzc2V0L2Jvb3RzdHJhcC9zY3NzL3ZhcmlhYmxlc1wiO1xyXG5AaW1wb3J0IFwiLi4vLi4vLi4vLi4vLi4vbnBtLWFzc2V0L2Jvb3RzdHJhcC9zY3NzL21peGluc1wiO1xyXG5cclxuQGltcG9ydCBcImluY2x1ZGVzL21haW51aVwiO1xyXG5AaW1wb3J0IFwiaW5jbHVkZXMvcGFuZWxcIjtcclxuQGltcG9ydCBcImluY2x1ZGVzL2NvbnRlbnRcIjtcclxuQGltcG9ydCBcImluY2x1ZGVzL2NvbG9ycGFuZWxcIjtcclxuQGltcG9ydCBcImluY2x1ZGVzL3Rvb2xiYXJcIjtcclxuQGltcG9ydCBcImluY2x1ZGVzL21lbnVcIjtcclxuQGltcG9ydCBcImluY2x1ZGVzL3JpY2hjb21ib1wiO1xyXG5AaW1wb3J0IFwiaW5jbHVkZXMvcHJlc2V0c1wiO1xyXG5cclxuLyogSW1wb3J0YW50IVxyXG4gICBUbyBhdm9pZCBzaG93aW5nIHRoZSBlZGl0b3IgVUkgd2hpbGUgaXRzIHN0eWxlcyBhcmUgc3RpbGwgbm90IGF2YWlsYWJsZSwgdGhlXHJcbiAgIGVkaXRvciBjcmVhdGVzIGl0IHdpdGggdmlzaWJpbGl0eTpoaWRkZW4uIEhlcmUsIHdlIHJlc3RvcmUgdGhlIFVJIHZpc2liaWxpdHkuICovXHJcbi5ja2VfY2hyb21lIHtcclxuICB2aXNpYmlsaXR5OiBpbmhlcml0O1xyXG59XHJcblxyXG4uY2tlX2x0cntcclxuICBvdmVyZmxvdy15OiBoaWRkZW47IC8vIERyb3Bkb3ducy5cclxufVxyXG5cclxuLyogRm9yIGFjY2Vzc2liaWxpdHkgcHVycG9zZXMsIHNldmVyYWwgXCJ2b2ljZSBsYWJlbHNcIiBhcmUgcHJlc2VudCBpbiB0aGUgVUkuXHJcbiAgIFRoZXNlIGFyZSB1c3VhbGx5IDxzcGFuPiBlbGVtZW50cyB0aGF0IHNob3cgbm90IGJlIHZpc2libGUsIGJ1dCB0aGF0IGFyZVxyXG4gICB1c2VkIGJ5IHNjcmVlbi1yZWFkZXJzIHRvIGFubm91bmNlIG90aGVyIGVsZW1lbnRzLiBIZXJlLCB3ZSBoaWRlIHRoZXNlXHJcbiAgIDxzcGFucz4sIGluIGZhY3QuICovXHJcbi5ja2Vfdm9pY2VfbGFiZWwge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbmxlZ2VuZC5ja2Vfdm9pY2VfbGFiZWwge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuIiwiLypcclxuQ29weXJpZ2h0IChjKSAyMDAzLTIwMTQsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbkZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHA6Ly9ja2VkaXRvci5jb20vbGljZW5zZVxyXG4qL1xyXG5cclxuLypcclxubWFpbnVpLmNzcyAocGFydCBvZiBlZGl0b3IuY3NzKVxyXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcblRoaXMgZmlsZSBzdHlsZXMgdGhlIGJhc2ljIHN0cnVjdHVyZSBvZiB0aGUgQ0tFZGl0b3IgdXNlciBpbnRlcmZhY2UgLSB0aGUgYm94XHJcbnRoYXQgaG9sZHMgZXZlcnl0aGluZy5cclxuXHJcbkNLRWRpdG9yIG9mZmVycyB0d28gbWFpbiBlZGl0aW5nIG1vZGVzLiBUaGUgbWFpbiBVSSBibG9ja3MgdGhhdCBjb21wb3NlIHRoZXNlXHJcbm1vZGVzIGFyZTpcclxuXHJcbiAgICBGb3IgXCJUaGVtZSBVSVwiIG1vZGUsIHRoZSBvbmUgbW9zdCBnZW5lcmFsbHkgdXNlZDpcclxuXHJcbiAgICArLS0gLmNrZV9jaHJvbWUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxuICAgIHwrLS0gLmNrZV9pbm5lciAtLS0tLS0tLS0tLS0tLS0tLS0tLS0rfFxyXG4gICAgfHwgKy0tIC5ja2VfdG9wIC0tLS0tLS0tLS0tLS0tLS0tLS0rIHx8XHJcbiAgICB8fCB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgfHxcclxuICAgIHx8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8fFxyXG4gICAgfHwgKy0tIC5ja2VfY29udGVudHMgLS0tLS0tLS0tLS0tLS0rIHx8XHJcbiAgICB8fCB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgfHxcclxuICAgIHx8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8fFxyXG4gICAgfHwgKy0tIC5ja2VfYm90dG9tIC0tLS0tLS0tLS0tLS0tLS0rIHx8XHJcbiAgICB8fCB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgfHxcclxuICAgIHx8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8fFxyXG4gICAgfCstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSt8XHJcbiAgICArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxuXHJcbiAgICBGb3IgXCJJbmxpbmUgRWRpdGluZ1wiIG1vZGU6XHJcblxyXG4gICAgKy0tIC5ja2VfY2hyb21lIC5ja2VfZmxvYXQtLS0tLS0tLS0tLS0rXHJcbiAgICB8Ky0tIC5ja2VfaW5uZXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0tK3xcclxuICAgIHx8ICstLSAuY2tlX3RvcCAtLS0tLS0tLS0tLS0tLS0tLS0tKyB8fFxyXG4gICAgfHwgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHx8XHJcbiAgICB8fCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfHxcclxuICAgIHwrLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rfFxyXG4gICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rXHJcblxyXG5TcGVjaWFsIG91dGVyIGxldmVsIGNsYXNzZXMgdXNlZCBpbiB0aGlzIGZpbGU6XHJcblxyXG4gICAgLmNrZV9oYzogQXZhaWxhYmxlIHdoZW4gdGhlIGVkaXRvciBpcyByZW5kZXJlZCBvbiBcIkhpZ2ggQ29udHJhc3RcIi5cclxuXHJcbiovXHJcblxyXG4vKiBUaGUgb3V0ZXIgYm91bmRhcnkgb2YgdGhlIGludGVyZmFjZS4gKi9cclxuLmNrZV9jaHJvbWUge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2U7XHJcbiAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1iYXNlO1xyXG4gIGNvbG9yOiAkaW5wdXQtY29sb3I7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGlucHV0LWJnO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICRpbnB1dC1ib3JkZXItY29sb3I7XHJcbiAgYm9yZGVyLXJhZGl1czogJGlucHV0LWJvcmRlci1yYWRpdXM7IC8vIE5vdGU6IFRoaXMgaGFzIG5vIGVmZmVjdCBvbiA8c2VsZWN0PnMgaW4gc29tZSBicm93c2VycywgZHVlIHRvIHRoZSBsaW1pdGVkIHN0eWxhYmlsaXR5IG9mIDxzZWxlY3Q+cyBpbiBDU1MuXHJcblxyXG59XHJcblxyXG4vKiBUaGUgaW5uZXIgYm91bmRhcnkgb2YgdGhlIGludGVyZmFjZS4gKi9cclxuLmNrZV9pbm5lciB7XHJcbiAgLyogVGhpcyBpcyA8c3Bhbj4sIHNvIHRyYW5zZm9ybSBpdCBpbnRvIGEgYmxvY2suKi9cclxuICBkaXNwbGF5OiBibG9jaztcclxuXHJcbiAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xyXG5cclxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKiBBZGRlZCB0byB0aGUgb3V0ZXIgYm91bmRhcnkgb2YgdGhlIFVJIHdoZW4gaW4gaW5saW5lIGVkaXRpbmcsXHJcbiAgIHdoZW4gdGhlIFVJIGlzIGZsb2F0aW5nLiAqL1xyXG4uY2tlX2Zsb2F0IHtcclxuICAvKiBNYWtlIHdoaXRlIHRoZSBzcGFjZSBiZXR3ZWVuIHRoZSBvdXRlciBhbmQgdGhlIGlubmVyIGJvcmRlcnMuICovXHJcbiAgYm9yZGVyOiBub25lO1xyXG5cclxuICAuY2tlX2lubmVyIHtcclxuICAgIC8qIEFzIHdlIGRvbid0IGhhdmUgYmxvY2tzIGZvbGxvd2luZyB0b3AgKHRvb2xiYXIpIHdlIHN1cHByZXNzIHRoZSBwYWRkaW5nXHJcbiAgICAgICBhcyB0aGUgdG9vbGJhciBkZWZpbmVzIGl0cyBvd24gbWFyZ2luLiAqL1xyXG4gICAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgfVxyXG5cclxuICAuY2tlX3RvcCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkaW5wdXQtYm9yZGVyLWNvbG9yO1xyXG4gIH1cclxufVxyXG5cclxuLyogTWFrZSB0aGUgbWFpbiBzcGFjZXMgZW5sYXJnZSB0byBob2xkIHBvdGVudGlhbGx5IGZsb2F0ZWQgY29udGVudC4gKi9cclxuLmNrZV90b3AsIC5ja2VfY29udGVudHMsIC5ja2VfYm90dG9tIHtcclxuICAvKiBUaGVzZSBhcmUgPHNwYW4+cywgc28gdHJhbnNmb3JtIHRoZW0gaW50byBibG9ja3MuKi9cclxuICBkaXNwbGF5OiBibG9jaztcclxuXHJcbiAgLyogSWRlYWxseSB0aGlzIHNob3VsZCBiZSBcImF1dG9cIiwgYnV0IGl0IHNob3dzIHNjcm9sbGJhcnMgaW4gSUU3LiAqL1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5ja2VfdG9wLCAuY2tlX2JvdHRvbSB7XHJcbiAgcGFkZGluZzogM3B4IDAgMDtcclxuICBiYWNrZ3JvdW5kOiAkZ3JheS00MDA7XHJcbn1cclxuXHJcbi5ja2VfdG9wIHtcclxuICBjb2xvcjogJGlucHV0LWNvbG9yO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRpbnB1dC1ncm91cC1hZGRvbi1iZztcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGlucHV0LWdyb3VwLWFkZG9uLWJvcmRlci1jb2xvcjtcclxuICAvKiBBbGxvdyBicmVha2luZyB0b29sYmFycyB3aGVuIGluIGEgbmFycm93IGVkaXRvci4gKCM5OTQ3KSAqL1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgcGFkZGluZzogJGlucHV0LXBhZGRpbmcteSAwICRpbnB1dC1wYWRkaW5nLXkgJGlucHV0LXBhZGRpbmcteDtcclxufVxyXG5cclxuLmNrZV9jb250ZW50cyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBib3JkZXI6IDA7XHJcbiAgQGluY2x1ZGUgYm94LXNoYWRvdyhpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAuMDc1KSk7IC8vIFJlZGVjbGFyZSBzbyB0cmFuc2l0aW9ucyB3b3JrO1xyXG59XHJcblxyXG4uY2tlX2JvdHRvbSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4vKiBPbiBpT1Mgd2UgbmVlZCB0byBtYW51YWxseSBlbmFibGUgc2Nyb2xsaW5nIGluIHRoZSBjb250ZW50cyBibG9jay4gKCM5OTQ1KSAqL1xyXG4uY2tlX2Jyb3dzZXJfaW9zIC5ja2VfY29udGVudHMge1xyXG4gIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xyXG59IiwiQG1peGluIGJveC1zaGFkb3coJHNoYWRvdy4uLikge1xuICBAaWYgJGVuYWJsZS1zaGFkb3dzIHtcbiAgICAkcmVzdWx0OiAoKTtcblxuICAgIEBpZiAobGVuZ3RoKCRzaGFkb3cpID09IDEpIHtcbiAgICAgIC8vIFdlIGNhbiBwYXNzIGBAaW5jbHVkZSBib3gtc2hhZG93KG5vbmUpO2BcbiAgICAgICRyZXN1bHQ6ICRzaGFkb3c7XG4gICAgfSBAZWxzZSB7XG4gICAgICAvLyBGaWx0ZXIgdG8gYXZvaWQgaW52YWxpZCBwcm9wZXJ0aWVzIGZvciBleGFtcGxlIGBib3gtc2hhZG93OiBub25lLCAxcHggMXB4IGJsYWNrO2BcbiAgICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggbGVuZ3RoKCRzaGFkb3cpIHtcbiAgICAgICAgQGlmIG50aCgkc2hhZG93LCAkaSkgIT0gXCJub25lXCIge1xuICAgICAgICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCBudGgoJHNoYWRvdywgJGkpLCBcImNvbW1hXCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIEBpZiAobGVuZ3RoKCRyZXN1bHQpID4gMCkge1xuICAgICAgYm94LXNoYWRvdzogJHJlc3VsdDtcbiAgICB9XG4gIH1cbn1cbiIsIi8qXHJcbkNvcHlyaWdodCAoYykgMjAwMy0yMDE0LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG5Gb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwOi8vY2tlZGl0b3IuY29tL2xpY2Vuc2VcclxuKi9cclxuXHJcbi8qXHJcbnBhbmVsLmNzcyAocGFydCBvZiBlZGl0b3IuY3NzKVxyXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuUGFuZWxzIGFyZSBmbG9hdGluZyBlbGVtZW50cyB0aGF0IGNhbiBob2xkIGRpZmZlcmVudCB0eXBlcyBvZiBjb250ZW50cy5cclxuVGhlIGZvbGxvd2luZyBhcmUgY29tbW9uIHVzZXMgb2YgaXQ6XHJcblxyXG4gICAgLSBUaGUgZWxlbWVudCB0aGF0IHRvb2xiYXIgY29tYm9zIGRpc3BsYXkgd2hlbiBvcGVuaW5nIHRoZW0uXHJcbiAgICAtIFRoZSBjb250ZXh0IG1lbnUuXHJcbiAgICAtIFRoZSBsaXN0IG9mIGl0ZW1zIGRpc3BsYXllZCBieSBcIm1lbnUgYnV0dG9uc1wiIChlLmcuIHNjYXl0KS5cclxuICAgIC0gVGhlIHBhbmVsIHNob3duIHdoZW4gb3BlbmluZyBcInBhbmVsIGJ1dHRvbnNcIiAoZS5nLiBjb2xvciBidXR0b25zKS5cclxuXHJcblBhbmVsIGNvbnRlbnRzIGFyZSB3cmFwcGVkIGludG8gYW4gaWZyYW1lLCBzbyBpdCBpcyBwb3NzaWJsZSB0byBoYXZlIGFkZGl0aW9uYWxcclxuQ1NTIGxvYWRlZCBpbnNpZGUgdGhlbSAoZS5nLiB0byBoYXZlIG1vcmUgYWNjdXJhdGUgcHJldmlldyBvbiB0aGUgc3R5bGVzIGNvbWJvKS5cclxuXHJcblRoZSBmb2xsb3dpbmcgaXMgYSB2aXN1YWwgcmVwcmVzZW50YXRpb24gb2YgdGhlIG91dGVyIGVsZW1lbnRzIG9mIGEgcGFuZWw6XHJcblxyXG4rLS0gLmNrZV9wYW5lbCgqKSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0rXHJcbnwgKy0tIElGUkFNRS5ja2VfcGFuZWxfZnJhbWUgLS0tLS0tLS0rIHxcclxufCB8ICstLSBIVE1MLmNrZV9wYW5lbF9jb250YWluZXIgLS0rIHwgfFxyXG58IHwgfCArLS0gLmNrZV9wYW5lbF9ibG9jayAtLS0tLS0rIHwgfCB8XHJcbnwgfCB8IHwgICAgICAgICAgICAgICAgICAgICAgICAgIHwgfCB8IHxcclxufCB8IHwgfCAgICAgKGNvbnRlbnRzIGhlcmUpICAgICAgfCB8IHwgfFxyXG58IHwgfCB8ICAgICAgICAgICAgICAgICAgICAgICAgICB8IHwgfCB8XHJcbnwgfCB8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfCB8IHxcclxufCB8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfFxyXG58ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8XHJcbistLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxuXHJcbigqKSBBbGwga2luZHMgb2YgcGFuZWwgc2hhcmUgdGhlIGFib3ZlIHN0cnVjdHVyZS4gTWVudSBwYW5lbHMgYWRkcyB0aGVcclxuICAgIC5ja2VfbWVudV9wYW5lbCBjbGFzcyB0byB0aGUgb3V0ZXIgZWxlbWVudCwgd2hpbGUgdG9vbGJhciBjb21ib3MgYWRkIHRoZVxyXG4gICAgLmNrZV9jb21ib3BhbmVsIGNsYXNzLlxyXG5cclxuVGhpcyBmaWxlIGFsc28gZGVmaW5lcyBzdHlsZXMgZm9yIHBhbmVsIGxpc3RzICh1c2VkIGJ5IGNvbWJvcykuIEZvciBtZW51LWxpa2VcclxucGFuZWwgY29udGVudHMgYW5kIGNvbG9yIHBhbmVscyBjaGVjayBtZW51LmNzcyBhbmQgY29sb3JwYW5lbC5jc3MuXHJcbiovXHJcblxyXG4vKiBUaGUgYm94IHRoYXQgaG9sZHMgYW4gSUZSQU1FLiBJdCdzIGluc2VydGVkIGludG8gYSBob3N0IGRvY3VtZW50IGFuZCBwb3NpdGlvbmVkXHJcbiAgIGFic29sdXRlbHkgYnkgdGhlIGFwcGxpY2F0aW9uLiBJdCBmbG9hdHMgYWJvdmUgdGhlIGhvc3QgZG9jdW1lbnQvZWRpdG9yLiAqL1xyXG4uY2tlX3BhbmVsIHtcclxuICAvKiBSZXN0b3JlIHRoZSBsb2FkaW5nIGhpZGUgKi9cclxuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gIHdpZHRoOiAxMjBweDtcclxuICBoZWlnaHQ6IDEwMHB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG5cclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICRncmF5LTUwMDtcclxuICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcclxufVxyXG5cclxuLyogVGhpcyBjbGFzcyByZXByZXNlbnRzIHBhbmVscyB3aGljaCBhcmUgdXNlZCBhcyBjb250ZXh0IG1lbnVzLiAqL1xyXG4uY2tlX21lbnVfcGFuZWwge1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKiBUaGlzIGNsYXNzIHJlcHJlc2VudHMgcGFuZWxzIHdoaWNoIGFyZSB1c2VkIGJ5IHJpY2ggY29tYm9zLiAqL1xyXG4uY2tlX2NvbWJvcGFuZWwge1xyXG4gIHdpZHRoOiAxNTBweDtcclxuICBoZWlnaHQ6IDExMHB4O1xyXG59XHJcblxyXG4vKiBUaGUgSUZSQU1FIHRoZSBwYW5lbCBpcyB3cmFwcGVkIGludG8uICovXHJcbi5ja2VfcGFuZWxfZnJhbWUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBmb250LXNpemU6IDEycHg7XHJcblxyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcclxufVxyXG5cclxuLyogVGhlIEhUTUwgZG9jdW1lbnQgd2hpY2ggaXMgYSBkaXJlY3QgZGVzY2VuZGFudCBvZiB0aGUgSUZSQU1FICovXHJcbi5ja2VfcGFuZWxfY29udGFpbmVyIHtcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcclxufVxyXG5cclxuLypcclxuSGVyZSB3ZSBzdGFydCB0aGUgZGVmaW5pdGlvbiBvZiBwYW5lbCBsaXN0cyAoZS5nLiBjb21ibyBwYW5lbHMpLiBUaGUgZm9sbG93aW5nXHJcbmlzIGl0cyB2aXN1YWwgcmVwcmVzZW50YXRpb246XHJcblxyXG4rLS0gLmNrZV9wYW5lbF9ibG9jayAtLS0tLS0tLS0tLS0tLS0tLStcclxufCArLS0gLmNrZV9wYW5lbF9ncm91cHRpdGxlIC0tLS0tLS0tKyB8XHJcbnwgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgfFxyXG58ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxufCArLS0gLmNrZV9wYW5lbF9saXN0IC0tLS0tLS0tLS0tLS0tKyB8XHJcbnwgfCArLS0gLmNrZV9wYW5lbF9saXN0SXRlbSAtLS0tLS0rIHwgfFxyXG58IHwgfCArLS0gYSAtLS0tLS0tLS0tLS0tLS0tLS0tLSsgfCB8IHxcclxufCB8IHwgfCArLS0gc3BhbiAtLS0tLS0tLS0tLS0tKyB8IHwgfCB8XHJcbnwgfCB8IHwgfCAgICAgICAgICAgICAgICAgICAgIHwgfCB8IHwgfFxyXG58IHwgfCB8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfCB8IHxcclxufCB8IHwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfCB8XHJcbnwgfCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfFxyXG58IHwgKy0tIC5ja2VfcGFuZWxfbGlzdEl0ZW0gLS0tLS0tKyB8IHxcclxufCB8IHwgKy0tIGEgLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfCB8XHJcbnwgfCB8IHwgKy0tIHNwYW4gLS0tLS0tLS0tLS0tLSsgfCB8IHwgfFxyXG58IHwgfCB8IHwgICAgICAgICAgICAgICAgICAgICB8IHwgfCB8IHxcclxufCB8IHwgfCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8IHwgfCB8XHJcbnwgfCB8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8IHwgfFxyXG58IHwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8IHxcclxufCB8IC4uLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfFxyXG4rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxuKi9cclxuXHJcblxyXG4vKiBUaGUgbGlzdCBvZiBwYW5lbCBpdGVtcy4gKi9cclxuLmNrZV9wYW5lbF9saXN0IHtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBmb250LXNpemU6IDEycHg7XHJcbn1cclxuXHJcbi8qIFRoZSBpdGVtIG9mIC5ja2VfcGFuZWxfbGlzdCAqL1xyXG4uY2tlX3BhbmVsX2xpc3RJdGVtIHtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZy1ib3R0b206IDFweDtcclxufVxyXG5cclxuLyogVGhlIGNoaWxkIG9mIC5ja2VfcGFuZWxfbGlzdEl0ZW0uIFRoZXNlIGVsZW1lbnRzIGNvbnRhaW4gc3BhbnMgd2hpY2ggYXJlXHJcbiAgIHRvIGRpc3BsYXkgYSByZWFsIG5hbWUgb2YgdGhlIHByb3BlcnR5IHdoaWNoIGlzIHZpc2libGUgZm9yIGFuIGVuZC11c2VyLiAqL1xyXG4uY2tlX3BhbmVsX2xpc3RJdGVtIGEge1xyXG4gIHBhZGRpbmc6IDZweCAxMHB4O1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGNvbG9yOiBpbmhlcml0ICFpbXBvcnRhbnQ7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHJcbiAgJjpob3ZlciwgJjpmb2N1cywgJjphY3RpdmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeTtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgfVxyXG5cclxuICAmID4gKiB7XHJcbiAgICBmb250LXNpemU6IGluaGVyaXQgIWltcG9ydGFudDtcclxuICAgIGZvbnQtd2VpZ2h0OiBpbmhlcml0ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4vKiBJRTYgKi9cclxuKiBodG1sIC5ja2VfcGFuZWxfbGlzdEl0ZW0gYSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcblxyXG4gIC8qIElFIGlzIG5vdCBhYmxlIHRvIGluaGVyaXQgdGhlIGNvbG9yLCBzbyB3ZSBtdXN0IGZvcmNlIGl0IHRvIGJsYWNrICovXHJcbiAgY29sb3I6ICMwMDA7XHJcbn1cclxuXHJcbi8qIElFNyAqL1xyXG4qOmZpcnN0LWNoaWxkICsgaHRtbCAuY2tlX3BhbmVsX2xpc3RJdGVtIGEge1xyXG4gIC8qIElFIGlzIG5vdCBhYmxlIHRvIGluaGVyaXQgdGhlIGNvbG9yLCBzbyB3ZSBtdXN0IGZvcmNlIGl0IHRvIGJsYWNrICovXHJcbiAgY29sb3I6ICMwMDA7XHJcbn1cclxuXHJcbi5ja2VfcGFuZWxfbGlzdEl0ZW0uY2tlX3NlbGVjdGVkIGEge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnk7XHJcbiAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuLmNrZV9oYyAuY2tlX3BhbmVsX2xpc3RJdGVtIGEge1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuLmNrZV9oYyAuY2tlX3BhbmVsX2xpc3RJdGVtIGEge1xyXG4gICY6aG92ZXIsICY6Zm9jdXMsICY6YWN0aXZlIHtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkO1xyXG4gICAgcGFkZGluZzogMXB4IDJweDtcclxuICB9XHJcbn1cclxuXHJcbi8qIFRoZSB0aXRsZSBvZiB0aGUgZW50aXJlIHBhbmVsIHdoaWNoIGlzIHZpc2libGUgb24gdG9wIG9mIHRoZSBsaXN0LiAqL1xyXG4uY2tlX3BhbmVsX2dyb3VwdGl0bGUge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgLy9mb250LXNpemU6IDExcHg7XHJcbiAgLy9mb250LXdlaWdodDogYm9sZDtcclxuICAvL3doaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgLy9tYXJnaW46IDA7XHJcbiAgLy9wYWRkaW5nOiA2cHggNnB4O1xyXG4gIC8vXHJcbiAgLy9jb2xvcjogIzQ3NDc0NztcclxuICAvL2JvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZ3JheS01MDA7XHJcbiAgLy9cclxuICAvL2JhY2tncm91bmQ6ICRncmF5LTQwMDtcclxuICAvL1xyXG4gIC8vJjpmaXJzdC1jaGlsZCB7XHJcbiAgLy8gIGJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzICRib3JkZXItcmFkaXVzIDAgMDtcclxuICAvL31cclxufVxyXG5cclxuLyogVGhlIGZvbGxvd2luZyBzdHlsZXMgc2V0IGRlZmF1bHRzIG9mIHRoZSBlbGVtZW50cyB1c2VkIGJ5IHRoZSBQYXJhZ3JhcGhcclxuICAgRm9ybWF0IHBhbmVsLiAqL1xyXG4uY2tlX3BhbmVsX2xpc3RJdGVtIHtcclxuICBwLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwcmUge1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgfVxyXG59XHJcbiIsIi8qKlxuICogQ0tFZGl0b3IgY29uZmlnLlxuICovXG4uY2tlX2VkaXRhYmxlIHtcbiAgcGFkZGluZzogJGlucHV0LXBhZGRpbmcteSAkaW5wdXQtcGFkZGluZy14O1xuICBmb250LXNpemU6ICRmb250LXNpemUtYmFzZTtcbiAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodC1iYXNlO1xuICBjb2xvcjogJGlucHV0LWNvbG9yO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkaW5wdXQtYmc7XG4gIGhlaWdodDogMTAwJTtcbiAgb3V0bGluZTogMDtcblxuICAuY2tlX2ZvY3VzICYge1xuICAgIGNvbG9yOiAkaW5wdXQtZm9jdXMtY29sb3I7XG4gIH1cblxuICBhIHtcbiAgICBjb2xvcjogIzAwMDtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuXG4gIGJsb2NrcXVvdGUge1xuICAgIHBhZGRpbmc6ICRpbnB1dC1wYWRkaW5nLXg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXktMjAwO1xuICB9XG5cbiAgaDEge1xuICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlICsgMTBweDtcbiAgfVxuXG4gIGgyIHtcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtYmFzZSArIDhweDtcbiAgfVxuXG4gIGgzIHtcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtYmFzZSArIDZweDtcbiAgfVxuXG4gIGg0IHtcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtYmFzZSArIDRweDtcbiAgfVxuXG4gIGg1IHtcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtYmFzZSArIDJweDtcbiAgfVxuXG4gIHA6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuXG4gIHRhYmxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICB0ZCB7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICBwYWRkaW5nOiAuNWVtO1xuICB9XG59IiwiLypcclxuQ29weXJpZ2h0IChjKSAyMDAzLTIwMTQsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbkZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHA6Ly9ja2VkaXRvci5jb20vbGljZW5zZVxyXG4qL1xyXG5cclxuLypcclxuY29sb3JwYW5lbC5jc3MgKHBhcnQgb2YgZWRpdG9yLmNzcylcclxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuVGhlIGNvbG9yIHBhbmVsIGlzIHJlbGF0ZWQgdG8gdGhlIGNvbnRlbnRzIHBhcnQgb2YgdGhlIHBhbmVscyB0aGF0IGFyZVxyXG5kaXNwbGF5ZWQgd2hlbiBjbGlja2luZyB0aGUgY29sb3IgYnV0dG9ucyBvZiB0aGUgdG9vbGJhci4gU2VlIHBhbmVscy5jc3MgZm9yXHJcbnN0eWxlcyByZWxhdGVkIHRvIHRoZSBvdXRlciBwYXJ0IG9mIHBhbmVscy5cclxuXHJcblRoZSBmb2xsb3dpbmcgaXMgdGhlIHZpc3VhbCByZXByZXNlbnRhdGlvbiBvZiB0aGUgY29sb3IgcGFuZWwgY29udGVudHM6XHJcblxyXG4rLS0gLmNrZV9wYW5lbF9ibG9jay5ja2VfY29sb3JibG9jayAtLStcclxufCArLS0gYS5ja2VfY29sb3JhdXRvIC0tLS0tLS0tLS0tLS0tKyB8XHJcbnwgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgfFxyXG58IHwgICAgICAgICBBVVRPTUFUSUMgQ09MT1IgICAgICAgICB8IHxcclxufCB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfFxyXG58ICstLSB0YWJsZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxufCB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB8XHJcbnwgfCAgICAgICAgICBDT0xPUiBQQUxFVFRFICAgICAgICAgIHwgfFxyXG58IHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHxcclxufCB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfCB8XHJcbnwgfCAgICAgICAgICBcIk1vcmUgQ29sb3JzXCIgICAgICAgICAgfCB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfFxyXG4rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxuXHJcblRoZSBBVVRPTUFUSUMgQ09MT1Igc2VjdGlvbiBpcyBhbiA8YT4gY29udGFpbmluZyBhIHRhYmxlIHdpdGggdHdvIGNlbGxzIHdpdGhcclxudGhlIGZvbGxvd2luZyBjb250ZW50czpcclxuXHJcbistLSBURCAtLS0tLS0tLS0tLS0tLS0tLSsgKy0tIFREIC0tLS0tLS0tLS0tLS0tLS0tK1xyXG58ICstLSAuY2tlX2NvbG9yYm94IC0tKyB8IHwgICAgICAgICAgICAgICAgICAgICAgIHxcclxufCB8ICAgICAgICAgICAgICAgICAgIHwgfCB8ICAgICAgXCJBdXRvbWF0aWNcIiAgICAgIHxcclxufCArLS0tLS0tLS0tLS0tLS0tLS0tLSsgfCB8ICAgICAgICAgICAgICAgICAgICAgICB8XHJcbistLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG5cclxuVGhlIENPTE9SIFBBTEVUVEUgc2VjdGlvbiBpbnN0ZWFkIGlzIGEgdGFibGUgd2l0aCBhIHZhcmlhYmxlIG51bWJlciBvZiBjZWxsc1xyXG4oYnkgZGVmYXVsdCA4KS4gRWFjaCBjZWxsIHJlcHJlc2VudHMgYSBjb2xvciBib3gsIHdpdGggdGhlIGZvbGxvd2luZyBzdHJ1Y3R1cmU6XHJcblxyXG4rLS0gQS5ja2VfY29sb3Jib3ggLS0tLS0tLS0tK1xyXG58ICstLSBTUEFOLmNrZV9jb2xvcmJveCAtLSsgfFxyXG58IHwgICAgICAgICAgICAgICAgICAgICAgIHwgfFxyXG58ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfFxyXG4rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG4qL1xyXG5cclxuLyogVGhlIGNvbnRhaW5lciBvZiB0aGUgY29sb3IgcGFsZXR0ZS4gKi9cclxuLmNrZV9jb2xvcmJsb2NrIHtcclxuICBwYWRkaW5nOiAzcHg7XHJcbiAgZm9udC1zaXplOiAxMXB4O1xyXG4gIGZvbnQtZmFtaWx5OiAnTWljcm9zb2Z0IFNhbnMgU2VyaWYnLCBUYWhvbWEsIEFyaWFsLCBWZXJkYW5hLCBTYW5zLVNlcmlmO1xyXG59XHJcblxyXG4uY2tlX2NvbG9yYmxvY2ssXHJcbi5ja2VfY29sb3JibG9jayBhIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6ICMwMDA7XHJcbn1cclxuXHJcbi8qIFRoZSBib3ggd2hpY2ggaXMgdG8gcmVwcmVzZW50IGEgc2luZ2xlIGNvbG9yIG9uIHRoZSBjb2xvciBwYWxldHRlLlxyXG4gICBJdCBpcyBhIHNtYWxsLCBzcXVhcmUtc2hhcGVkIGVsZW1lbnQgd2hpY2ggY2FuIGJlIHNlbGVjdGVkIGZyb20gdGhlIHBhbGV0dGUuICovXHJcbnNwYW4uY2tlX2NvbG9yYm94IHtcclxuICB3aWR0aDogMTBweDtcclxuICBoZWlnaHQ6IDEwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktNTAwO1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG59XHJcblxyXG4uY2tlX3J0bCBzcGFuLmNrZV9jb2xvcmJveCB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4vKiBUaGUgd3JhcHBlciBvZiB0aGUgc3Bhbi5ja2VfY29sb3Jib3guIEl0IHByb3ZpZGVzIGFuIGV4dHJhIGJvcmRlciBhbmQgcGFkZGluZy4gKi9cclxuYS5ja2VfY29sb3Jib3gge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XHJcbiAgcGFkZGluZzogMnB4O1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIHdpZHRoOiAxMnB4O1xyXG4gIGhlaWdodDogMTJweDtcclxuICBib3JkZXItcmFkaXVzOiAycHg7XHJcbn1cclxuXHJcbi5ja2VfcnRsIGEuY2tlX2NvbG9yYm94IHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbi8qIERpZmZlcmVudCBzdGF0ZXMgb2YgdGhlIGEuY2tlX2NvbG9yYm94IHdyYXBwZXIuICovXHJcbmEge1xyXG4gICY6aG92ZXIsICY6Zm9jdXMsICY6YWN0aXZlIHtcclxuICAgICYuY2tlX2NvbG9yYm94IHtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgJGlucHV0LWJvcmRlci1jb2xvcjtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXktNDAwO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLyogQnV0dG9ucyB3aGljaCBhcmUgdmlzaWJsZSBhdCB0aGUgdG9wL2JvdHRvbSBvZiB0aGUgY29sb3IgcGFsZXR0ZTpcclxuICAgLSBja2VfY29sb3JhdXRvIChUT1ApIGFwcGxpZXMgdGhlIGF1dG9tYXRpYyBjb2xvci5cclxuICAgLSBja2VfY29sb3Jtb3JlIChCT1RUT00pIGV4ZWN1dGVzIHRoZSBjb2xvciBkaWFsb2cuXHJcbiovXHJcbmEuY2tlX2NvbG9yYXV0bywgYS5ja2VfY29sb3Jtb3JlIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xyXG4gIHBhZGRpbmc6IDJweDtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi8qIERpZmZlcmVudCBzdGF0ZXMgb2YgY2tlX2NvbG9yYXV0by9ja2VfY29sb3Jtb3JlIGJ1dHRvbnMuICovXHJcbmEge1xyXG4gICY6aG92ZXIsICY6Zm9jdXMsICY6YWN0aXZlIHtcclxuICAgICYuY2tlX2NvbG9yYXV0bywgJi5ja2VfY29sb3Jtb3JlIHtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgJGlucHV0LWJvcmRlci1jb2xvcjtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXktNDAwO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIvKlxyXG5Db3B5cmlnaHQgKGMpIDIwMDMtMjAxNCwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cDovL2NrZWRpdG9yLmNvbS9saWNlbnNlXHJcbiovXHJcblxyXG4vKlxyXG50b29sYmFyLmNzcyAocGFydCBvZiBlZGl0b3IuY3NzKVxyXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5UaGlzIGZpbGVzIHN0eWxlcyB0aGUgQ0tFZGl0b3IgdG9vbGJhciBhbmQgaXRzIGJ1dHRvbnMuIEZvciB0b29sYmFyIGNvbWJvXHJcbnN0eWxlcywgY2hlY2sgcmljaGNvbWJvLmNzcy5cclxuXHJcblRoZSB0b29sYmFyIGlzIHJlbmRlcmVkIGFzIGEgYmlnIGNvbnRhaW5lciAoY2FsbGVkIHRvb2xib3gpLCB3aGljaCBjb250YWluc1xyXG5zbWFsbGVyIFwidG9vbGJhcnNcIi4gRWFjaCB0b29sYmFyIHJlcHJlc2VudHMgYSBncm91cCBvZiBpdGVtcyB0aGF0IGNhbm5vdCBiZVxyXG5zZXBhcmF0ZWQuIFRoZSBmb2xsb3dpbmcgaXMgdGhlIHZpc3VhbCByZXByZXNlbnRhdGlvbiBvZiB0aGUgdG9vbGJveC5cclxuXHJcbistLSAuY2tlX3Rvb2xib3ggLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxufCArLS0gLmNrZV90b29sYmFyIC0tKyArLS0gLmNrZV90b29sYmFyIC0tKyAuLi4gKy0tIC5ja2VfdG9vbGJhcl9icmVhayAtLSsgfFxyXG58IHwgICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICB8ICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgfCB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLSsgICAgICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxufCArLS0gLmNrZV90b29sYmFyIC0tKyArLS0gLmNrZV90b29sYmFyIC0tKyAuLi4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxyXG58IHwgICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLSsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHxcclxuKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG5cclxuVGhlIGZvbGxvd2luZyBpbnN0ZWFkIGlzIHRoZSB2aXN1YWwgcmVwcmVzZW50YXRpb24gb2YgYSBzaW5nbGUgdG9vbGJhcjpcclxuXHJcbistLSAuY2tlX3Rvb2xiYXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxufCArLS0gLmNrZV90b29sYmFyX3N0YXJ0IC0tKyArLS0gLmNrZV90b29sZ3JvdXAgKCopIC0tKyArLS0gLmNrZV90b29sYmFyX2VuZCAtLSsgfFxyXG58IHwgICAgICAgICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgfCB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxuKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG4oKikgLmNrZV90b29sZ3JvdXAgaXMgYXZhaWxhYmxlIG9ubHkgd2hlbiB0aGUgdG9vbGJhciBpdGVtcyBjYW4gYmUgZ3JvdXBlZFxyXG4gICAgKGJ1dHRvbnMpLiBJZiB0aGUgaXRlbXMgY2FuJ3QgYmUgZ3JvdXAgKGNvbWJvcyksIHRoaXMgYm94IGlzIG5vdCBhdmFpbGFibGVcclxuICAgIGFuZCB0aGUgaXRlbXMgYXJlIHJlbmRlcmVkIHN0cmFpZ2h0IGluIHRoYXQgcGxhY2UuXHJcblxyXG5UaGlzIGZpbGUgYWxzbyBzdHlsZXMgdG9vbGJhciBidXR0b25zLCB3aGljaCBhcmUgcmVuZGVyZWQgaW5zaWRlIHRoZSBhYm92ZVxyXG4uY2tlX3Rvb2xncm91cCBjb250YWluZXJzLiBUaGlzIGlzIHRoZSB2aXN1YWwgcmVwcmVzZW50YXRpb24gb2YgYSBidXR0b246XHJcblxyXG4rLS0gLmNrZV9idXR0b24gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxufCArLS0gLmNrZV9idXR0b25faWNvbiAtLSsgKy0tIC5ja2VfYnV0dG9uX2xhYmVsIC0tKyB8XHJcbnwgfCAgICAgICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgIHwgfFxyXG58ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHxcclxuKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rXHJcblxyXG5TcGVjaWFsIG91dGVyIGxldmVsIGNsYXNzZXMgdXNlZCBpbiB0aGlzIGZpbGU6XHJcblxyXG4gICAgLmNrZV9oYzogQXZhaWxhYmxlIHdoZW4gdGhlIGVkaXRvciBpcyByZW5kZXJlZCBvbiBcIkhpZ2ggQ29udHJhc3RcIi5cclxuICAgIC5ja2VfcnRsOiBBdmFpbGFibGUgd2hlbiB0aGUgZWRpdG9yIFVJIGlzIG9uIFJUTC5cclxuKi9cclxuXHJcbi8qIFRoZSBib3ggdGhhdCBob2xkcyBlYWNoIHRvb2xiYXIuICovXHJcbi5ja2VfdG9vbGJhciB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbi5ja2VfcnRsIC5ja2VfdG9vbGJhciB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4vKiBUaGUgYm94IHRoYXQgaG9sZHMgYnV0dG9ucy4gKi9cclxuLmNrZV90b29sZ3JvdXAge1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIG1hcmdpbi1yaWdodDogMTBweDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJvcmRlcjogMDtcclxuICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcclxufVxyXG5cclxuLmNrZV9oYyAuY2tlX3Rvb2xncm91cCB7XHJcbiAgYm9yZGVyOiAwO1xyXG4gIG1hcmdpbi1yaWdodDogMTBweDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4uY2tlX3J0bCAuY2tlX3Rvb2xncm91cCAqOmZpcnN0LWNoaWxkIHtcclxuICBib3JkZXItcmFkaXVzOiAwICRib3JkZXItcmFkaXVzICRib3JkZXItcmFkaXVzIDA7XHJcbn1cclxuXHJcbi5ja2VfcnRsIC5ja2VfdG9vbGdyb3VwICo6bGFzdC1jaGlsZCB7XHJcbiAgYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMgMCAwICRib3JkZXItcmFkaXVzO1xyXG59XHJcblxyXG4uY2tlX3J0bCAuY2tlX3Rvb2xncm91cCB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIG1hcmdpbi1sZWZ0OiA2cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAwO1xyXG59XHJcblxyXG4vKiBBIHRvb2xiYXIgYnV0dG9uIC4gKi9cclxuYS5ja2VfYnV0dG9uIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxcHg7XHJcbiAgcGFkZGluZzogJGlucHV0LXBhZGRpbmcteSAkaW5wdXQtcGFkZGluZy14O1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbiAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xyXG4gIGJhY2tncm91bmQ6ICR3aGl0ZTtcclxufVxyXG5cclxuLmNrZV9ydGwgLmNrZV9idXR0b24ge1xyXG4gIGZsb2F0OiByaWdodDtcclxufVxyXG5cclxuLmNrZV9oYyAuY2tlX2J1dHRvbiB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcblxyXG4gIC8qIENvbXBlbnNhdGUgdGhlIGFkZGVkIGJvcmRlciAqL1xyXG4gIHBhZGRpbmc6IDNweCA1cHg7XHJcbiAgbWFyZ2luOiAtMnB4IDRweCAwIC0ycHg7XHJcbn1cclxuXHJcbi8qIFRoaXMgY2xhc3MgaXMgYXBwbGllZCB0byB0aGUgYnV0dG9uIHdoZW4gaXQgaXMgXCJhY3RpdmVcIiAocHVzaGVkKS5cclxuICAgVGhpcyBzdHlsZSBpbmRpY2F0ZXMgdGhhdCB0aGUgZmVhdHVyZSBhc3NvY2lhdGVkIHdpdGggdGhlIGJ1dHRvbiBpcyBhY3RpdmVcclxuICAgaS5lLiBjdXJyZW50bHkgd3JpdGluZyBpbiBib2xkIG9yIHdoZW4gc3BlbGwgY2hlY2tpbmcgaXMgZW5hYmxlZC4gKi9cclxuYS5ja2VfYnV0dG9uX29uIHtcclxuICBiYWNrZ3JvdW5kOiAkZ3JheS0yMDA7XHJcbiAgYm9yZGVyLWNvbG9yOiAkaW5wdXQtYm9yZGVyLWNvbG9yO1xyXG59XHJcblxyXG4uY2tlX2hjIHtcclxuICAuY2tlX2J1dHRvbl9vbiB7XHJcbiAgICAvL2JvcmRlci13aWR0aDogM3B4O1xyXG4gICAgLyogQ29tcGVuc2F0ZSB0aGUgYm9yZGVyIGNoYW5nZSAqL1xyXG4gICAgLy9wYWRkaW5nOiAxcHggM3B4O1xyXG4gIH1cclxuXHJcbiAgYS5ja2VfYnV0dG9uX29mZiwgYS5ja2VfYnV0dG9uX2Rpc2FibGVkIHtcclxuICAgICY6aG92ZXIsICY6Zm9jdXMsICY6YWN0aXZlIHtcclxuICAgICAgLy9ib3JkZXItd2lkdGg6IDNweDtcclxuICAgICAgLyogQ29tcGVuc2F0ZSB0aGUgYm9yZGVyIGNoYW5nZSAqL1xyXG4gICAgICAvL3BhZGRpbmc6IDFweCAzcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vKiBUaGlzIGNsYXNzIGlzIGFwcGxpZWQgdG8gdGhlIGJ1dHRvbiB3aGVuIHRoZSBmZWF0dXJlIGFzc29jaWF0ZWQgd2l0aCB0aGVcclxuICAgYnV0dG9uIGNhbm5vdCBiZSB1c2VkIChncmF5ZWQtb3V0KS5cclxuICAgaS5lLiBwYXN0ZSBidXR0b24gcmVtYWlucyBkaXNhYmxlZCB3aGVuIHRoZXJlIGlzIG5vdGhpbmcgaW4gdGhlIGNsaXBib2FyZCB0b1xyXG4gICBiZSBwYXN0ZWQuICovXHJcbi5ja2VfYnV0dG9uX2Rpc2FibGVkIC5ja2VfYnV0dG9uX2ljb24ge1xyXG4gIG9wYWNpdHk6IDAuMztcclxufVxyXG5cclxuLmNrZV9oYyAuY2tlX2J1dHRvbl9kaXNhYmxlZCB7XHJcbiAgb3BhY2l0eTogMC41O1xyXG59XHJcblxyXG4vL2EuY2tlX2J1dHRvbl9vbiB7XHJcbi8vICAmOmhvdmVyLCAmOmZvY3VzLCAmOmFjdGl2ZSB7XHJcbi8vICB9XHJcbi8vfVxyXG5cclxuYS5ja2VfYnV0dG9uX29mZiwgYS5ja2VfYnV0dG9uX2Rpc2FibGVkIHtcclxuICAmOmhvdmVyLCAmOmZvY3VzLCAmOmFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAkZ3JheS0zMDA7XHJcbiAgICBib3JkZXItY29sb3I6ICRncmF5LTMwMDtcclxuICB9XHJcbn1cclxuXHJcbi8qIFRoZSBpY29uIHdoaWNoIGlzIGEgdmlzdWFsIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBidXR0b24uICovXHJcbi5ja2VfYnV0dG9uX2ljb24ge1xyXG4gIGN1cnNvcjogaW5oZXJpdDtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIG1hcmdpbi10b3A6IDFweDtcclxuICB3aWR0aDogMTZweDtcclxuICBoZWlnaHQ6IDE2cHg7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4uY2tlX3J0bCAuY2tlX2J1dHRvbl9pY29uIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbi5ja2VfaGMgLmNrZV9idXR0b25faWNvbiB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLyogVGhlIGxhYmVsIG9mIHRoZSBidXR0b24gdGhhdCBzdG9yZXMgdGhlIG5hbWUgb2YgdGhlIGZlYXR1cmUuIEJ5IGRlZmF1bHQsXHJcbiAgIGxhYmVscyBhcmUgaW52aXNpYmxlLiBUaGV5IGNhbiBiZSByZXZlYWxlZCBvbiBkZW1hbmQgdGhvdWdoLiAqL1xyXG4uY2tlX2J1dHRvbl9sYWJlbCB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBwYWRkaW5nLWxlZnQ6IDNweDtcclxuICBtYXJnaW4tdG9wOiAxcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDE4cHg7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICBmbG9hdDogbGVmdDtcclxuICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgY29sb3I6ICRncmF5LTkwMDtcclxufVxyXG5cclxuLmNrZV9ydGwgLmNrZV9idXR0b25fbGFiZWwge1xyXG4gIHBhZGRpbmctcmlnaHQ6IDNweDtcclxuICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4uY2tlX2hjIC5ja2VfYnV0dG9uX2xhYmVsIHtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBmb250LXNpemU6IDEycHg7XHJcbn1cclxuXHJcbi8qIFRoZSBzbWFsbCBhcnJvdyBhdmFpbGFibGUgb24gYnV0dG9ucyB0aGF0IGNhbiBiZSBleHBhbmRlZFxyXG4gICAoZS5nLiB0aGUgY29sb3IgYnV0dG9ucykuICovXHJcbi5ja2VfYnV0dG9uX2Fycm93IHtcclxuICAvKiBBcnJvdyBpbiBDU1MgKi9cclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbWFyZ2luOiA4cHggMCAwIDFweDtcclxuICB3aWR0aDogMDtcclxuICBoZWlnaHQ6IDA7XHJcbiAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBib3JkZXItdG9wOiAzcHggc29saWQgIzQ3NDc0NztcclxufVxyXG5cclxuLmNrZV9ydGwgLmNrZV9idXR0b25fYXJyb3cge1xyXG4gIG1hcmdpbi1yaWdodDogNXB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAwO1xyXG59XHJcblxyXG4uY2tlX2hjIC5ja2VfYnV0dG9uX2Fycm93IHtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgbWFyZ2luOiAzcHggLTJweCAwIDNweDtcclxuICB3aWR0aDogYXV0bztcclxuICBib3JkZXI6IDA7XHJcbn1cclxuXHJcbi8qIFRoZSB2ZXJ0aWNhbCBzZXBhcmF0b3Igd2hpY2ggaXMgdXNlZCB3aXRoaW4gYSBzaW5nbGUgdG9vbGJhciB0byBzcGxpdFxyXG4gICBidXR0b25zIGludG8gc3ViLWdyb3Vwcy4gKi9cclxuLmNrZV90b29sYmFyX3NlcGFyYXRvciB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGlucHV0LWJvcmRlci1jb2xvcjtcclxuICBtYXJnaW46IDRweCAycHggMDtcclxuICBoZWlnaHQ6IDE2cHg7XHJcbiAgd2lkdGg6IDFweDtcclxufVxyXG5cclxuLmNrZV9ydGwgLmNrZV90b29sYmFyX3NlcGFyYXRvciB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4uY2tlX2hjIC5ja2VfdG9vbGJhcl9zZXBhcmF0b3Ige1xyXG4gIHdpZHRoOiAwO1xyXG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQ7XHJcbiAgbWFyZ2luOiAxcHggNXB4IDAgMDtcclxufVxyXG5cclxuLyogVGhlIGR1bW15IGVsZW1lbnQgdGhhdCBicmVha3MgdG9vbGJhcnMuXHJcbiAgIE9uY2UgaXQgaXMgcGxhY2VkLCB0aGUgdmVyeSBuZXh0IHRvb2xiYXIgaXMgbW92ZWQgdG8gdGhlIG5ldyByb3cuICovXHJcbi5ja2VfdG9vbGJhcl9icmVhayB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgY2xlYXI6IGxlZnQ7XHJcbn1cclxuXHJcbi5ja2VfcnRsIC5ja2VfdG9vbGJhcl9icmVhayB7XHJcbiAgY2xlYXI6IHJpZ2h0O1xyXG59XHJcblxyXG4vKiBUaGUgYnV0dG9uLCB3aGljaCB3aGVuIGNsaWNrZWQgaGlkZXMgKGNvbGxhcHNlcykgYWxsIHRoZSB0b29sYmFycy4gKi9cclxuLmNrZV90b29sYm94X2NvbGxhcHNlciB7XHJcbiAgd2lkdGg6IDEycHg7XHJcbiAgaGVpZ2h0OiAxMXB4O1xyXG4gIGZsb2F0OiByaWdodDtcclxuICBtYXJnaW46IDExcHggMCAwO1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICBib3JkZXI6IDFweCBzb2xpZCAjYTZhNmE2O1xyXG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICM5Nzk3OTc7XHJcblxyXG4gIGJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xyXG5cclxuICBiYWNrZ3JvdW5kOiAjZTRlNGU0O1xyXG5cclxuICAmOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQ6ICNjY2M7XHJcbiAgfVxyXG5cclxuICAmLmNrZV90b29sYm94X2NvbGxhcHNlcl9taW4ge1xyXG4gICAgbWFyZ2luOiAwIDJweCA0cHg7XHJcblxyXG4gICAgLmNrZV9hcnJvdyB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDRweDtcclxuICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgIGJvcmRlci10b3AtY29sb3I6ICM0NzQ3NDc7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKiBUaGUgQ1NTIGFycm93LCB3aGljaCBiZWxvbmdzIHRvIHRoZSB0b29sYmFyIGNvbGxhcHNlci4gKi9cclxuICAuY2tlX2Fycm93IHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHJcbiAgICAvKiBQdXJlIENTUyBBcnJvdyAqL1xyXG4gICAgaGVpZ2h0OiAwO1xyXG4gICAgd2lkdGg6IDA7XHJcbiAgICBmb250LXNpemU6IDA7XHJcbiAgICBtYXJnaW4tdG9wOiAxcHg7XHJcbiAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgIzQ3NDc0NztcclxuICAgIGJvcmRlci10b3A6IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICB9XHJcbn1cclxuXHJcbi5ja2VfcnRsIC5ja2VfdG9vbGJveF9jb2xsYXBzZXIge1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG59XHJcblxyXG4uY2tlX2hjIC5ja2VfdG9vbGJveF9jb2xsYXBzZXIgLmNrZV9hcnJvdyB7XHJcbiAgZm9udC1zaXplOiA4cHg7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgYm9yZGVyOiAwO1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbiAgbWFyZ2luLXJpZ2h0OiAycHg7XHJcbn1cclxuIiwiLypcclxuQ29weXJpZ2h0IChjKSAyMDAzLTIwMTQsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbkZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHA6Ly9ja2VkaXRvci5jb20vbGljZW5zZVxyXG4qL1xyXG5cclxuLypcclxubWVudS5jc3MgKHBhcnQgb2YgZWRpdG9yLmNzcylcclxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuVGhpcyBmaWxlIHN0eWxlcyBtZW51cyB1c2VkIGluIHRoZSBlZGl0b3IgVUkuIFRoZXNlIG1lbnVzIGFyZSB0aGUgbGlzdCBvZlxyXG5vcHRpb25zIGF2YWlsYWJsZSBpbnNpZGUgc29tZSBcImZsb2F0aW5nIHBhbmVsc1wiLCBsaWtlIG1lbnUgYnV0dG9ucyBvZiB0aGVcclxudG9vbGJhciBvciB0aGUgY29udGV4dCBtZW51LlxyXG5cclxuTm90ZSB0aGF0IHRoZSBtZW51IGl0c2VsZiBkb2Vzbid0IGluY2x1ZGUgdGhlIGZsb2F0aW5nIGVsZW1lbnQgdGhhdCBob2xkcyBpdC5cclxuVGhhdCBlbGVtZW50IGlzIHN0eWxlcyBpbiB0aGUgcGFuZWwuY3NzIGZpbGUuXHJcblxyXG5UaGUgZm9sbG93aW5nIGlzIGEgdmlzdWFsIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBtYWluIGVsZW1lbnRzIG9mIGEgbWVudTpcclxuXHJcbistLSAuY2tlX21lbnUgLS0tLS0tLS0tLS0tLS0tLS0rXHJcbnwgKy0tIC5ja2VfbWVudWl0ZW0gIC0tLS0tLS0tKyB8XHJcbnwgfCArLS0gLmNrZV9tZW51YnV0dG9uIC0tLSsgfCB8XHJcbnwgfCB8ICAgICAgICAgICAgICAgICAgICAgIHwgfCB8XHJcbnwgfCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfCB8XHJcbnwgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8XHJcbnwgKy0tIC5ja2VfbWVudXNlcGFyYXRvciAtLS0tKyB8XHJcbnwgLi4uICAgICAgICAgICAgICAgICAgICAgICAgICB8XHJcbistLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rXHJcblxyXG5UaGlzIGlzIHRoZSAuY2tlX21lbnVidXR0b24gc3RydWN0dXJlOlxyXG4oTm90ZSB0aGF0IHRoZSBtZW51IGJ1dHRvbiBpY29uIHNoYXJlcyB3aXRoIHRvb2xiYXIgYnV0dG9uIHRoZSBjb21tb24gY2xhc3MgLmNrZV9idXR0b25faWNvbiB0byBhY2hpZXZlIHRoZSBzYW1lIG91dGxvb2suKVxyXG5cclxuKy0tIC5ja2VfbWVudWJ1dHRvbiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG58ICstLSAuY2tlX21lbnVidXR0b25faW5uZXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8XHJcbnwgfCArLS0gLmNrZV9tZW51YnV0dG9uX2ljb24gLS0tKyArLS0gLmNrZV9tZW51YnV0dG9uX2xhYmVsIC0tKyArLS0gLmNrZV9ja2VfbWVudWFycm93IC0tKyB8IHxcclxufCB8IHwgKy0tIC5ja2VfYnV0dG9uX2ljb24gLS0tKyB8IHwgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgICB8IHwgfFxyXG58IHwgfCB8ICAgICAgICAgICAgICAgICAgICAgICB8IHwgfCAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgfCAgICAgICAgICAgICAgICAgICAgICAgIHwgfCB8XHJcbnwgfCB8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfCB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB8ICAgICAgICAgICAgICAgICAgICAgICAgfCB8IHxcclxufCB8ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfFxyXG58ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8XHJcbistLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxuXHJcblNwZWNpYWwgb3V0ZXIgbGV2ZWwgY2xhc3NlcyB1c2VkIGluIHRoaXMgZmlsZTpcclxuXHJcbiAgICAuY2tlX2hjOiBBdmFpbGFibGUgd2hlbiB0aGUgZWRpdG9yIGlzIHJlbmRlcmVkIG9uIFwiSGlnaCBDb250cmFzdFwiLlxyXG4gICAgLmNrZV9ydGw6IEF2YWlsYWJsZSB3aGVuIHRoZSBlZGl0b3IgVUkgaXMgb24gUlRMLlxyXG4qL1xyXG5cclxuLyogLmNrZV9tZW51aXRlbSBpcyB0aGUgZWxlbWVudCB0aGF0IGhvbGRzIHRoZSBlbnRpcmUgc3RydWN0dXJlIG9mIGVhY2ggb2YgdGhlXHJcbiAgIG1lbnUgaXRlbXMuICovXHJcblxyXG4uY2tlX21lbnVidXR0b24ge1xyXG4gIC8qIFRoZSBcImJ1dHRvblwiIGluc2lkZSBhIG1lbnUgaXRlbSBpcyBhIDxhPiBlbGVtZW50LlxyXG4gICAgIFRyYW5zZm9ybXMgaXQgaW50byBhIGJsb2NrLiAqL1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uY2tlX2J1dHRvbl9pY29uIHtcclxuICBvcGFjaXR5OiAuODtcclxufVxyXG5cclxuLmNrZV9tZW51aXRlbSBzcGFuIHtcclxuICAvKiBBdm9pZCB0aGUgdGV4dCBzZWxlY3Rpb24gY3Vyc29yIGluc2lkZSBtZW51IGl0ZW1zLiAqL1xyXG4gIGN1cnNvcjogZGVmYXVsdDtcclxufVxyXG5cclxuLmNrZV9tZW51YnV0dG9uIHtcclxuICAmOmhvdmVyLCAmOmZvY3VzLCAmOmFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDNEM0QzO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG59XHJcblxyXG4uY2tlX2hjIC5ja2VfbWVudWJ1dHRvbiB7XHJcbiAgcGFkZGluZzogMnB4O1xyXG5cclxuICAmOmhvdmVyLCAmOmZvY3VzLCAmOmFjdGl2ZSB7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG59XHJcblxyXG4uY2tlX21lbnVidXR0b25faW5uZXIge1xyXG4gIGRpc3BsYXk6IHRhYmxlLXJvdztcclxufVxyXG5cclxuLmNrZV9tZW51YnV0dG9uX2ljb24sXHJcbi5ja2VfbWVudWJ1dHRvbl9sYWJlbCxcclxuLmNrZV9tZW51YXJyb3cge1xyXG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbn1cclxuXHJcbi8qIFRoZSBtZW51IGl0ZW0gaWNvbi4gKi9cclxuLmNrZV9tZW51YnV0dG9uX2ljb24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNEN0Q4RDc7XHJcbiAgb3BhY2l0eTogMC43MDsgLyogU2FmYXJpLCBPcGVyYSBhbmQgTW96aWxsYSAqL1xyXG4gIGZpbHRlcjogYWxwaGEob3BhY2l0eT03MCk7IC8qIElFICovXHJcbiAgcGFkZGluZzogNHB4O1xyXG59XHJcblxyXG4uY2tlX2hjIC5ja2VfbWVudWJ1dHRvbl9pY29uIHtcclxuICBoZWlnaHQ6IDE2cHg7XHJcbiAgd2lkdGg6IDA7XHJcbiAgcGFkZGluZzogNHB4IDA7XHJcbn1cclxuXHJcbi5ja2VfbWVudWJ1dHRvbiB7XHJcbiAgJjpob3ZlciwgJjpmb2N1cywgJjphY3RpdmUge1xyXG4gICAgLmNrZV9tZW51YnV0dG9uX2ljb24ge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDBEMkQwO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmNrZV9tZW51YnV0dG9uX2Rpc2FibGVkIHtcclxuICAmOmhvdmVyLCAmOmZvY3VzLCAmOmFjdGl2ZSB7XHJcbiAgICAuY2tlX21lbnVidXR0b25faWNvbiB7XHJcbiAgICAgIC8qIFRoZSBpY29uIHdpbGwgZ2V0IG9wYWNpdHkgYXMgd2VsbCB3aGVuIGhvdmVyZWQuICovXHJcbiAgICAgIG9wYWNpdHk6IDAuMztcclxuICAgICAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTMwKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8qIFRoZSB0ZXh0dWFsIHBhcnQgb2YgZWFjaCBtZW51IGl0ZW0uICovXHJcbi5ja2VfbWVudWJ1dHRvbl9sYWJlbCB7XHJcbiAgcGFkZGluZzogMCA1cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuLmNrZV9tZW51YnV0dG9uX2Rpc2FibGVkIC5ja2VfbWVudWJ1dHRvbl9sYWJlbCB7XHJcbiAgLyogR3JleWVkIGxhYmVsIHRleHQgaW5kaWNhdGVzIGEgZGlzYWJsZWQgbWVudSBpdGVtLiAqL1xyXG4gIG9wYWNpdHk6IDAuMztcclxuICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MzApO1xyXG59XHJcblxyXG4uY2tlX21lbnVidXR0b25fb24ge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZWRlZGU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcclxuXHJcbiAgLmNrZV9tZW51YnV0dG9uX2ljb24ge1xyXG4gICAgcGFkZGluZy1yaWdodDogM3B4O1xyXG4gIH1cclxufVxyXG5cclxuLmNrZV9tZW51YnV0dG9uIHtcclxuICAmOmhvdmVyLCAmOmZvY3VzLCAmOmFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUZGMEVGO1xyXG4gIH1cclxufVxyXG5cclxuLmNrZV9wYW5lbF9mcmFtZSAuY2tlX21lbnVidXR0b25fbGFiZWwge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi8qIFRoZSBzZXBhcmF0b3IgdXNlZCB0byBzZXBhcmF0ZSBtZW51IGl0ZW0gZ3JvdXBzLiAqL1xyXG4uY2tlX21lbnVzZXBhcmF0b3Ige1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNEM0QzRDM7XHJcbiAgaGVpZ2h0OiAxcHg7XHJcbiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTcwKTsgLyogSUUgKi9cclxuICBvcGFjaXR5OiAwLjcwOyAvKiBTYWZhcmksIE9wZXJhIGFuZCBNb3ppbGxhICovXHJcbn1cclxuXHJcbi8qIFRoZSBzbWFsbCBhcnJvdyBzaG93biBmb3IgaXRlbSB3aXRoIHN1Yi1tZW51cy4gKi9cclxuLmNrZV9tZW51YXJyb3cge1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChpbWFnZXMvYXJyb3cucG5nKTtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwcHg7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBwYWRkaW5nOiAwIDVweDtcclxuXHJcbiAgc3BhbiB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuLmNrZV9ydGwgLmNrZV9tZW51YXJyb3cge1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IDVweCAtMTNweDtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG59XHJcblxyXG4uY2tlX2hjIC5ja2VfbWVudWFycm93IHNwYW4ge1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgZGlzcGxheTogaW5saW5lO1xyXG59XHJcbiIsIi8qXHJcbkNvcHlyaWdodCAoYykgMjAwMy0yMDE0LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG5Gb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwOi8vY2tlZGl0b3IuY29tL2xpY2Vuc2VcclxuKi9cclxuXHJcbi8qXHJcbnJpY2hjb21iby5jc3MgKHBhcnQgb2YgZWRpdG9yLmNzcylcclxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5UaGlzIGZpbGUgaG9sZHMgdGhlIHN0eWxlIHNldCBvZiB0aGUgXCJSaWNoIENvbWJvXCIgd2lkZ2V0IHdoaWNoIGlzIGNvbW1vbmx5IHVzZWRcclxuaW4gdGhlIHRvb2xiYXIuIEl0IGRvZXNuJ3QsIGhvd2V2ZXIsIHN0eWxlcyB0aGUgcGFuZWwgdGhhdCBpcyBkaXNwbGF5ZWQgd2hlblxyXG5jbGlja2luZyBvbiB0aGUgY29tYm8sIHdoaWNoIGlzIGluc3RlYWQgc3R5bGVkIGJ5IHBhbmVsLmNzcy5cclxuXHJcblRoZSB2aXN1YWwgcmVwcmVzZW50YXRpb24gb2YgYSByaWNoIGNvbWJvIHdpZGdldCBsb29rcyBhcyBmb2xsb3dzOlxyXG5cclxuKy0tIC5ja2VfY29tYm8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xyXG58ICstLSAuY2tlX2NvbWJvX2xhYmVsIC0tKyArLS0gLmNrZV9jb21ib19idXR0b24gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8XHJcbnwgfCAgICAgICAgICAgICAgICAgICAgICB8IHwgKy0tIC5ja2VfY29tYm9fdGV4dCAtLSsgKy0tIC5ja2VfY29tYm9fb3BlbiAtLS0tLS0tKyB8IHxcclxufCB8ICAgICAgICAgICAgICAgICAgICAgIHwgfCB8ICAgICAgICAgICAgICAgICAgICAgfCB8ICstLSAuY2tlX2NvbWJvX2Fycm93IC0tKyB8IHwgfFxyXG58IHwgICAgICAgICAgICAgICAgICAgICAgfCB8IHwgICAgICAgICAgICAgICAgICAgICB8IHwgfCAgICAgICAgICAgICAgICAgICAgICB8IHwgfCB8XHJcbnwgfCAgICAgICAgICAgICAgICAgICAgICB8IHwgfCAgICAgICAgICAgICAgICAgICAgIHwgfCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgfCB8IHxcclxufCB8ICAgICAgICAgICAgICAgICAgICAgIHwgfCArLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rIHwgfFxyXG58ICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyB8XHJcbistLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLStcclxuKi9cclxuXHJcbi8qIFRoZSBib3ggdGhhdCBob2xkIHRoZSBlbnRpcmUgY29tYm8gd2lkZ2V0ICovXHJcbi5ja2VfY29tYm8ge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBmbG9hdDogbGVmdDtcclxufVxyXG5cclxuLmNrZV9ydGwgLmNrZV9jb21ibyB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4uY2tlX2hjIC5ja2VfY29tYm8ge1xyXG4gIG1hcmdpbi10b3A6IC0ycHg7XHJcbn1cclxuXHJcbi8qIFRoZSBsYWJlbCBvZiB0aGUgY29tYm8gd2lkZ2V0LiBJdCBpcyBpbnZpc2libGUgYnkgZGVmYXVsdCwgeWV0XHJcbiAgIGl0J3MgaW1wb3J0YW50IGZvciBzZW1hbnRpY3MgYW5kIGFjY2Vzc2liaWxpdHkuICovXHJcbi5ja2VfY29tYm9fbGFiZWwge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgbGluZS1oZWlnaHQ6IDI2cHg7XHJcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufVxyXG5cclxuLmNrZV9ydGwgLmNrZV9jb21ib19sYWJlbCB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAwO1xyXG59XHJcblxyXG4vKiBUaGUgY29udGFpbmVyIGZvciBjb21ibyB0ZXh0IGFuZCBhcnJvdy4gKi9cclxuLmNrZV9jb21ib19idXR0b24ge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBmbG9hdDogbGVmdDtcclxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJHdoaXRlO1xyXG4gIGJhY2tncm91bmQ6ICR3aGl0ZTtcclxufVxyXG5cclxuLyogRGlmZmVyZW50IHN0YXRlcyBvZiB0aGUgY29udGFpbmVyLiAqL1xyXG4vLy5ja2VfY29tYm9fb2ZmIHtcclxuLy8gIGEuY2tlX2NvbWJvX2J1dHRvbiB7XHJcbi8vICAgICY6aG92ZXIsICY6Zm9jdXMge1xyXG4vLyAgICAgIG91dGxpbmU6IG5vbmU7XHJcbi8vICAgIH1cclxuLy9cclxuLy8gICAgJjphY3RpdmUge1xyXG4vLyAgICAgIGJvcmRlci1jb2xvcjogJGdyYXktNjAwO1xyXG4vLyAgICB9XHJcbi8vICB9XHJcbi8vfVxyXG5cclxuLmNrZV9jb21ib19vbiB7XHJcbiAgYS5ja2VfY29tYm9fYnV0dG9uIHtcclxuICAgIGJvcmRlci1jb2xvcjogJGlucHV0LWJvcmRlci1jb2xvcjtcclxuICB9XHJcbn1cclxuXHJcbi5ja2VfcnRsIC5ja2VfY29tYm9fYnV0dG9uIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgbWFyZ2luLWxlZnQ6IDVweDtcclxuICBtYXJnaW4tcmlnaHQ6IDA7XHJcbn1cclxuXHJcbi5ja2VfaGMgYS5ja2VfY29tYm9fYnV0dG9uIHtcclxuICBwYWRkaW5nOiAzcHg7XHJcbn1cclxuXHJcbi5ja2VfaGMgLmNrZV9jb21ib19vbiBhLmNrZV9jb21ib19idXR0b24ge1xyXG4gIGJvcmRlci13aWR0aDogM3B4O1xyXG4gIHBhZGRpbmc6IDFweDtcclxufVxyXG5cclxuLmNrZV9oYyAuY2tlX2NvbWJvX29mZiBhLmNrZV9jb21ib19idXR0b24ge1xyXG4gICY6aG92ZXIsICY6Zm9jdXMsICY6YWN0aXZlIHtcclxuICAgIGJvcmRlci13aWR0aDogM3B4O1xyXG4gICAgcGFkZGluZzogMXB4O1xyXG4gIH1cclxufVxyXG5cclxuLyogVGhlIGxhYmVsIHRoYXQgc2hvd3MgdGhlIGN1cnJlbnQgdmFsdWUgb2YgdGhlIHJpY2ggY29tYm8uXHJcbiAgIEJ5IGRlZmF1bHQsIGl0IGhvbGRzIHRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eS5cclxuICAgU2VlOiAuY2tlX2NvbWJvX2lubGluZWxhYmVsICovXHJcbi5ja2VfY29tYm9fdGV4dCB7XHJcbiAgbGluZS1oZWlnaHQ6IDI5cHg7XHJcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBmbG9hdDogbGVmdDtcclxuICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgY29sb3I6ICM0NzQ3NDc7XHJcbiAgd2lkdGg6IDEwMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxufVxyXG5cclxuLmNrZV9ydGwgLmNrZV9jb21ib190ZXh0IHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbn1cclxuXHJcbi5ja2VfaGMgLmNrZV9jb21ib190ZXh0IHtcclxuICBsaW5lLWhlaWdodDogMThweDtcclxuICBmb250LXNpemU6IDEycHg7XHJcbn1cclxuXHJcbi8qIFRoZSBoYW5kbGVyIHdoaWNoIG9wZW5zIHRoZSBwYW5lbCBvZiByaWNoIGNvbWJvIHByb3BlcnRpZXMuXHJcbiAgIEl0IGhvbGRzIGFuIGFycm93IGFzIGEgdmlzdWFsIGluZGljYXRvci4gKi9cclxuLmNrZV9jb21ib19vcGVuIHtcclxuICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGZvbnQtc2l6ZTogMDtcclxuICBoZWlnaHQ6IDE5cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDE3cHg7XHJcbiAgbWFyZ2luOiAycHggMTBweCAwO1xyXG4gIHdpZHRoOiA1cHg7XHJcbn1cclxuXHJcbi5ja2VfaGMgLmNrZV9jb21ib19vcGVuIHtcclxuICBoZWlnaHQ6IDEycHg7XHJcbn1cclxuXHJcbi8qIFRoZSBhcnJvdyB3aGljaCBpcyBkaXNwbGF5ZWQgaW5zaWRlIG9mIHRoZSAuY2tlX2NvbWJvX29wZW4gaGFuZGxlci4gKi9cclxuLmNrZV9jb21ib19hcnJvdyB7XHJcbiAgbWFyZ2luOiAxMXB4IDAgMDtcclxuICBmbG9hdDogbGVmdDtcclxuXHJcbiAgLyogUHVyZSBDU1MgQXJyb3cgKi9cclxuICBoZWlnaHQ6IDA7XHJcbiAgd2lkdGg6IDA7XHJcbiAgZm9udC1zaXplOiAwO1xyXG4gIGJvcmRlci1sZWZ0OiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgYm9yZGVyLXJpZ2h0OiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgYm9yZGVyLXRvcDogM3B4IHNvbGlkICRib2R5LWNvbG9yO1xyXG59XHJcblxyXG4uY2tlX2hjIC5ja2VfY29tYm9fYXJyb3cge1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxuICB3aWR0aDogYXV0bztcclxuICBib3JkZXI6IDA7XHJcbiAgbWFyZ2luLXRvcDogM3B4O1xyXG59XHJcblxyXG4vKiBEaXNhYmxlZCBjb21ibyBidXR0b24gc3R5bGVzLiAqL1xyXG4uY2tlX2NvbWJvX2Rpc2FibGVkIHtcclxuICAuY2tlX2NvbWJvX2lubGluZWxhYmVsLCAuY2tlX2NvbWJvX29wZW4ge1xyXG4gICAgb3BhY2l0eTogMC4zO1xyXG4gIH1cclxufVxyXG4iLCIvKlxyXG5Db3B5cmlnaHQgKGMpIDIwMDMtMjAxNCwgQ0tTb3VyY2UgLSBGcmVkZXJpY28gS25hYmJlbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuRm9yIGxpY2Vuc2luZywgc2VlIExJQ0VOU0UubWQgb3IgaHR0cDovL2NrZWRpdG9yLmNvbS9saWNlbnNlXHJcbiovXHJcblxyXG4vKiBcIlNvdXJjZVwiIGJ1dHRvbiBsYWJlbCAqL1xyXG4uY2tlX2J1dHRvbl9fc291cmNlX2xhYmVsLFxyXG4uY2tlX2J1dHRvbl9fc291cmNlZGlhbG9nX2xhYmVsIHtcclxuICAvL2Rpc3BsYXk6IGlubGluZTtcclxufVxyXG5cclxuLyogXCJGb250IFNpemVcIiBjb21ibyB3aWR0aCAqL1xyXG4uY2tlX2NvbWJvX19mb250c2l6ZSAuY2tlX2NvbWJvX3RleHQge1xyXG4gIHdpZHRoOiAzMHB4O1xyXG59XHJcblxyXG4vKiBcIkZvbnQgU2l6ZVwiIHBhbmVsIHNpemUgKi9cclxuLmNrZV9jb21ib3BhbmVsX19mb250c2l6ZSB7XHJcbiAgd2lkdGg6IDEyMHB4O1xyXG59XHJcblxyXG4vKiBFZGl0YWJsZSByZWdpb25zICovXHJcbi5ja2Vfc291cmNlIHtcclxuICBmb250LWZhbWlseTogJ0NvdXJpZXIgTmV3JywgTW9ub3NwYWNlO1xyXG4gIGZvbnQtc2l6ZTogc21hbGw7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICB3aGl0ZS1zcGFjZTogcHJlO1xyXG59XHJcblxyXG4vLy5ja2Vfd3lzaXd5Z19mcmFtZSwgLmNrZV93eXNpd3lnX2RpdiB7XHJcbi8vICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4vL31cclxuIl19 */
